* An outline, about 50 to 100 lines long

  - How to get started.  Making the project developer-friendly,
      understanding people's motivations, etc.
  - What kind of infrastructure to provide, and how (source code
      repository, project web site, mailing lists, bug tracking,
      IRC channels @ freenode, etc).  Subtopic: various sites that
      provide these services, such as SourceForge and Savannah.
  - Licenses and copyrights: the different DFSG-compliant licenses
      and what they mean.
  - When does a project need a written constitution, and what
      properties should it have?
  - Consensus vs voting: the importance of having a voting system,
      but also, the importance of rarely using it.
  - How to behave / not behave on a mailing list.
  - Harnessing volunteers to distribute the management burden as
      well as the technical burden (i.e, patch management, issue
      management, release management, etc)
  - The importance of credit; also, how to allocate credit without
      starting a credit war.
  - How to handle a fork, either amicable or hostile.
  - The Consent Of The Governed: what leadership means when you have
      no control over people you've never met :-).
  - Money: If funded by a corporation or a consortium, how to balance
      the funder's interests with the volunteers' interests; they
      may be very different.

* Your bio

  I've actually wanted to write this for a while, but only after
  seeing the Subversion project through to this point did I feel I had
  the requisite experience.  I've participated in many other free
  software projects, of course, of all sizes (CVS, GNU-Emacs, various
  smaller ones), so my point of view won't be based solely on
  Subversion.  And although Subversion counts as a successful project,
  it's equally important to analyze failed & struggling ones, to tease
  out some of the patterns they have in common.  I know plenty of
  examples in that department too, both directly and secondhand.

* An estimated page count and date when you'll go to tech review

   ???

* An explanation of the market--how many people you think
  are an appropriate audience

  It might seem there's a lot of overlap here with the book I wrote
  for Coriolis in 1999, "Open Source Development with CVS".  But it's
  not really so much, for two reasons.  First, the bulk of that book
  was about CVS, and how to use CVS to support an open source project.
  Second, frankly, a lot of what I wrote then seems a bit naive today.
  I have a lot more experience now, and I think we can produce a book
  that will be snapped up not just by developers, but by managers at
  some of the large corporations that are beginning to embrace open
  source as a methodology (IBM, Sun, HP, for example).
