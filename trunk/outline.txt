From: Andy Oram <andyo@oreilly.com>
Subject: Preliminary encouragement for your book
To: kfogel@floss.red-bean.com
Date: Wed, 4 Feb 2004 11:18:27 -0500 (EST)

We have an editor here in charge of software engineering
books and related sorts of texts, often with an academic
focus. (But yours doesn't have to be academic.) He likes
your idea. There is another book on software development
here, but we can make sure it doesn't overlap. Would you
submit a more formal proposal? It would have:

  An outline, about 50 to 100 lines long

  Your bio

  An estimated page count and date when you'll go to tech
  review

  An explanation of the market--how many people you think
  are an appropriate audience

Andy

-*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*-

To: chuck@oreilly.com
Subject: Book on running open source projects?
Reply-To: kfogel@red-bean.com
Emacs: everything *and* the kitchen sink.
From: Karl Fogel <kfogel@floss.red-bean.com>
Date: 26 Dec 2003 09:23:04 -0600
In-Reply-To: <3D337EDB.4040102@oreilly.com>
Message-ID: <87hdzn61t3.fsf_-_@floss.red-bean.com>
Lines: 65
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.3.50
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

Hi, Chuck.  We corresponded a while ago about doing a Subversion book,
before I realized that that wasn't the book I wanted to write (better
late than never!) and withdrew.  Fortunately, Brian Fitzpatrick et al
seem to be doing a great job with it, and enjoying themselves to boot.

Now that Subversion is nearing 1.0, I'm wondering if O'Reilly might be
interested in the book I *do* want to write: a book about running free
software projects.  It's a big topic, and it's only going to get more
important with time, as more and more endeavors are run the open
source way, I think.

Would love to talk in detail about the contents; here's a rough
overview:

   - How to get started.  Making the project developer-friendly,
       understanding people's motivations, etc.
   - What kind of infrastructure to provide, and how (source code
       repository, project web site, mailing lists, bug tracking,
       IRC channels @ freenode, etc).  Subtopic: various sites that
       provide these services, such as SourceForge and Savannah.
   - Licenses and copyrights: the different DFSG-compliant licenses
       and what they mean.
   - When does a project need a written constitution, and what
       properties should it have?
   - Consensus vs voting: the importance of having a voting system,
       but also, the importance of rarely using it.
   - How to behave / not behave on a mailing list.
   - Harnessing volunteers to distribute the management burden as
       well as the technical burden (i.e, patch management, issue
       management, release management, etc)
   - The importance of credit; also, how to allocate credit without
       starting a credit war.
   - How to handle a fork, either amicable or hostile.
   - The Consent Of The Governed: what leadership means when you have
       no control over people you've never met :-).
   - Money: If funded by a corporation or a consortium, how to balance
       the funder's interests with the volunteers' interests; they
       may be very different.

I've actually wanted to write this for a while, but only after seeing
the Subversion project through to this point did I feel I had the
requisite experience.  I've participated in many other free software
projects, of course, of all sizes (CVS, GNU-Emacs, various smaller
ones), so my point of view won't be based solely on Subversion.  And
although Subversion counts as a successful project, it's equally
important to analyze failed & struggling ones, to tease out some of
the patterns they have in common.  I know plenty of examples in that
department too, both directly and secondhand.

It might seem there's a lot of overlap here with the book I wrote for
Coriolis in 1999, "Open Source Development with CVS".  But it's not
really so much, for two reasons.  First, the bulk of that book was
about CVS, and how to use CVS to support an open source project.
Second, frankly, a lot of what I wrote then seems a bit naive today.
I have a lot more experience now, and I think we can produce a book
that will be snapped up not just by developers, but by managers at
some of the large corporations that are beginning to embrace open
source as a methodology (IBM, Sun, HP, for example).

Interested?

Thanks,
-Karl Fogel

(773) 288-5016
