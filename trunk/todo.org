     Oh Most Noble and Gracious Emacs, please be in -*- org -*- mode!

This is where pending todo items for the 2nd edition live.

If something you expected to see here is missing, the omission may not
be intentional, or that may be one of the todo items kept in a private
file (because it comes from a confidential suggestion -- the result
will be public, but the information leading to the result is private).
See also the notes.org file, which contains ideas and notes and stuff
that may be actionable some day but that I don't consider to be "todo"
items right now.

* Content ideas
** SFLC copyright management guide:
   http://softwarefreedom.org/resources/2012/ManagingCopyrightInformation.html
** Improvements to sections about security procedures
*** breser points out don't use email to submit security bugs
    <breser> Pushing the ASF to stop using email to submit security issues.
  
    <breser> https://secsubmit.apache.org/
  
    * kfogel looks
  
    <breser> ^ That doesn't go anywhere yet so don't use it.
    
    <breser> I didn't build that Humbedoh did but in response to my
             suggestion at Apache Con
    
    <kfogel> That reminds me that I need to update that section of my
             book, to say the same thing.  Email is obviously the wrong
             way to transmit this kind of information.
    
    <breser> Ohh it's a fine way if both sides know how to deal with PGP.
    
    <breser> The problem is most don't.
    
    <breser> And in the case of an open source project they have to
             encrypt to multiple people.
    
    <breser> That is partly out of my annoyance at the ASF security team's
             behavior of taking encrypted mail, decrypting it and then
             posting it to the security/private list for a project.
    
    <kfogel> yeah -- I really think PGP/GPG is great but only in certain
             limited use cases
    
    <kfogel> I mean, unless everyone's going to set up Schleuder, but even
             then it's not a perfect win
    
    <breser> Feel free to weigh in here:
             http://mail-archives.apache.org/mod_mbox/www-infrastructure-dev/201404.mbox/%3C5357F5D6.1020209%40cord.dk%3E
    
    <kfogel> Nah, I don't think I'm likely to have a uniquely valuable
             opinion that's not already being better represented by
             someone taking more active part in the discussion
    
    <kfogel> Do you mind if I record a snapshot of this part of our
             conversation in a book-notes file that's publicly visible (to
             those who know where to look)?  I also have a private notes
             file I can use, if not.
    
    <breser> Go right ahead, nothing sensitive here.
*** jorendorff's question about read access to security bugs,
    apparently an internal debate at Mozilla citing
    http://blog.gerv.net/2011/12/a-level-playing-field/ which cites POSS
    story about Mike Pilato and commit access.  See IRC transcript
    in #red-bean of 2012-08-15.
** From Wolf Peuker
   Date: Tue, 02 Oct 2012 10:58:11 +0200
    
   First, I was working on the IRC section, there was a list of
   open source pastebin sites (gray box):
    http://producingoss.com/en/irc.html
   What do you think on Gist https://gist.github.com/ as run by GitHub?
   Is it popular? Should it be in the list?
    
   Second, I translated RSS section into German. There were some readers
   mentioned. I think modern mail clients or browsers can be used to.
   I don't know if it's really popular, but I read RSS only within
   Thunderbird, my mail client. Should this be made explicit?
** From Kit Plummer
   From: Kit Plummer
   Subject: Re: [mil-oss] November mil-oss Book Club
   To: mil-oss
   Date: Mon, 5 Nov 2012 07:32:09 -0700
    
   Very cool Karl.  On the topic of [1] I hope that the intent is to
   discuss the value of DVCS and not necessarily Github specifically.
    
   When I first read the book (back in '05), the biggest challenge for me
   wasn't the tactics of running an open source project, but the
   complexities associated with cultural requirements at executive,
   project management and engineering levels.  I'd love to see a section
   in "Setting the Tone" identify with this a bit.  I know you've covered
   well the "change" as it affects developers…
    
   Thanks.
   Kit
** David Eaves's "Science of Community Management"
   http://eaves.ca/2012/11/15/making-bug-fixing-more-efficient-and-pleasant-this-made-me-smile/
   http://www.youtube.com/watch?v=TvteDoRSRr8
** STARTED "Bus Factor"
   (suggested by Philip Olson <philip {_AT_} roshambo.org>, later a KS pledger)
   This is done now, see r2665.  However, Philip is thanked in r2842.
   Some cross-linking should be done.
** Vitorio Miliano asks (8 Feb 2013)
   https://www.kickstarter.com/messages/2664235?ref=email
   Will you be going into greater detail about managing cultural
   issues in open source projects, like trolls, doxing, sexism,
   harassment, or bullying?
   (responded "yes")

   And another backer (see private file) said:

   I was wondering if you're planning on including any content in the
   refresh about recruiting and retaining diverse participants - women,
   people of colour, people from the global south. I'm thinking of things
   like diversity statements, codes of conduct, anti-harassment policies,
   targeted mentoring and outreach, etc.
   
   If you are and it would be useful, I'm happy to pass along contacts
   and resources if you'd like - just let me know.

*** Approach to covering this:

    Your user pool is the source for your participant pool; the latter
    should reflect the former.  If identifiable groups are staying
    away from your contributor pool, then there must be *something*
    going on, right?  You don't have to assign blame to your project
    or to the group; you need merely note that something is causing
    your contributor pool to not reflect certain demographics, and
    because you are seeing an effect, that means it is at least
    theoretically possible that your software reflects that effect
    back at its users -- i.e., that there are considerations being
    left on the table that you may be unaware of.  [Acknowledge the
    pipeline arguments, admit their plausibility and even that they
    probably do explain part of the effect, but then show why it's
    still to your project's advantage to overcome that as much as
    possible.]

** Matt Doar suggests stackoverflow-type forums, shared spreadsheets, etc.
   I'd like to see forums and stackoverflow-like sites referred to as
   well as mailing lists
 
   For bug trackers, a paragraph on why email and shared spreadsheets
   such as Google Docs don't usually work well enough for this purpose.
 
   Fields such as as priority and severity should always be clearly
   described or arguments break out when their values get changed
** Keith Casey suggests fewer tool recommendations, more human stuff:
   Other than a brief overview of the tools, I think there's little
   value there simply because they're changing too quickly and it's
   mostly preferences vs right/wrong.
 
   For me, the biggest value of the first edition was the people
   side. Stopping to take a look at *how* a project formed, *why*
   people contribute, how to build some of the good practices, and how
   to document them have been instrumental in how I've approached my
   projects and my job ever since.
 
   Therefore, I'd love to see more on that side of things. What
   strategies have/haven't worked and why or why not? What things
   worked in one culture but completely failed in another?
 
   Policies just don't form out of thin air.. what motivated people to
   write that policy? When things have gone wrong, how did the
   policies work?
 
   What are some projects that forked? What caused the fork? How have
   the efforts continued? Have projects ever merged again? How did the
   team re-form itself around the new project?
 
   (I have about 80 other questions and can share notes from my own
   digging on the above. Feel free to drop me a note: keith at
   caseysoftware.com)
** Conan Reis asks about making money (video game project)
   (Check if this is the comment from Agog Labs on Kickstarter project page?)

   Your first edition is a great resource. I’ve been reading through it.
 
   I have a project (a video game programming language) that I have
   been working on and using in the video game industry for almost 2
   decades – as in-house and closed/proprietary. I have been working to
   have it be more wide spread and open source is certainly one of the
   possibilities. I am in the somewhat unusual position of being the
   sole rights holder to it.
 
   I have only worked on proprietary projects my entire career and I am
   looking for additional information and experience so that I know
   what I am getting into and to ensure my intellectual baby is ready
   and properly cared for. [I am planning to have myself and my company
   use and contribute to the Ogre3D project http://www.ogre3d.org/ -
   partly as a means to get some open source contribution experience
   and it really looks cool and I want to use it to make video games.]
 
   I may go for a multi-step process by sticking to proprietary until
   the language has reached a sufficient consumer (not just in-house)
   maturity/polish. Then later (or start with) a dual-licensing scheme
   allowing for the proprietary and open development to co-exist. Then
   jump to full/sole open source.
 
   I really want not-for-profit groups to be able to have access to it
   including open source and academia. I am also thrilled at the
   prospect of getting contribution back to make it even better – for
   myself, my company and everyone that uses it. Though I’m torn with
   the prospect of also trying to raise funding both to work on the
   language itself and as a means of financing other projects – like
   video games. My company could simply charge for support and custom
   work related to the language though competing companies charge
   $50K-$250K for similar game optimized language so it *seems* foolish
   to not pursue this revenue stream.
 
   I’m looking forward to your update shedding additional light on my
   questions.
 
   Thanks already for the previous edition.
 
   Good luck on the writing and the research, etc.
 
   - Conan Reis, President of Agog Labs
** Does POSS cover time-based release vs feature-based release?
** Supporting drive-by contributors.
   E.g., the [Re: (0 <= i && i < N) is not "backwards"] thread on emacs-devel,
   started by Paul Eggert on 24 (?) March 2013.
**** Also relevant as a bikeshed example!
** Inner-sourcing, "community source", and other half-source things
   Inner sourcing isn't really like open source: the actors are
   ultimately all part of the same hierarchical authority structure, so
   true permissionless initiative is hard to achieve, and it also fails
   the "portable résumé" test -- you can't take the code with you, so
   you can still be alienated from your work, so some of the motivation
   to invest personally is gone.
** How to handle the worry about offering infinite support
   Many orgs (esp non-profits and gov't customers and their
   contractors) worry about the degree to which they might be required
   to engage & meet expectations of third parties, e.g., in responding
   to questions in public forums, in meeting roadmap deadlines, feature
   goals, etc.  This is especially true when the project is open source
   from the start.  Answer is to clearly define & agree on what
   obligations are: paying customers come first, and then make a
   conscious choice about controlling the other costs.
 
   Explicitly follow up in public forums to say "We're heads-down
   working on features right now [or whatever], but there was this
   thread from so-and-so a few months ago that might have an answer.
   [link] So-and-so, do you have anything to add?"  over to community
   experts.

   "You open source your code, not your time and attention."

   (But see reference in notes.org to Koen van Daele's email 
   "Re: Arches" in Aug/Sep 2012, for an argument the other way.)
** Do a general link check.
*** Check where http:// URLs can be https://, use the latter where possible.
*** CDT spam report dead link bug filed (for link in Chapter 3).
    Latest update: they're supposed to let me know whether the link can
    now be relied on (see thread in "cdt" mail folder).
   
    Filed this via https://www.cdt.org/contact on [2013-12-18]:
 
    Hi.  The page
    https://www.cdt.org/pr_statement/cdt-releases-new-report-origins-spam
    links to three pages under "Supporting Documents", all of which get
    "Page Not Found" errors:
   
      http://cdt.org/speech/spam/
      http://cdt.org/speech/spam/030319spamreport.shtml
      http://cdt.org/speech/spam/030319spamreport.pdf
   
    Can that spam report be restored to the CDT web site and the links fixed?
   
   Thank you,
   -Karl Fogel
** "Ask Slashdot: Where Do You Get (or Share) News About Open Source Projects?"
   http://developers.slashdot.org/story/14/07/26/2238223/ask-slashdot-where-do-you-get-or-share-news-about-open-source-projects?utm_source=rss1.0mainlinkanon&utm_medium=feed
** DONE (before r2825) "Community editions" vs "commercial edition" terminology rant.
   Was a star note at the top of Chapter 10 (Legal).  But is that
   chapter the right place for that?
   ch05.xml:"Enterprise Edition").  Aside from the fact that everyone knows there
** In Ch. 3, "Bug Tracker", maybe talk about how the bug tracker is
   as important to watch as the repository?
** In Ch. 6, many examples use rev IDs rather than commit IDs.
   The principle is the same either way, but will readers be thrown by
   the syntax?  Would be good to at least point out that "commit FOO"
   means the same thing, and that the details of the syntax are not as
   important as *having* a syntax.
** Offers for review and sourcing
   - Chris Holmes
   - Dave Neary
   - Robert Douglass (Drupal)
   - Zack Greant
* Web site and build infrastructure
** BUG: DocBook->PDF via FOP continually breaks, totally unmaintainable.
   Wow, I'm so tired of this.  In theory, DocBook is convertible to PDF.
   In practice, you need a team of NASA scientists to get it working.
   At least, the method used in 'lang-makefile' here, with Apache FOP,
   has never stayed working for more than a year at a time as far as I
   can remember.  http://www.dpawson.co.uk/docbook/tools.html has some
   alternatives; search for "Off the top of my head, I know of the
   following ways to transform DocBook XML into PDF, with open
   source/free/semi-free software".  See also
   http://www.scons.org/doc/HTML/scons-user.html#b-DocbookPdf,
   and http://lwn.net/Articles/661778/ re 'dblatex'.
** BUG: Why is the output="printed" conditional not working?
   For example, in Chapter 8 there is this conditional:
 
     (see <xref linkend="trademarks"/><phrase output="printed">
     in <xref linkend="legal"/></phrase>)
   
   and yet the HTML output produces (with links, of course) this...
 
     (see the section called “Trademarks” in Chapter 10, Licenses,
     Copyrights, and Patents),
 
   ...in en/forks.html.  What's up with that?
** BUG: compatibility links don't produce .html files.
   When id="mailing-lists" changed to id="message-forums" in ch03.xml,
   we left an <anchor id="mailing-lists" /> in place for compatibility.
   However, that still doesn't produce mailing-lists.html, which means
   a bunch of links out on the Net will suddenly become obsolete.
   Solution is to find all the compatibility anchors and generate .html
   files that do a 301 redirect to the new link.
** BUG: Why are we getting this warning on every commit:
   "Warning: post-commit hook failed (exit code 1) with no output."
** Explanation of POSS web site to ORM et al
   The online version has some properties that I'd like to maintain -- the
   most important is probably the human-readable anchor names, for example:
   
     http://producingoss.com/en/forks.html#forks-handling
   
   It's not just that they're human-readable, it's that they stay stable no
   matter how content moves around.  I could move the material about forks
   to a completely different chapter, but the URL would stay the same (and
   when someone went to it directly online, they would automatically be in
   the right chapter when they got there, whatever chapter it is).
   
   Out on the Net, people refer to particular parts of the book using those
   section & anchor names.  So I can't afford to break those.
