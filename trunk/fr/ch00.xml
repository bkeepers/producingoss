<preface id="preface">
<title>Preface</title>
  
<!-- ======================== SECTION ============================== -->
<sect1 id="why">
<title>Pourquoi écrire ce livre?</title>

<para>Aux soirées, les gens ne me regarde plus avec un regard vide quand
je leur dis que j'écris des logiciels libres. "Oh, oui, des logiciels 
libres&mdash;comme Linux?" disent-ils.  Je signifie vigoureusement mon
accord d'un signe de tête.  "Oui, exactement!  C'est ce que je fais."
C'est agréable de ne plus être complètement en marge.  Dans le passé, 
la prochaine question était habituellement assez prévisible: "Comment 
faites-vous de l'argent en faisant ça?"  Pour répondre, je résumais
l'économie du logiciel libre: qu'il existe des organisations pour
lesquelles l'intérêt est qu'un certain logiciel existe, mais qui n'ont
pas besoin de vendre des copies, ils veulent seulement s'assurer qu'il
soit disponible et maintenu, comme un outil au lieu d'un service.</para>

<para>Récemment, cependant, la prochaine question n'a pas toujours été
au sujet de l'argent.  Le <foreignphrase>business case</foreignphrase>du logiciel libre
<footnote><para>Les termes "code source ouvert" et "libre" sont essentiellement
synonymes dans ce contexte; ils sont discutés plus en détails dans
<xref linkend="free-vs-open-source"/><phrase output="printed"> dans
<xref linkend="introduction"/></phrase>.</para></footnote> n'est plus
si mystérieux, et plusieurs non-programmeurs comprennent déjà&mdash;
ou à tout le moins ne sont pas surpris&mdash;qu'il y a des gens
employés à cela à temps plein.  Plutôt, la question que j'entends de
plus en plus souvent est "<emphasis>Oh, comment cela fonctionne-t'il?
</emphasis>"</para>

<para>Je n'avais pas une réponse satisfaisante de prête, et plus
j'essayais d'en trouver une, plus je m'apercevais comment ce sujet est
complexe. Administrer un projet de logiciel libre n'est pas exactement
comme administrer des affaires (imaginez devoir constamment être en
pourparlers concernant la nature de votre produit avec un groupe de
volontaires, que vous n'avez jamais rencontré pour la plupart!). Pour
différentes raisons, cela n'est pas non plus exactement comme administrer
une organisation à but non lucratif traditionnelle, ni un gouvernement.
Cela a des similarités avec toutes ces choses, mais je suis lentement
venu à la conclusion que le logiciel libre est <foreignphrase>sui
generis</foreignphrase>.  Il existe plusieurs choses auquelles il peut
être comparé mais aucune qui lui soit semblable.  En effet, même la
prétention que des projets de logiciels libres peuvent être "administrer"
est poussée.  Un projet de logiciel libre peut être <emphasis>démarrer
</emphasis>, et il peut être influencé par des parties intéressées, 
souvent assez fortement.  Mais ses avoirs ne peuvent devenir la
propriété d'un unique propriétaire, et aussi longtemps qu'il y a des
gens quelque part&mdash;n'importe où&mdash;intéressés à le faire
évoluer, il ne peut pas être unilatéralement arrêté.  Chacun a un 
pouvoir infini; chacun n'a aucun pouvoir.  Cela créé une dynamique
intéressante.</para>

<para>C'est pourquoi j'ai voulu écrire ce livre.  Les projets de logiciel
libre ont permis à une nouvelle culture d'évoluer, un ethos dans lequel la
liberté de modifier le logiciel pour qu'il fasse tout ce que nous souhaitons
est le principe central, toutefois, le résultat de cette liberté n'est pas
la dispersion des individus, chacun travaillant pour son compte dans le code,
mais la collaboration enthousiaste. En effet, l'habileté à la coopération
elle-même est l'une des qualités les plus prisées dans le logiciel libre.
Diriger un de ces projets c'est s'engager dans un type de coopération
hypertrophiée, où l'habileté de non seulement travailler avec d'autres mais
de concevoir de nouvelles manières de travailler ensemble peuvent résulter
en de bénéfices tangibles pour le logiciel. Ce livre essaie de décrire les
techniques avec lesquelles ceci peut être obtenu. Il n'est d'aucune manière
complet, mais au moins c'est un début.</para>

<para>Produire un bon logiciel libre est un but louable en soit, et j'espère
que les lecteurs qui sont venus à la recherche de manières d'y parvenir
vont être satisfaits de ce qu'ils vont trouver ici. Mais au delà de cela,
j'espère également vous transmettre le réel plaisir de travailler avec une
équipe motivée de développeurs de logiciel libre, et celui d'interagir avec
les usagers de la manière merveilleusement directe que l'<foreignphrase>
Open Source</foreignphrase> encourage. Participer à une projet de logiciel
libre qui a du succès est <emphasis>amusant</emphasis>, et ultimement c'est
ce qui permet à tout ce système de fonctionner.</para>



</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="audience">
<title>Qui devrait lire ce livre?</title>

<para>Ce livre s'adresse aux développeurs de logiciels et aux gestionnaires
qui songent à débuter un projet de logiciel libre, ou qui en ont déjà
démarré un et qui se demande quoi faire ensuite.  Il devrait également
être utile aux gens qui veulent seulement participer à un projet de logiciel
libre mais qui ne l'ont jamais fait avant.</para>

<para>Le lecteur n'a pas besoin d'être un programmeur, mais il
devrait à tout le moins connaître les concepts de bases du génie logiciel
tel que le code source, les compilateurs et les programmes de correction<footnote>
<para>NdT: Traduction du terme anglais "patches".</para>.</para>

<para>Une expérience antérieure avec les logiciels libres, comme
usager ou comme développeur, n'est pas nécessaire. Ceux qui ont travaillé
dans des projets de logiciels libres précédemment vont probablement trouver
certains passages évidents et préféreront sauter ces sections.  Parce qu'il
y a potentiellement un large éventail d'expériences différentes chez les
lecteurs, je me suis efforcé d'identifier clairement les sections et de
mentionner quand quelquechose peut être ignoré par ceux qui sont déjà
familier avec le matériel.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="sources">
<title>Sources</title>

<para>Much of the raw material for this book came from five years of
working with the Subversion project
(<ulink url="http://subversion.tigris.org/"/>).  Subversion is an open
source version control system, written from scratch, and intended to
replace CVS as the <foreignphrase>de facto</foreignphrase> version
control system of choice in the open source community.  The project
was started by my employer, CollabNet
(<ulink url="http://www.collab.net/"/>), in early 2000, and thank
goodness CollabNet understood right from the start how to run it as a
truly collaborative, distributed effort.  We got a lot of volunteer
developer buy-in early on; today there are 50-some developers on
the project, of whom only a few are CollabNet employees.</para>

<para>Subversion is in many ways a classic example of an open source
project, and I ended up drawing on it more heavily than I originally
expected.  This was partly a matter of convenience: whenever I needed
an example of a particular phenomenon, I could usually call one up
from Subversion right off the top of my head.  But it was also a
matter of verification.  Although I am involved in other free software
projects to varying degrees, and talk to friends and acquaintances
involved in many more, one quickly realizes when writing for print
that all assertions need to be fact-checked.  I didn't want to make
statements about events in other projects based only on what I could
read in their public mailing list archives.  If someone were to try
that with Subversion, I knew, she'd be right about half the time and
wrong the other half.  So when drawing inspiration or examples from a
project with which I didn't have direct experience, I tried to first
talk to an informant there, someone I could trust to explain what was
really going on.</para>

<para>Subversion has been my job for the last 5 years, but I've been
involved in free software for 12.  Other projects that influenced this
book include:</para>

<itemizedlist>
  <listitem><para>The GNU Emacs text editor project at the Free
            Software Foundation, in which I maintain a few small
            packages.</para>
  </listitem>
  <listitem><para>Concurrent Versions System (CVS), which I worked on
            intensely in 1994&ndash;1995 with Jim Blandy, but have been
            involved with only intermittently since.</para>
  </listitem>
  <listitem><para>The collection of open source projects known as the
            Apache Software Foundation, especially the Apache Portable
            Runtime (APR) and Apache HTTP Server.</para> 
  </listitem>
  <listitem><para>OpenOffice.org, the Berkeley Database from
            Sleepycat, and MySQL Database; I have not been
            involved with these projects personally, but have observed
            them and, in some cases, talked to people there.</para> 
  </listitem>
  <listitem><para>GNU Debugger (GDB) (likewise).</para>
  </listitem>
  <listitem><para>The Debian Project (likewise).</para>
  </listitem>
</itemizedlist>

<para>This is not a complete list, of course.  Like most open source
programmers, I keep loose tabs on many different projects, just to
have a sense of the general state of things.  I won't name all of them
here, but they are mentioned in the text where appropriate.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="acknowledgments">
<title>Acknowledgments</title>

<para>This book took four times longer to write than I thought it
would, and for much of that time felt rather like a grand piano
suspended above my head wherever I went.  Without help from many
people, I would not have been able to complete it while staying
sane.</para>

<para>Andy Oram, my editor at O'Reilly, was a writer's dream.  Aside
from knowing the field intimately (he suggested many of the topics),
he has the rare gift of knowing what one meant to say and helping one
find the right way to say it.  It has been an honor to work with him.
Thanks also to Chuck Toporek for steering this proposal to Andy right
away.</para>

<para>Brian Fitzpatrick reviewed almost all of the material as I wrote
it, which not only made the book better, but kept me writing when I
wanted to be anywhere in the world but in front of the computer.  Ben
Collins-Sussman and Mike Pilato also checked up on progress, and were
always happy to discuss&mdash;sometimes at length&mdash;whatever topic
I was trying to cover that week.  They also noticed when I slowed
down, and gently nagged when necessary.  Thanks, guys.</para>

<para>Biella Coleman was writing her dissertation at the same time
I was writing this book.  She knows what it means to sit down and
write every day, and provided an inspiring example as well as a
sympathetic ear.  She also has a fascinating anthropologist's-eye view
of the free software movement, giving both ideas and references that I
was able use in the book.  Alex Golub&mdash;another anthropologist
with one foot in the free software world, and also finishing his
dissertation at the same time&mdash;was exceptionally supportive early
on, which helped a great deal.</para>

<para>Micah Anderson somehow never seemed too oppressed by his own
writing gig, which was inspiring in a sick, envy-generating sort of
way, but he was ever ready with friendship, conversation, and (on at
least one occasion) technical support.  Thanks, Micah!</para>

<para>Jon Trowbridge and Sander Striker gave both encouragement and
concrete help&mdash;their broad experience in free software provided
material I couldn't have gotten any other way.</para>

<para>Thanks to Greg Stein not only for friendship and well-timed
encouragement, but for showing the Subversion project how important
regular code review is in building a programming community.  Thanks
also to Brian Behlendorf, who tactfully drummed into our heads the
importance of having discussions publicly; I hope that principle is
reflected throughout this book.</para>

<para>Thanks to Benjamin "Mako" Hill and Seth Schoen, for various
conversations about free software and its politics; to Zack Urlocker
and Louis Suarez-Potts for taking time out of their busy schedules to
be interviewed; to Shane on the Slashcode list for allowing his post
to be quoted; and to Haggen So for his enormously helpful comparison
of canned hosting sites.</para>

<para>Thanks to Alla Dekhtyar, Polina, and Sonya for their unflagging
and patient encouragement.  I'm very glad that I will no longer have
to end (or rather, try unsuccessfully to end) our evenings early to go
home and work on "The Book."</para>

<para>Thanks to Jack Repenning for friendship, conversation, and a
stubborn refusal to ever accept an easy wrong analysis when a harder
right one is available.  I hope that some of his long experience with
both software development and the software industry rubbed off on this
book.</para>

<para>CollabNet was exceptionally generous in allowing me a flexible
schedule to write, and didn't complain when it went on far longer than
originally planned.  I don't know all the intricacies of how
management arrives at such decisions, but I suspect Sandhya Klute, and
later Mahesh Murthy, had something to do with it&mdash;my thanks to
them both.</para>

<para>The entire Subversion development team has been an inspiration
for the past five years, and much of what is in this book I learned
from working with them.  I won't thank them all by name here, because
there are too many, but I implore any reader who runs into a
Subversion committer to immediately buy that committer the drink of
his choice&mdash;I certainly plan to.</para>

<para>Many times I ranted to Rachel Scollon about the state of the
book; she was always willing to listen, and somehow managed to make
the problems seem smaller than before we talked.  That helped a
lot&mdash;thanks.</para>

<para>Thanks (again) to Noel Taylor, who must surely have wondered why
I wanted to write another book given how much I complained the last
time, but whose friendship and leadership of Golos&aacute; helped keep
music and good fellowship in my life even in the busiest times.
Thanks also to Matthew Dean and Dorothea Samtleben, friends and
long-suffering musical partners, who were very understanding as my
excuses for not practicing piled up.  Megan Jennings was constantly
supportive, and genuinely interested in the topic even though it was
unfamiliar to her&mdash;a great tonic for an insecure writer.  Thanks,
pal!</para>

<para>I had four knowledgeable and diligent reviewers for this book:
Yoav Shapira, Andrew Stellman, Davanum Srinivas, and Ben Hyde.  If I
had been able to incorporate all of their excellent suggestions, this
would be a better book.  As it was, time constraints forced me to pick
and choose, but the improvements were still significant.  Any errors
that remain are entirely my own.</para>

<para>My parents, Frances and Henry, were wonderfully supportive as
always, and as this book is less technical than the previous one, I
hope they'll find it somewhat more readable.</para>

<para>Finally, I would like to thank the dedicatees, Karen Underhill
and Jim Blandy.  Karen's friendship and understanding have meant
everything to me, not only during the writing of this book but for the
last seven years.  I simply would not have finished without her help.
Likewise for Jim, a true friend and a hacker's hacker, who first
taught me about free software, much as a bird might teach an airplane
about flying.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="disclaimer">
<title>Disclaimer</title>

<para>The thoughts and opinions expressed in this book are my own.
They do not necessarily represent the views of CollabNet or of the
Subversion project.</para>

</sect1>

</preface>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
