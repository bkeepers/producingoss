<appendix id="bug-trackers">
<title>Freie Bugtracker</title>

<simplesect>

<para>Egal welchen Bugtracker ein Projekt benutzt, manche Entwickler
beschwehren sich immer gerne darüber. Das scheint eher im Bezug auf 
Bugtracker zuzutreffen, als bei irgend einem anderen der üblichen Werkzeuge
für die Entwicklung. Ich denke das liegt daran, dass Bugtracker so
visuell und interaktiv sind, dass es leicht ist sich die Verbesserungen
vorzustellen die man machen würde (wenn man nur die Zeit hätte), und
diese Verbesserungen laut zu sagen. Nehmen Sie die Verbesserungen mit
einem gewissen Vorbehalt &ndash; viele der hier aufgeführten Bugtracker
sind ziemlich gut.</para>

<para>In dieser Auflistung wird das Wort "Ticket" benutzt, um Einträge
in dem Tracker zu bezeichnen. Denken Sie aber daran, dass jedes System
seine eigene Begriffen verwenden kann, wobei der Begriff etwas wie
"issue", "artifact", "bug" oder etwas anderes sein könnte.</para>

<sect2 id="bugtrackers-bugzilla">
<title><emphasis role="bold">Bugzilla</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.bugzilla.org/"/></title>

<para>Bugzilla ist sehr beliebt, wird aktiv entwickelt, und scheint
seine Nutzer ziemlich glücklich zu machen. Ich benutze eine angepasste
Variante auf meiner Arbeit seit mittlerweile vier Jahren, und ich mag
es. Man kann es nicht sonderlich individualisieren, aber auf eine
gewisse Art könnte das ein Vorteil sein: Installationen von
Bugzilla neigen dazu, ziemlich ähnlich auszusehen, wo immer man
sie antrifft, das heißt viele Entwickler sind bereits mit seiner
Bedienung vertraut sind und werden sich in gewohntem Terrain
fühlen.</para>

<!--
<para>Bugzilla offers the obvious (yet somehow not widespread)
innovation of using the same search box to find issues by both
identifying number and by search.  If you enter a number into the
search box, Bugzilla fetches the corresponding issue.  If you enter
anything other than a pure number, Bugzilla finds all issues that
matching that search.</para>
-->

</sect2>

<sect2 id="bugtrackers-gnats">
<title><emphasis role="bold">GNATS</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.gnu.org/software/gnats/"/></title>

<para>GNU GNATS ist eines der ältesten Open-Source-Butracker und ist
weit verbreitet. Seine größten Vorteile sind die Vielfalt seiner
Bedienung (es kann nicht nur mit einem Browser sondern auch per
E-Mail oder über die Kommandozeile bedient werden), und die Speicherung
von Tickets im Klartext. Die Tatsache dass alle Daten der Tickets in
Textdateien gespeichert werden, erleichtert es, eigene Programme zu
schreiben, um die Daten analysieren und zu verarbeiten (zum Beispiel um
Statistiken zu generieren). GNATS kann auch auf verschiedene
Arten E-Mails automatisch aufnehmen, und sie den entsprechenden Tickets
hinzufügen, auf der Grundlage von Mustern in den E-Mail-Headern, was es
sehr einfach macht, die Unterhaltungen zwischen Nutzer und Entwickler
zu protokollieren.</para>

</sect2>

<sect2 id="bugtrackers-rt">
<title><emphasis role="bold">RequestTracker (RT)</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.bestpractical.com/rt/"/></title>

<para>Die Webseite von RT sagt "RT ist ein für Unternehmen geeignetes
Ticket-System, welches einer Gruppe von Personen erlaubt, intelligent
und effizient Aufgaben, Probleme und Anfragen die von einer Gemeinschaft
von Nutzern eingereicht werden, zu verwalten", was es im wesentlichen
zusammenfasst. RT hat eine relativ ausgefeiltes Webinterface, und scheint
ziemlich weit verbreitet zu sein. Die Optik der Oberfläche wirkt zunächst
etwas komplex, bedarf aber lediglich einer Eingewöhnungsphase.
RT ist unter der GNU GPL lizenziert (aus irgend einem Grund
wird das auf der Webseite nicht recht deutlich).</para>

</sect2>

<sect2 id="bugtrackers-trac">
<title><emphasis role="bold">Trac</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://trac.edgewall.com/"/></title>

<para>Trac ist etwas mehr als ein Butracker: es ist in Wirklichkeit ein
integriertes System von Wiki und ButTracker. Es benutzt Wikiverweise
um Tickets, Dateien, Changesets der Versionsverwaltung, und einfache
Wikiseiten zu verbinden. Es ist relativ einfach einzurichten, und lässt
sich mit Subversion integrieren (siehe <xref 
linkend="vc-systems"/>).</para>

</sect2>

<sect2 id="bugtrackers-roundup">
<title><emphasis role="bold">Roundup</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://roundup.sourceforge.net/"/></title>

<para>Roundup ist relativ einfach zu installieren (es wird lediglich 
Python 2.1 oder höher benötig) und einfach zu benutzen. Es kann mit
einem Browser, E-Mail und der Kommandozeile bedient werden. Die Vorlagen
für Ticket-Daten und die Webinterface können genau so angepasst 
werden, wie Teile seiner Logik für die Übergänge zwischen verschiedenen
Zuständen.</para>

</sect2>

<sect2 id="bugtrackers-mantis">
<title><emphasis role="bold">Mantis</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.mantisbt.org/"/></title>

<para>Mantis ist ein Web-basierter Bugtracker, geschrieben in PHP, und
mit MySQL als Datenbank. Es hat die Funktionen die man erwartet. Ich
perönlich finde die Oberfläche sauber, intuitiv, und angenehm für die
Augen.</para>

</sect2>

<sect2 id="bugtrackers-flyspray">
<title><emphasis role="bold">Flyspray</emphasis>&nbsp;&ndash;&nbsp;<ulink
	url="http://www.flyspray.org/"/></title>

<para>Flyspray ist ein in PHP geschreibener Bugtracker. Seine Webseite
beschreibt es als "unkompliziert", und die Liste seiner Funktionen
beinhaltet: Unterstützung für mehrere Datenbanken (derzeit MySQL und
PGSQL); mehrere Projekte; 'Beobachtung' von Aufgaben, mit
Benachrichtigung bei Änderungen (mittels E-Mail oder Jabber); umfassende
Historie von Aufgaben; CSS-Motive; Datei-Anhänge; erweiterte
Suchfunktionen (aber einfach zu bedienen); RSS-/Atom-Kanäle; Wiki und
Klartext-Eingabe; Abhängigkeitsdiagramme.</para>

</sect2>

<sect2 id="bugtrackers-scarab">
<title><emphasis role="bold">Scarab</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://scarab.tigris.org/"/></title>

<para>Scarab ist als hochgradig anpassbarer, vollständiger Bugtracker
gedacht, mehr oder weniger die Vereinigung aller Funktionen die
von anderen Bugtrackern angeboten werden: Daten-Eingabe, Abfragen,
Berichte, Benachrichtigungen an interesierte Parteien,
gemeinschafftliches Sammeln von Kommentaren und Verfolgung von
Abhängigkeiten.</para>

<para>Es ist über administrative Webseiten anpassbar. Sie können in 
einer einzigen Scarab-Installation mehrere aktive "Module" (Projekte)
haben. Innerhalb eines Moduls können Sie neue Arten von Tickets anlegen
(Mängel, Verbesserungen, Aufgaben, Support-Anfragen, usw.) und
beliebige Attribute hinzufügen, um den Tracker an die spezifischen
Erfordernisse ihres Projekts anzupassen.</para>

<para>Ende 2004 näherte sich Scarab seiner 1.0-Version.</para>

</sect2>

<sect2 id="bugtrackers-dbts">
<title><emphasis role="bold">Debian Bug Tracking System (DBTS)</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.chiark.greenend.org.uk/~ian/debbugs/"/></title>

<para>Das Debian Bug Tracking System ist insofern ungewöhnlich, dass alle
Eingaben und Änderungen per E-Mail gemacht werden: Jedes Ticket bekommt
seine eigene Mailadresse. Das DBTS skaliert ziemlich gut: <ulink
url="http://bugs.debian.org/"/> hat zum Beispiel 277,741 Tickets.</para>

<para>Da die Bedienung über gewöhnliche E-Mail-Anwendungen erfolgt, eine
Umgebung mit der die meisten Person vertraut sind und leicht
Zugang haben, ist das DBTS geeignet für die Handhabung großer Mengen
eingehender Meldungen, die eine schnelle Klassifizierung und Reaktion
benötigen. Es gibt natürlich auch Nachteile. Entwickler müssen Zeit
investieren, um das Befehlssystem zu lernen, und Nutzer müssen ihre
Bug-Meldungen 
ohne ein Web-Formular eingeben, welches sie beim Schreiben mit
der Auswahl der nötigen Informationen hilft. Es gibt Programme um den
Nutzern zu helfen, bessere Bug-Meldungen zu machen, wie das
Kommandozeilenprogramm <command>reportbug</command> oder das
<systemitem>debbugs-el</systemitem>-Paket für Emacs. Die meisten Leute
werden diese Werkzeuge aber nicht benutzen; sie werden die E-Mail einfach
per Hand schreiben, und es mag sein, dass sie die Richtlinien, die für die
Meldung von Bugs die von ihrem Projekt veröffentlicht wurden, befolgen
oder auch nicht.</para>

<para>DBTS hat ein Webinterface mit reinem Lese-Zugriff, um Tickes
anzuschauen und abzufragen.</para>

</sect2>

<sect2 id="bugtrackers-trouble-ticket-trackers">
<title><emphasis role="bold">Trouble-Ticket Tracker</emphasis></title>

<para>Dieses System ist eher darauf ausgelegt, Tickets für einen
Informationsschalter zu überwachen, als Bugs in Software. Sie werden
wahrscheinlich einen gewöhnlichen Bugtracker hilfreicher finden, sind 
aber der Komplettheit halber und da man sich ungewöhnliche Projekte
vorstellen kann bei dem ein Trouble-Ticket System eher angemessen wäre
als ein herkömmlicher Bugtracker hier aufgelistet.</para>

<para>
<itemizedlist>
  <listitem><para><emphasis role="bold">WebCall</emphasis
            >&nbsp;&ndash;&nbsp;<ulink
            url="http://myrapid.com/webcall/"/></para>
  </listitem>
  <listitem><para><emphasis role="bold">Teacup</emphasis
            >&nbsp;&ndash;&nbsp;<ulink
            url="http://www.altara.org/teacup.html"/></para>
            <para>(Teacup scheint nicht mehr aktiv entwickelt zu werden
                  man kann es aber noch herunterladen. Beachten Sie,
                  dass es sowohl über einen Browser als auch über E-Mail
                  bedient werden kann.)</para>
  </listitem>
</itemizedlist>
</para>

</sect2>

<sect2 id="bugtrackers-bluetail">
<title><emphasis role="bold">Bluetail Ticket Tracker (BTT)</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://btt.sourceforge.net/"/></title>

<para>BTT liegt irgendwo zwischen den üblichen Trouble-Ticket-Trackern
und einem Bugtracker. Es bietet Funktionen für den Datenschutz, was
unter Open-Source-Bugtrackern etwas ungewöhnlich ist: Nutzer des Systems
werden in Mitarbeiter, Freund, Kunde, oder Anonymer kategorisiert, und
es stehen, je nachdem zu welcher Kategorie man gehört, mehr oder weniger
Daten zur Verfügung. Es bietet etwas E-Mail-Integration, eine Bedienung
mittels Kommandozeile, und Mechanismen um E-Mails in Tickets umzuwandeln.
Es hat auch Funktionen um Informationen zu pflegen, die
nicht mit irgend einem spezifischen Ticket zu tun haben, wie interne
Dokumentation oder FAQs.</para>

</sect2>

</simplesect>

</appendix>

<!--
local variables: 
sgml-parent-document: ("book.xml" "appendix")
end:
-->
