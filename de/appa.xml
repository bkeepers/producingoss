<appendix id="vc-systems">
<!--
<title>Free Version Control Systems</title>
-->
<title>Systeme zur Versionsverwaltung</title>

<simplesect>
<!--
<para>These are all the open source version control systems I was
aware of as of mid-2007, plus a few that I added in late 2011.  The
ones I use on a regular basis are Subversion and Git, and I have used
Bazaar and CVS extensively as well.  The others I have little or no
experience with, and the information here is taken from their web
sites.  See also <ulink
url="http://en.wikipedia.org/wiki/List_of_revision_control_software"/>.
</para>
-->
<para>Diese sind alle Open-Source-Versionsverwaltungssysteme, die mir 
Mitte 2007 bekannt waren sowie einige, die ich Ende 2011 hinzugefügt habe.
Diejenigen, die ich regelmäßig nutze, sind Subversion und Git; aber auch 
Bazaar und CVS nutzte ich in großem Maße. Mit den anderen habe ich kaum
oder keine Erfahrung, und die hier aufgeführten Informationen habe ich
von ihren Websites übernommen. Siehe auch
<ulink
url="http://en.wikipedia.org/wiki/List_of_revision_control_software"/>.
</para>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-subversion">
<!--
<title><emphasis role="bold">Subversion</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://subversion.tigris.org/"/></title>
-->
<title><emphasis role="bold">Subversion</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://subversion.tigris.org/"/></title>
<!--
<para>Subversion was written first and foremost to be a replacement
for CVS&mdash;that is, to approach version control in roughly the same
way CVS does, but without the problems and feature omissions that most
frequently annoy users of CVS.  One of Subversion's goals is for
people already accustomed to CVS to find the transition to Subversion
relatively smooth.  There is not space here to go into detail about
Subversion's features; see its web site for more information.
<emphasis>[Disclaimer: I am involved in Subversion development, and it
is the only one of these systems that I use on a regular
basis.]</emphasis></para>
-->
<para>Subversion wurde vor allem als Ersatz für CVS
geschrieben &ndash; d.h. seine Herangehensweise an die Versionsverwaltung
ist ungefähr die gleiche wie bei CVS, aber ohne die Probleme und
fehlende Funktionen, welche die meisten Nutzer von CVS verärgern. Eines
der Ziele von Subversion ist, dass der Übergang nach Subversion von 
Leuten, die bereits mit CVS vertraut sind, als relativ glatt empfunden 
wird. Es ist hier nicht genug Platz, um detalliert die Funktionen von
Subversion zu behandeln; besuchen Sie die Webseite des Projekts für
weitere Informationen. <emphasis>[Disclaimer: Ich bin an der
Entwicklung von Subversion beteiligt, und es ist das einzige System
welches ich regelmäßig benutze.]</emphasis></para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-git">
<!--
<title><emphasis role="bold">GIT</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://git.or.cz/"/></title>
-->
<title><emphasis role="bold">GIT</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://git.or.cz/"/></title>
<!--
<para>GIT is a project started by Linus Torvalds to manage the Linux
kernel source tree.  At first GIT was rather narrowly focused on the
needs of kernel development, but it has expanded beyond that and is
now used by projects other than the Linux kernel.  Its home page says
it is "...designed to handle very large projects with speed and
efficiency; it is used mainly for various open source projects, most
notably the Linux kernel.  Git falls in the category of distributed
source code management tools, similar to e.g. GNU Arch or Monotone (or
BitKeeper in the proprietary world).  Every Git working directory is a
full-fledged repository with full revision tracking capabilities, not
dependent on network access or a central server."</para>
-->
<para>GIT ist ein Projekt, welches von Linus Torvalds gestartet wurde, um
den Quellcode des Linux-Kernels zu verwalten. GIT war zunächst
relativ auf die Bedürfnisse der Kernel-Entwicklung konzentriert, ist
aber darüber hinaus gewachsen und wird mittlerweile von anderen
Projekten als dem Linux-Kernel benutzt. Auf der Webseite steht
"...entwickelt um sehr große Projekte schnell und effizient zu
verwalten; es wird hauptsächlich von verschiedenen Open-Source-Projekten
benutzt, insbesondere vom Linux-Kernel. Git gehört zu der Kategorie
der verteilten Verwaltungssysteme für Quellcode, ähnlich wie z.B. GNU
Arch oder Monotone (oder BitKeeper aus der proprietären Welt). Jedes
Arbeitsverzeichnis von GIT ist ein vollwertiges Repository mit der
Möglichkeit Revisionen zu verfolgen, unabhängig von der Verfügbarkeit
des Netzwerks oder einem Server."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-mercurial">
<!--
<title><emphasis role="bold">Mercurial</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.selenic.com/mercurial/"/></title>
-->
<title><emphasis role="bold">Mercurial</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.selenic.com/mercurial/"/></title>
<!--
<para>Mercurial is a distributed version control system that offers,
among other things, "complete cross-indexing of files and changesets;
bandwidth and CPU efficient HTTP and SSH sync protocols; arbitrary
merging between developer branches; integrated stand-alone web
interface; [portability to] UNIX, MacOS X, and Windows" and more (the
preceding feature list was paraphrased from the Mercurial web
site).</para>
-->
<para>Mercurial ist ein verteiltes Versionsverwaltungssystem, welches
unter anderem "vollständige Kreuzindexierung von Dateien sowie
Änderungen an mehreren Dateien; Bandbreite und Prozessor sparende HTTP-
und SSH-Protokolle für die Synchronisierung; beliebige Merges zwischen
den Zweigen von Entwicklern; integrierte autonome webbasierte
Benutzeroberfläche; [unterstützung für] UNIX, MacOS X, und Windows" und
mehr (die vorangehende Liste von Funktionen stammt von der Webseite von
Mercurial).</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-bazaar">
<!--
<title><emphasis role="bold">Bazaar</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://bazaar-vcs.org/"/></title>
-->
<title><emphasis role="bold">Bazaar</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://bazaar.canonical.com/"/></title>
<!--
<para>Bazaar (or bzr) is a distributed version control system that
concentrates on ease-of-use and having a flexible data model.  It is
an official GNU project, and is the native version control system for
the free software project-hosting site Launchpad.net.  Bazaar does
fully distributed version control: all work takes place in branches,
and every developer typically has a full copy of the branch history.
Branches can be merged into one another in a decentralized manner, but
Bazaar can also be configured to work in a centralized way.  Bazaar
started out as a fork of GNU Arch, but was rewritten from scratch and
now has no direct relation to GNU Arch.</para>
-->
<para>Bazaar (oder bzr) ist ein verteiltes Versionsverwaltungssystem mit 
Schwerpunkt auf einfacher Benutzbarkeit und flexiblem Datenmodel. Es ist
ein offizielles GNU-Projekt und das ursprüngliche Versionsverwaltungssystem
der freien Software-Projekt-Hosting-Site Launchpad.net. Bazaar unterstützt
verteilte Versionsverwaltung vollständig: sämtliche Arbeit findet in
Zweigen statt, und jedem Entwickler steht üblicherweise die vollständige
Änderungsgeschichte des Zweiges zur Verfügung. Zweige können auf 
dezentralisierte Weise miteinander gemergt werden, aber Bazaar kann auch
so konfiguriert werden, dass es zentralisiert arbeitet. Bazaar nahm seinen
Anfang aus einem Fork von GNU Arch, wurde dann jedoch von Grund auf neu
geschrieben und hat nun zu GNU Arch keine direkte Beziehung mehr.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-svk">
<!--
<title><emphasis role="bold">SVK</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://svk.elixus.org/"/></title>
-->
<title><emphasis role="bold">SVK</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://svk.elixus.org/"/></title>
<!--
<para>Although it is built on top of Subversion, SVK probably
resembles some of the decentralized systems below more than it does
Subversion.  SVK supports distributed development, local commits,
sophisticated change merging, and the ability to mirror trees from
non-SVK version control systems.  See its web site for details.</para>
-->
<para>Auch wenn es auf Subversion aufbaut, ähnelt SVK wahrscheinlich
eher einigen der dezentralisierten Systeme weiter unten als Subversion.
SVK unterstützt verteilte Entwicklung, lokale Commits, ausgeklügelte
Zusammenführung von Änderungen, und die Fähigkeit, Bäume aus
Versionsverwaltungssystemen außer SVK zu spiegeln. Siehe seine Webseite
für weitere Details.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-veracity">
<!--
<title><emphasis role="bold">Veracity</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://veracity-scm.com/"/></title>
-->
<title><emphasis role="bold">Veracity</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://veracity-scm.com/"/></title>
<!--
<para>Veracity is a distributed version control system; as with Git,
Mercurial, Bazaar, et al, every developer works with a full local
repository, and changes are pushed and pulled between repositories as
needed.  Command-wise, it is fairly similar to those systems, However,
in addition to versioning files, Veracity includes a distributed bug
tracking database that is versioned alongside the files.  In other
words, Veracity tries to take every artifact you need to actually do
development&nbsp;&mdash;&nbsp;not just the source code tree, but the
bug reports too&nbsp;&mdash;&nbsp;and make them available via the
version control system.  It's an ambitious vision, and while I haven't
had a chance to use it, I'd certainly be interested in reports from
anyone who has.  It's written mainly by SourceGear, Inc, a company
with a long history in version control and software configuration
management.</para>
-->
<para>Veracity ist ein verteiltes Versionsverwaltungssystem; Genau wie bei
Git, Mercurial, Bazaar usw. arbeitet jeder Entwickler auf einem
vollständigen lokalen Projektarchiv und Änderungen werden auf Bedarf 
zwischen den Projektarchiven per Push und Pull übertragen. Von den Befehlen
her ist es diesen System sehr ähnlich, aber Veracity beinhaltet zusätzlich 
zum Versionieren von Dateien eine verteilte Fehlerdatenbank, die 
gemeinsam mit den Dateien versioniert wird. In anderen Worten: Veracity
versucht, alle Artefakte aufzunehmen, die tatsächlich zur Entwicklung 
benötigt werden&nbsp;&mdash;&nbsp;nicht allein den Quelltext-Baum, sondern
auch die Fehlerberichte&nbsp;&mdash;&nbsp;und sie durch das 
Versionsverwaltungssystem verfügbar zu machen. Das ist ein ehrgeiziges 
Ziel, und solange ich noch nicht die Gelegeneit hatte, es zu benutzen, 
bin ich an Erfahrungsberichten sehr interessiert. Es wird hauptsächlich 
von SourceGear, Inc. entwickelt, einem Unternehmen mit einer langen 
Geschichte im Hinblick auf Versionsverwaltung und 
Softwarekonfigurationsmanagement.</para>
<!--
<para>See also <xref linkend="vc-fossil"/> for a similar system.</para>
-->
<para>Siehe auch <xref linkend="vc-fossil"/> für ein ähnliches System.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-fossil">
<!--
<title><emphasis role="bold">Fossil</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.fossil-scm.org/"/></title>
-->
<title><emphasis role="bold">Fossil</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.fossil-scm.org/"/></title>
<!--
<para>Fossil is similar to Veracity (<xref linkend="vc-veracity"/>) in
that it is a distributed version control system that versions more
than just the code files: it versions the bug tracking database, and a
distributed wiki, and a distributed blog.  Other features include a
default "autosync" mode, to do automated merging of non-conflicting
changes (i.e., Fossil can operate in a centralized fashion or a
decentralized fashion, which is in theory true of other distributed
systems as well, but it appears that Fossil makes more of an effort to
actually support the centralized workflow).  It also ships with a
web interface so people can browse the code repository.</para>
-->
<para>Fossil ähnelt Veracity (<xref linkend="vc-veracity"/>) dahin gehend,
dass es ein verteiltes Versionsverwaltungssystem ist, das mehr als nur
Quelltextdateien versioniert: es versioniert die Fehlerdatenbank, aber 
auch ein verteiltes Wiki, und ein verteiltes Blog.  Die weiteren Features
umfassen einen standardmäßigen "autosync"-Modus, um nicht-konfligierende
Änderungen automatisch zusammenzuführen (d.h. Fossil kann sowohl auf 
zentralisierte als auch auf dezentralisierte Weise arbeiten, was 
theoretisch auch für andere dezentralisierte Systeme gilt, aber es scheint
so, als ob Fossil den zentralisierten Arbeitsablauf besser unterstützt).
Auch wird es mit einem Web-Interface ausgeliefert, mit dem die Benutzer
durch das Projektarchiv navigieren können.</para>
<!--
<para>Fossil is mainly written by Dr. Richard Hipp, perhaps better
known as the author of the SQLite database engine.  Like Veracity, I
have not used Fossil; if you do, let me know how it goes.</para>
-->
<para>Fossil wird hauptsächlich durch Dr. Richard Hipp entwickelt, der 
möglicherweise besser bekannt ist als Autor der SQLite Datenbank-Engine.
Genau wie Veracity, habe ich Fossil bislang nicht benutzt; sollten Sie 
es benutzen, dann lassen Sie mich bitte wissen, wie es läuft.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-cvs">
<!--
<title><emphasis role="bold">CVS</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.nongnu.org/cvs/"/></title>
-->
<title><emphasis role="bold">CVS</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.nongnu.org/cvs/"/></title>
<!--
<para>CVS has been around for a long time, and many developers are
already familiar with it.  In its day it was revolutionary: it was the
first open source version control system with wide-area network access
for developers (as far as I know), and the first to offer anonymous
read-only checkouts, which gave new developers an easy way to get
involved in projects.  CVS versions files only, not directories; it
offers branching, tagging, and good client-side performance, but
doesn't handle large files or binary files very well.  It also does
not support atomic commits.<emphasis>[Disclaimer: I was active in CVS
development for about five years, before helping to start the
Subversion project to replace it.]</emphasis></para>
-->
<para>CVS gibt es schon seit langem, und viele Entwickler sind bereits
damit vertraut. Zu seiner Zeit war es revolutionär: Es war das erste
Open-Source-Versionsverwaltungssystem, das Entwicklern Zugang über
weite Netze anbot (so weit ich weiß), und es erlaubte erstmals anonyme,
rein lesende Checkouts, was neuen Entwicklern einen einfachen
Weg bot, sich an Projekten zu beteiligen. CVS verwaltet lediglich
Dateien, keine Verzeichnisse; es bietet Verzweigung an, Tags und gute 
Geschwindigkeit auf Client-Seite, kann aber nicht so gut mit großen
oder binären Dateien umgehen. Es unterstützt auch keine atomaren
Commits.<emphasis>[Disclaimer: Ich war ca. fünf Jahre lang
aktiver Entwickler bei CVS, bevor ich dabei half, das Subversion-Projekt
zu starten, um es zu ersetzen.]</emphasis></para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-darcs">
<!--
<title><emphasis role="bold">Darcs</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://darcs.net"/></title>
-->
<title><emphasis role="bold">Darcs</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://abridgegame.org/darcs/"/></title>
<!--
<para>"David's Advanced Revision Control System is yet another
replacement for CVS.  It is written in Haskell, and has been used on
Linux, MacOS X, FreeBSD, OpenBSD and Microsoft Windows.  Darcs
includes a cgi script, which can be used to view the contents of your
repository."</para>
-->
<para>"David's Advanced Revision Control System ist noch ein weiterer
Ersatz für CVS. Es wurde in Haskell geschrieben, und wurde schon auf
Linux, MacOS X, FreeBSD, OpenBSD und Microsoft Windows benutzt. Darcs
beinhaltet auch ein cgi script, mit dem man sich den Ihnhalt des 
Repositorys anschauen kann."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-arch">
<!--
<title><emphasis role="bold">Arch</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.gnu.org/software/gnu-arch/"/></title>
-->
<title><emphasis role="bold">Arch</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.gnu.org/software/gnu-arch/"/></title>
<!--
<para>GNU Arch supports both distributed and centralized development.
Developers commit their changes to an "archive", which may be local,
and the changes can be pushed and pulled to other archives as the
managers of those archives see fit.  As such a methodology implies,
Arch has more sophisticated merge support than CVS.  Arch also allows
one to easily make branches of archives to which one does not have
commit access.  This is only a brief summary; see the Arch web pages
for details.</para>
-->
<para>GNU Arch unterstützt sowohl verteilte als auch die zentralisierte
Entwicklung. Entwickler committen ihre Änderungen zu einem "Archiv",
welches lokal sein kann, und die Änderungen können zu anderen Archiven
geschoben oder gezogen werden, wie es die Verwalter der Archive für
richtig halten. Wie solch eine Methodik impliziert, hat Arch feinere
Unterstützung für Merges als CVS. Arch erlaubt es auch einfach Zweige
von Archiven zu erstellen, auf denen man keinen Commit-Zugriff hat; siehe
die Webseiten von Arch für weitere Details.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-monotone">
<!--
<title><emphasis role="bold">monotone</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.venge.net/monotone/"/></title>
-->
<title><emphasis role="bold">monotone</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.venge.net/monotone/"/></title>
<!--
<para>"monotone is a free distributed version control system.  it
provides a simple, single-file transactional version store, with fully
disconnected operation and an efficient peer-to-peer synchronization
protocol.  it understands history-sensitive merging, lightweight
branches, integrated code review and 3rd party testing.  it uses
cryptographic version naming and client-side RSA certificates.  it has
good internationalization support, has no external dependencies, runs
on linux, solaris, OSX, and windows, and is licensed under the GNU
GPL."</para>
-->
<para>"monotone ist ein freies verteiltes Versionsverwaltungssystem. Es
bietet einen einfachen, aus einer Datei bestehenden auf Transaktionen
basierenden Speicher, mit vollständig entkoppeltem Betrieb und einem
effizienten Peer-to-Peer-Synchronisationsprotokoll. Es versteht
historisch abhängige Merges, leichtgewichtige Zweige, integrierte
Überprüfung und Tests durch Dritte. Es benutzt kryptographische
Benennung von Versionen sowie Client-seitige RSA-Zertifikate. Es bietet
gute Unterstützung für Internationalisierung, hat keine externen
Abhängigkeiten, läuft unter Linux, Solaris, OSX, und Windows, und ist
unter der GNU GPL lizenziert."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-codeville">
<!--
<title><emphasis role="bold">Codeville</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://codeville.org/"/></title>
-->
<title><emphasis role="bold">Codeville</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://codeville.org/"/></title>
<!--
<para>"Why yet another version control system? All other version
control systems require that you keep careful track of the
relationships between branches so as not have to repeatedly merge the
same conflicts.  Codeville is much more anarchic.  It allows you to
update from or commit to any repository at any time with no
unnecessary re-merges."</para>
-->
<para>"Warum noch ein weiteres Versionsverwaltungssystem? Alle anderen
Versionsverwaltungssysteme erfordern, dass Sie genau auf die Beziehungen
zwischen Zweigen achthaben, um nicht wiederholt die selben Konflikte
zusammenführen zu müssen. Codeville ist sehr viel freizügiger. Es erlaubt
Ihnen ein Commit von oder zu einem Repository zu machen, jederzeit und
ohne unnötige wiederholte Merges."</para>
<!--
<para>"Codeville works by creating an identifier for each change which
is done, and remembering the list of all changes which have been
applied to each file and the last change which modified each line in
each file.  When there's a conflict, it checks to see if one of the
two sides has already been applied to the other one, and if so makes
the other side win automatically.  When there's an actual not
automatically mergeable version conflict, Codeville behaves in almost
exactly the same way as CVS."</para>
-->
<para>"Codeville arbeitet, indem es für jede Änderung, die gemacht
wird, eine Kennung erstellt, und sich eine Liste aller Änderungen die je
auf einer Datei angewandt wurden behält, sowie die letzte Änderung die
jede Zeile in jeder Datei geändert hat. Wenn es einen Konflikt gibt,
überprüft es, ob eine der beiden Seiten bereits auf die andere angewandt
wurde, und wenn das der Fall ist, gewinnt die andere Seite automatisch.
Wenn es einen Konflikt gibt, der wirklich nicht automatisch 
zusammengeführt werden kann, verhält sich fast genau wie CVS."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-vesta">
<!--
<title><emphasis role="bold">Vesta</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.vestasys.org/"/></title>
-->
<title><emphasis role="bold">Vesta</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.vestasys.org/"/></title>
<!--
<para>"Vesta is a portable SCM [Software Configuration Management]
system targeted at supporting development of software systems of
almost any size, from fairly small (under 10,000 source lines) to very
large (10,000,000 source lines)."</para>
-->
<para>"Vesta ist ein portables SCM [Software Configuration Management]
System dessen Ziel es ist, die Entwicklung fast jeder Größe zu
unterstützen, von ziemlich klein (unter 10.000 Codezeilen) bis
sehr groß (10.000.000 Codezeilen)."</para>
<!--
<para>"Vesta is a mature system.  It is the result of over 10 years of
research and development at the Compaq/Digital Systems Research
Center, and it was in production use by Compaq's Alpha microprocessor
group for over two and a half years.  The Alpha group had over 150
active developers at two sites thousands of miles apart, on the east
and west coasts of the United States.  The group used Vesta to manage
builds with as much as 130 MB of source data, each producing 1.5 GB of
derived data.  The builds done at the eastern site in an average day
produced about 10-15 GB of derived data, all managed by Vesta.
Although Vesta was designed with software development in mind, the
Alpha group demonstrated the system's flexibility by using it for
hardware development, checking their hardware description language
files into Vesta's source code control facility and building
simulators and other derived objects with Vesta's builder.  The
members of the former Alpha group, now a part of Intel, are continuing
to use Vesta today in a new microprocessor project."</para>
-->
<para>"Vesta ist ein ausgereiftes System. Es ist das Ergebnis von über
10 Jahren Forschungs- und Entwicklungsarbeit an dem Compaq/Digital 
Systems Forschungszentrum, und wurde von der Compaq-Gruppe für den
Alpha Processor über zweieinhalb Jahre lang produktiv genutzt.
Die Alpha-Gruppe hatte über 150 aktive Entwickler an zwei Standorten die
tausende Meilen auseinaner lagen, an den Ost- und Westküsten der USA.
Die Gruppe hat Vesta genutzt, um Quellcode-Daten von einer Größe bis zu
130MB zu kompilieren, die je 1.5 abgeleitete Daten produzierten. Die
Kompilierungen die an der Ostküste gemacht wurden, haben an einem
durchschnittlichen Tag 10-15 GB an Daten produziert, die alle von Vesta
verwaltet wurden. Obwohl Vesta mit Softwareentwicklung im Sinn
entworfen wurde, hat die Alpha-Gruppe die Flexibilität des System
demonstriert, indem sie es für die Hardwareentwicklung benutzte,
Commits mit den Dateien der Beschreibungssprache für die Hardware
machten, sowie ihre Simulationen und andere abgeleitete Objekte Builds
mit dem System von Vesta gemacht haben. Die Mitglieder der ehemaligen
Alpha-Gruppe, jetzt ein Teil von Intel, benutzen heute weiterhin Vesta
bei einem neuen Mikroprozessor-Projekt."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-aegis">
<!--
<title><emphasis role="bold">Aegis</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://aegis.sourceforge.net/"/></title>
-->
<title><emphasis role="bold">Aegis</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://aegis.sourceforge.net/"/></title>
<!--
<para>"Aegis is a transaction-based software configuration management
system.  It provides a framework within which a team of developers may
work on many changes to a program independently, and Aegis coordinates
integrating these changes back into the master source of the program,
with as little disruption as possible."</para>
-->
<para>"Aegis ist ein Software-Configuration-Management-System,
basierend auf Transaktionen. Es bietet einen Rahmen, in dem ein Team von
Entwicklern an vielen Änderungen unabhängig voneinander arbeiten können,
und Aegis koordiniert die Integration dieser Änderungen zurück in die
zentralen Quellcode-Dateien der Anwendung, mit so wenig Störungen wie
möglich."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-cvsnt">
<!--
<title><emphasis role="bold">CVSNT</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://cvsnt.org/"/></title>
-->
<title><emphasis role="bold">CVSNT</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://cvsnt.org/"/></title>
<!--
<para>"CVSNT is an advanced multiplatform version control system.
Compatible with the industry standard CVS protocol it now supports
many more features. ... CVSNT is Open Source, Free software licensed
under the GNU General Public License."  Its feature list includes
authentication via all standard CVS protocols, plus Windows specific
SSPI and Active Directory; secure transport support, via sserver or
encrypted SSPI; cross platform (runs in Windows or Unix environments);
NT version is fully integrated with Win32 system; MergePoint
processing means no more tagging to merge; under active
development.</para>
-->
<para>"CVSNT ist ein fortgeschrittenes Versionsverwaltungssystem welches
auf mehreren Platforment läuft. Es ist mit der Industrienorm des 
CVS-Protokolls kompatibel und unterstützt viele weitere Funktionen. ... 
CVSNT ist Open Source, freie Software und unter der GNU GPL lizenziert." 
Seine Funktionen sind unter anderem die Authentifikation mit allen
üblichen CVS-Protokollen, sowie das Windows eigene SSPI und Active
Directory; Unterstützung für secure transport, mittels sserver oder 
verschlüsseltem SSPI; es ist plattformübergreifend (läuft in Windows-
oder Unix-Umgebungen); NT version ist vollständig mit dem Win32 System
integriert; MergePoint-Verarbeitung bedeutet, dass Sie keine Tags mehr
brauchen, um einen Merge zu machen; es wird aktiv entwickelt.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-meta-cvs">
<!--
<title><emphasis role="bold">META-CVS</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://common-lisp.net/project/meta-cvs/"/></title>
-->
<title><emphasis role="bold">META-CVS</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://users.footprints.net/~kaz/mcvs.html"/></title>
<!--
<para>"Meta-CVS is a version control system built around CVS.
Although it retains most of the features of CVS, including all of the
networking support, it is more capable than CVS, and easier to use."
The features listed on META-CVS's web site include: directory
structure versioning, improved file type handling, simpler and more
user-friendly branching and merging, support for symbolic links,
property lists attached to versioned data, improved third-party data
importing, and easy upgrading from stock CVS.</para>
-->
<para>"Meta-CVS ist ein Versionsverwaltungssystem, welches um CVS gebaut
wurde. Obwohl es die meisten Funktionen von CVS behält, inklusive
aller Netzwerk-Unterstützung, ist es mächtiger als CVS, und einfacher zu
benutzen". META-CVS listet auf seiner Webseite unter anderem folgende
Funktionen: Versionierung von Verzeichnisstrukturen, verbesserte
Handhabung verschiedener Dateitypen, einfachere und benutzerfreundlichere
Erzeugung von und Zusammenführung von Zweigen, Unterstützung für
symbolische Verweise, Listen von Attributen für versionierte Daten,
verbesserter Import von Daten dritter Parteien, sowei einfache
Aufrüstung bereits bestehender CVS-Archive.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-opencm">
<!--
<title><emphasis role="bold">OpenCM</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.opencm.org/"/></title>
-->
<title><emphasis role="bold">OpenCM</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.opencm.org/"/></title>
<!--
<para>"OpenCM is designed as a secure, high-integrity replacement for
CVS.  A list of the key features can be found on the features page.
While not as 'feature rich' as CVS, it supports some useful things
that CVS lacks.  Briefly, OpenCM provides first-class support for
renames and configuration, cryptographic authentication and access
control, and first-class branches."</para>
-->
<para>"OpenCM wurde als ein sicherer, hoch integrierter Ersatz für CVS
entworfen. Eine Liste der wesentlichen Funktionen kann auf seiner
Webseite gefunden werden. Auch wenn es nicht so viele Funktionen wie 
CVS hat, unterstützt es einige nützliche Dinge, die CVS fehlen. In
Kürze bietet OpenCM erstklassige Unterstützung für die Umbenennung und
Konfiguration, kryptographische Authentifizierung, Kontrolle der
Zugriffsberechtigung, und erstklassige Verzweigung."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-prcs">
<!--
<title><emphasis role="bold">PRCS</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://prcs.sourceforge.net/"/></title>
-->
<title><emphasis role="bold">PRCS</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://prcs.sourceforge.net/"/></title>
<!--
<para>"PRCS, the Project Revision Control System, is the front end to
a set of tools that (like CVS) provide a way to deal with sets of
files and directories as an entity, preserving coherent versions of
the entire set. ... Its purpose is similar to that of SCCS, RCS, and
CVS, but (according to its authors, at least), it is much simpler than
any of those systems."</para>
-->
<para>"PRCS, das Project Revision Control System, ist das Frontend für
einen Satz von Programmen, die es (wie CVS) ermöglichen mit Gruppen von
Dateien und Verzeichnessen als Entitäten umzugehen, und dabei
kohärente Versionen der gesamten Gruppe zu bewahren. ... Sein Sinn ist
ähnlich dem von SCCS, RCS, und CVS, ist aber (zumindest laut seinen
Entwicklern) sehr viel einfacher als irgend eines dieser Systeme."
</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-arx">
<!--
<title><emphasis role="bold">ArX</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.nongnu.org/arx/"/></title>
-->
<title><emphasis role="bold">ArX</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.nongnu.org/arx/"/></title>
<!--
<para>ArX is a distributed version control system offering branching
and merging features, cryptographic data integrity verification, and
the ability to publish archives easily on any HTTP server.</para>
-->
<para>ArX ist ein verteiltes Versionsverwaltungssystem, welches
Funktionen für Verzweigung und Zusammenführung anbietet,
kryptographische Prüfung der Integrität von Daten, sowie die Fähigkeit,
Archive einfach auf jedem HTTP-Server zu veröffentlichen.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-sourcejammer">
<!--
<title><emphasis role="bold">SourceJammer</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.sourcejammer.org/"/></title>
-->
<title><emphasis role="bold">SourceJammer</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://sourcejammer.org/"/></title>
<!--
<para>"SourceJammer is a source control and versioning system written
in Java.  It consists of a server-side component that maintains the
files and version history, and handles check-in, check-out, etc. and
other commands; and a client-side component that makes requests of the
server and manages the files on the client-side file system."</para>
-->
<para>"SourceJammer ist ein Verwaltungssystem für Versionen und
Quellcode welches in Java geschrieben ist. Es besteht aus einer 
Server-seitigen
Komponente, welche die Dateien und die Historie der Versionen,
Commits und Checkouts usw. und andere Befehle verarbeitet sowie einer
Client-seitigen Komponente die Anfragen an den Server sendet und die
Dateien auf dem Dateisystem des Clients verwaltet."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-fastcst">
<!--
<title><emphasis role="bold">FastCST</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.zedshaw.com/projects/fastcst/index.html"/></title>
-->
<title><emphasis role="bold">FastCST</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.zedshaw.com/projects/fastcst/index.html"/></title>
<!--
<para>"A 'modern' system that uses changesets over file revisions and
distributed operation rather than centralized control.  As long as you
have an e-mail account you can use FastCST.  For larger distribution
you only need an FTP server and/or an HTTP server or use the built in
'serve' command to serve your stuff up directly.  All changesets are
universally unique and have tons of meta-data so you can reject
anything you don't [want] before you try it.  Merging is done by comparing a
merged changeset against the current directory contents, rather than
trying to merge it with another changeset."</para>
-->
<para>"Ein 'modernes' System welches Gruppen von Änderungen über
Revisionen von Dateiein benutzt und verteilt arbeitet anstatt
zentralisiert. Sobald Sie eine E-Mail-Adresse haben, können Sie FastCST
benutzen. Für breitere Verteilung brauchen Sie lediglich einen FTP-
und/oder HTTP-Server oder Sie können den 'server' Befehl benutzen um
direkt Ihre Inhalte zu verteilen. Alle Änderungen sind universell
eindeutig, und haben eine Menge Metadaten, also können Sie alles
ablehnen, was Sie nicht wollen, bevor Sie es ausprobieren. Merges werden
realisiert, indem die Zusammenführung eines Satzes von Änderungen mit 
dem derzeitigen Inhalt des entsprechenden Verzeichnisses verglichen wird,
nicht, indem der Versuch unternommen wird, es mit einem anderen Satz 
von Änderungen zusammen zu führen."</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="vc-superversion">
<!--
<title><emphasis role="bold">Superversion</emphasis>&nbsp;&mdash;&nbsp;<ulink
        url="http://www.superversion.org/"/></title>
-->
<title><emphasis role="bold">Superversion</emphasis>&nbsp;&ndash;&nbsp;<ulink
        url="http://www.superversion.org/"/></title>
<!--
<para>"Superversion is a multi-user distributed version control system
based on change sets. It aims to be an industrial-strength, open
source alternative to commercial solutions that is equally easy to use
(or even easier) and similarly powerful. In fact, intuitive and
efficient usability has been one of the top priorities in
Superversion's development from the very beginning."</para>
-->
<para>"Superversion ist ein verteiltes Versionsverwaltungssystem für
mehrere Benutzer welches auf Changesets basiert. Sein Ziel ist eine 
professionelle Open-Source-Alternative zu kommerziellen Lösungen an die
Seite zu stellen, die gleich einfach bedienbar ist (oder sogar einfacher) 
und gleich leistungsfähig. Tatsächlich ist intuitive und effiziente
Bedienbarkeit bereits seit dem Anfang seiner Entwicklung eines der
vorrangigen Ziele von Superversion."</para>

</sect2>

</simplesect>

</appendix>

<!--
local variables: 
sgml-parent-document: ("book.xml" "appendix")
end:
-->
