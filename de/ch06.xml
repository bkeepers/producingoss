<chapter id="communications">

<!--
<title>Communications</title>
-->
<title>Kommunikation</title>

<simplesect>

<!--
<para>The ability to write clearly is perhaps the most important skill
one can have in an open source environment.  In the long run it
matters more than programming talent.  A great programmer with lousy
communications skills can get only one thing done at a time, and even
then may have trouble convincing others to pay attention.  But a lousy
programmer with good communications skills can coordinate and persuade
many people to do many different things, and thereby have a
significant effect on a project's direction and momentum.</para>
-->
<para>Die Fähigkeit klar zu schreiben ist vielleicht die Wichtigste, die
man in einer Open-Source-Umgebung haben kann. Auf lange Sicht ist sie 
sogar wichtiger als Programmierbegabung. Ein sehr guter Programmierer
mit schlechten Kommunikationsfähigkeiten kann nur eines nach dem
anderen erledigen, und hat selbst dann vielleicht Schwierigkeiten, 
andere zu überzeugen. Ein schlechter Programmierer, der aber gut
kommuniziert, kann viele Leute koordinieren und überzeugen, viele
verschiedene Dinge zu machen , und hat dadurch einen wesentlichen Einfluss
auf die Richtung und Dynamik des Projekts.</para>

<!--
<para>There does not seem to be much correlation, in either direction,
between the ability to write good code and the ability to communicate
with one's fellow human beings.  There is some correlation between
programming well and describing technical issues well, but describing
technical issues is only a tiny part of the communications in a
project.  Much more important is the ability to empathize with one's
audience, to see one's own posts and comments as others see them, and
to cause others to see their own posts with similar objectivity.
Equally important is noticing when a given medium or communications
method is no longer working well, perhaps because it doesn't scale as
the number of users increases, and taking the time to do something
about it.</para>
-->
<para>Es scheint keinen großen Zusammenhang zu geben, in die eine oder andere
Richtung, zwischen der Fähigkeit guten Code zu schreiben und der
Fähigkeit mit seinen Mitmenschen zu kommunizieren. Es gibt einen
gewissen Zusammenhang zwischen der Fähigkeit zu Programmieren und
technische Angelegenheiten gut zu beschreiben, aber das ist nur ein
winziger Teil der Kommunikation in einem Projekt. Viel wichtiger ist
die Fähigkeit mit seinem Publikum einfühlsam umzugehen, seine 
Nachrichten und Kommentare aus der Sicht anderer zu sehen, und andere
dazu zu bringen ihre eigene Nachrichten mit einer ähnlichen 
Objektivität zu sehen. Gleichermaßen ist es wichtig zu bemerken, wenn
ein bestimmtes Nachrichtenmedium oder eine Kommunikationsmethode nicht
mehr gut funktioniert, vielleicht weil es nicht mit einer zunehmenden 
Anzahl an Nutzern skaliert, und sich dann die Zeit zu nehmen dagegen 
etwas zu tun.</para>

<!--
<para>All of which is obvious in theory&mdash;what makes it hard in
practice is that free software development environments are
bewilderingly diverse both in audiences and in communications
mechanisms.  Should a given thought be expressed in a post to the
mailing list, as an annotation in the bug tracker, or as a comment
in the code?  When answering a question in a public forum, how much
knowledge can you assume on the part of the reader, given that "the
reader" is not only the one who asked the question in the first place,
but all those who might see your response?  How can the developers
stay in constructive contact with the users, without getting swamped
by feature requests, spurious bug reports, and general chatter?  How
do you tell when a medium has reached the limits of its capacity, and
what do you do about it?</para>
-->
<para>Hiervon ist alles in der Theorie offensichtlich &ndash; was in
der Praxis schwierig macht, ist dass in Umgebungen der Entwicklung
freier Software eine verblüffend viele verschiedene Mechanismen gibt,
sowohl was das Publikum angeht als auch bei der Kommunikation. Soll
eine gegebener Gedanke in einer E-Mail an den Verteiler verfasst
werden, als Anmerkung in dem Bugtracker oder als Kommentar in dem
Quellcode? Wenn man eine Frage in einem öffentlichem Forum
beantwortet, wie viel Wissen kann man von "dem Lesenden" erwarten,
vor dem Hintergrund das derjenige der die Frage gestellt hat nicht
der einzige ist der die Rückmeldung lesen könnte? Wie können die
Entwickler eine konstruktive Verbindung mit den Nutzern aufrecht
erhalten, ohne von Anfragen für Funktionen, fälschliche Bug-Meldungen,
und allgemeinem Geschwätz überschwemmt zu werden? Woran kann man
erkennen, wann ein Medium die Grenzen seiner Kapazität erreicht hat,
und was man dagegen machen kann?</para>

<!--
<para>Solutions to these problems are usually partial, because any
particular solution is eventually made obsolete by project growth or
changes in project structure.  They are also often <foreignphrase>ad
hoc</foreignphrase>, because they're improvised responses to dynamic
situations.  All participants need to be aware of when and how
communications can become bogged down, and be involved in
solutions.  Helping people do this is a big part of managing an open
source project.  The sections that follow discuss both how to conduct
your own communications, and how to make maintenance of communications
mechanisms a priority for everyone in the project.<footnote><para>There
has been some interesting academic research on this topic; for example,
see <citetitle>Group Awareness in Distributed Software
Development</citetitle> by Gutwin, Penner, and Schneider.  This paper
was online for a while, then unavailable, then online again at <ulink
url="http://www.st.cs.uni-sb.de/edu/empirical-se/2006/PDFs/gutwin04.pdf"
>st.cs.uni-sb.de/edu/empirical-se/2006/PDFs/gutwin04.pdf</ulink>.
So try there first, but be prepared to use a search engine if it moves
again.</para></footnote></para>
-->
<para>Lösungen zu diesen Problemen sind für gewöhnlich nur Teillösungen,
da jede bestimmte Lösung letztendlich durch Wachstum oder Änderungen
an der Struktur des Projekts obsolet gemacht werden kann. Sie sind oftmals 
auch <foreignphrase>ad hoc</foreignphrase>, da sie improvisierte 
Reaktionen auf dynamische Situationen sind. Alle Beteiligten müssen sich
darüber im klaren sein, wann und wie Kommunikationen festgefahren werden
können, und an Lösungen beteiligt sein. Leuten zu helfen das zu erreichen
ist ein großer Teil der Verwaltung eines Open-Source-Projekts. Die folgenden
Abschnitte handeln davon wie Sie Ihre eigene Kommunikation
abwickeln, als auch wie Sie die Aufrechterhaltung der Kommunikationsmittel
zur Priorität für alle im Projekt machen können.<footnote><para>Es hat
im Bezug auf dieses Thema viele akademische Untersuchungen gegeben; siehe
zum Beispiel <citetitle>Group Awareness in Distributed Software
Development</citetitle> von Gutwin, Penner, und Schneider (diese waren
ehemals online verfügbar, scheinen aber mittlerweile zumindest zeitweise
verschwunden zu sein; benutzen Sie eine Suchmaschine um es zu finden).
</para></footnote></para>

</simplesect>

<!-- ======================== SECTION ============================== -->
<sect1 id="you-are-what-you-write">
<!--
<title>You Are What You Write</title>
-->
<title>Du bist was du schreibst</title>

<!--
<para>Consider this: the only thing anyone knows about you on the
Internet comes from what you write, or what others write about you.
You may be brilliant, perceptive, and charismatic in person&mdash;but
if your emails are rambling and unstructured, people will assume
that's the real you.  Or perhaps you really are rambling and
unstructured in person, but no one need ever know it, if your posts
are lucid and informative.</para>
-->
<para>Bedenken Sie folgendes: Das einzige was irgend jemand über Sie
im Internet weiß, kommt von dem was Sie schreiben, oder was andere
über Sie schreiben. Es mag sein, dass Sie als Person geistreich, 
scharfsinnig und charismatisch sind &ndash; wenn Ihre E-Mails aber
ausschweifend und unstrukturiert sind, wird man von Ihnen annehmen,
dass Sie wirklich so sind. Oder vielleicht sind Sie wirklich persönlich
wirklich ausschweifend und unstrukturiert, aber keiner muss das je
erfahren, wenn Ihre Nachrichten deutlich und informativ sind.</para>

<!--
<para>Devoting some care to your writing will pay off hugely.
Long-time free software hacker Jim Blandy tells the following
story:</para>
-->
<para>Ihrem Schreiben Mühe zu widmen kann sich in großem
Maße auszahlen. Der langjährige Hacker an freier Software Jim Blandy
erzählt folgende Geschichte:</para>

<blockquote>
  <!--
  <para>Back in 1993, I was working for the Free Software Foundation,
  and we were beta-testing version 19 of GNU Emacs.  We'd make a beta
  release every week or so, and people would try it out and send us
  bug reports.  There was this one guy whom none of us had met in
  person but who did great work: his bug reports were always clear and
  led us straight to the problem, and when he provided a fix himself,
  it was almost always right.  He was top-notch.</para>
  -->
  <para>Damals 1993, arbeitete ich für die Free Software Foundation,
  und wir machten gerade Beta-Tests der Version 19 von GNU Emacs.
  Wir machten ungefähr jede Woche einen Release, und Leute probierten
  es aus und reichten Bug-Meldungen bei uns ein. Es gab einen Kerl den
  keiner von uns vorher persönlich getroffen hatte, der aber tolle 
  Arbeit leistete: Seine Meldungen waren immer klar und brachten uns
  direkt zum Problem, und wenn er selber einen Fix anbot, war er fast
  immer richtig. Er war einfach erstklassig.</para>

  <!--
  <para>Now, before the FSF can use code written by someone else, we
  have them do some legal paperwork to assign their copyright interest
  to that code to the FSF.  Just taking code from complete strangers
  and dropping it in is a recipe for legal disaster.</para>
  -->
  <para>Bevor die FSF Code, der von jemand anderem geschrieben
  wurde benutzen kann, lassen wir sie etwas Papierkram erledigen, um
  ihre urheberrechtlichen Interessen an dem Code der FSF zuzuweisen.
  Einfach den Code von komplett Fremden einzusetzen lädt geradezu auf
  eine rechtliche Katastrophe ein.</para>

  <!--
  <para>So I emailed the guy the forms, saying, "Here's some paperwork
  we need, here's what it means, you sign this one, have your employer
  sign that one, and then we can start putting in your fixes.  Thanks
  very much."</para>
  -->
  <para>Also sandte ich dem Kerl die Formulare per E-Mail zu und sagte
  ihm: "Hier ist ein bisschen Papierkram den wir brauchen, es hat 
  folgendes zu bedeuten, Du unterschreibst hier, dein Arbeitgeber den
  hier, und dann können wir anfangen deine Fixes einzusetzen. Vielen
  Dank."</para>

  <!--
  <para>He sent me back a message saying, "I don't have an
  employer."</para>
  -->
  <para>Er sickte mir eine Antwort zurück, indem er sagte, "Ich habe
  keinen Arbeitgeber."</para>

  <!--
  <para>So I said, "Okay, that's fine, just have your university sign
  it and send it back."</para>
  -->
  <para>Also sagte ich, "In Ordnung, das macht nichts, lass es einfach
  von deiner Universität stempeln und schicke es zurück."</para>

  <!--
  <para>After a bit, he wrote me back again, and said, "Well,
  actually...  I'm thirteen years old and I live with my
  parents."</para>
  -->
  <para>Nach einer gewissen Zeit, schrieb er mir wieder zurück und 
  sagte, "Naja, eigentlich... bin ich dreizehn Jahre alt und lebe noch
  bei meinen Eltern".</para>
</blockquote>

<!--
<para>Because that kid didn't write like a thirteen-year-old, no one
knew that's what he was.  Following are some ways to make your writing
give a good impression too.</para>
-->
<para>Da der Junge nicht wie ein Dreizehnjähriger schrieb, wusste
keiner, dass er einer war. Im Folgenden sind ein paar Möglichkeiten,
mit denen Ihr Schriftverkehr auch einen guten Eindruck hinterlassen
kann.</para>

<!-- ======================== subsection ============================== -->
<sect2 id="structure-and-formatting">
<!--
<title>Structure and Formatting</title>
-->
<title>Struktur und Formatierung</title>

<!--
<para>Don't fall into the trap of writing everything as though it were
a cell phone text message.  Write in complete sentences, capitalizing
the first word of each sentence, and use paragraph breaks where
needed.  This is most important in emails and other composed writings.
In IRC or similarly ephemeral forums, it's generally okay to leave out
capitalization, use compressed forms of common expressions, etc.  Just
don't carry those habits over into more formal, persistent forums.
Emails, documentation, bug reports, and other pieces of writing that
are intended to have a permanent life should be written using standard
grammar and spelling, and have a coherent narrative structure.  This
is not because there's anything inherently good about following
arbitrary rules, but rather that these rules are
<emphasis>not</emphasis> arbitrary: they evolved into their present
forms because they make text more readable, and you should adhere to
them for that reason.  Readability is desirable not only because it
means more people will understand what you write, but because it makes
you look like the sort of person who takes the time to communicate
clearly: that is, someone worth paying attention to.</para>
-->
<para>Tappen Sie nicht in die Falle alles so zu schreiben, als wäre es
eine SMS. Schreiben Sie vollständige Sätze mit Punkt und Komma, und
nutzen Sie wenn nötig einen Absatzwechsel. Am wichtigsten ist das bei 
E-Mails und anderen ausformulierten Nachrichten. Im IRC oder anderen
ähnliche flüchtigen Foren, ist es im allgemeinen in Ordnung wenn man
nicht auf Groß- und Kleinschreibung achtet, sich komprimiert ausdrückt, usw.
Achten Sie nur darauf, dass Sie diese Gewohnheiten nicht auf formalere,
langlebigere Plattformen übertragen. E-Mails, Dokumentation, 
Bug-Meldungen und andere Schriftstücke, für die eine längere Lebensdauer
vorgesehen ist, sollten mit normaler Grammatik, Rechtschreibung
und einer verständlichen Erzählstruktur geschrieben werden. Das heißt 
nicht, dass es an und für sich gut wäre, irgendwelche
Regeln zu befolgen, sondern dass diese Regeln eben 
<emphasis>nicht</emphasis> willkürlich sind: Sie haben sich zu ihrer
heutigen Form entwickelt, weil sie Text lesbarer machen, und Sie sollten 
sich aus diesem Grunde daran halten. Lesbarkeit ist nicht nur deshalb
erwünscht, weil es mehr Menschen ermöglicht, Ihre Texte zu lesen, 
sondern weil Sie sich damit als eine Person darstellen, die sich die
Zeit nimmt, auf eine klare Art zu kommunizieren: sprich, jemand 
der seinerseits Aufmerksamkeit verdient.</para>

<!--
<para>For email in particular, experienced open source developers have
settled on certain conventions:</para>
-->
<para>Insbesondere für E-Mail, haben sich erfahrene Open-Source-Entwickler
auf folgende Konventionen geeinigt:</para>

<!--
<para>Send plain text mails only, not HTML, RichText, or other formats
that might be opaque to text-only mail readers.  Format your lines to
be around 72 columns long.  Don't exceed 80 columns, which has become
the <foreignphrase>de facto</foreignphrase> standard terminal width
(that is, some people may use wider terminals, but no one uses a
narrower one).  By making your lines a little
<emphasis>less</emphasis> than 80 columns, you leave room for a few
levels of quoting characters to be added in others' replies without
forcing a rewrapping of your text.</para>
-->
<para>Schicken Sie E-Mails ausschließlich im Klartext, kein HTML,
RichText, oder andere Formaten die nicht lesbar wären für 
Mail-Programme die Klartext verarbeiten. Formatieren Sie Ihre Zeilen so,
dass sie um die 72 Spalten breit sind. Überschreiten Sie nicht 80 Spalten,
was <foreignphrase>de facto</foreignphrase> zur Standardbreite für
Terminals geworden ist (d.h. dass manche breitere Terminals benutzen
werden, aber niemand schmalere). Indem Sie Ihre Zeilen
auf etwas <emphasis>weniger</emphasis> als 80 Spalten fassen, lassen
Sie Platz für die Einfügung einige Stufen von Zitatkennzeichnungen in den
Rückmeldungen anderer, ohne damit Zeilenumbrüche in Ihrem Text zu
erzwingen.</para>

<!--
<para><emphasis>Use real line breaks.</emphasis> Some mailers do a
kind of fake line wrapping, whereby when you're composing an email,
the display shows line breaks that aren't actually there.  When the
mail goes out, it may not have the line breaks you thought it had, and
it will wrap awkwardly on some people's screens.  If your mailer might
use fake line breaks, look for a setting you can tweak to make it show
the true line breaks as you compose.</para>
-->
<para><emphasis>Benutzen Sie echte Zeilenumbrüche. </emphasis>Manche
Mail-Programme machen eine Art von scheinbarem Umbruch, bei dem Sie als
Schreiber der E-Mail Zeilenumbrüche angezeigt bekommen, die nicht wirklich
existieren. Wenn die E-Mail abgeschickt wird, kann es sein, dass sie nicht
die Zeilenumbrüche aufweist, die Sie erwarten, und Ihr Text wird auf manchen 
Bildschirmen an den unmöglichsten Stellen umgebrochen werden. Wenn Ihr 
Mail-Programm solche Schein-Umbrüche bietet, suchen Sie nach der
Einstellung, bei der Sie die echten Zeilenumbrüche sehen, während 
Sie E-Mails verfassen.</para>

<!--
<para>When including screen output, snippets of code, or other
preformatted text, offset it clearly, so that even a lazy eye can
easily see the boundaries between your prose and the material you're
quoting.  (I never expected to write that advice when I started this
book, but on a number of open source mailing lists lately, I've seen
people mix texts from different sources without making it clear which
is which.  The effect is very frustrating.  It makes their posts
significantly harder to understand, and frankly makes those people
look a little bit disorganized.)</para>
-->
<para>Wenn Sie Bildschirm-Ausgaben, Code-Abschnitte, oder anderen
vorformatierten Text mit einbeziehen, setzen Sie diese eindeutig von dem
Rest Ihres Textes ab, sodass selbst ein träges Auge leicht die
Grenzen zwischen dem was Sie schreiben und dem was Sie zitieren 
erkennen können. (Ich hätte nie erwartet, je diesen Ratschlag zu schreiben,
als ich mit diesem Buch anfing, ich habe aber eine gewisse Anzahl an 
Open-Source-Malinglisten gesehen, auf denen Leute Texte aus
verschiedenen Quellen miteinander vermischen, ohne klarzustellen, was
was ist. Die Auswirkungen sind sehr frustrierend. Es macht ihre
Nachrichten wesentlich schwerer zu verstehen, und offen gesagt lässt
es diese Personen auch ein wenig schlecht organisiert aussehen.)</para>

<!--
<para>When quoting someone else's mail, insert your responses where
they're most appropriate, at several different places if necessary,
and trim off the parts of their mail you didn't use.  If you're
writing a quick comment that applies to their entire post, it's okay
to <firstterm>top-post</firstterm> (that is, to put your response
above the quoted text of their mail); otherwise, you should quote
the relevant portion of the original text first, followed by your
response.</para>
-->
<para>
Wenn Sie E-Mails von anderen zitieren, fügen Sie Ihre 
Stellungnahmen dort ein, wo sie am ehesten angemessen sind, an 
verschiedenen Stellen falls nötig, und schneiden Sie die Teile heraus,
die Sie nicht verwendet haben. Wenn Sie einen kurzen Kommentar
schreiben, welcher sich auf die ganze vorherige E-Mail bezieht,
ist es in Ordnung einen <firstterm>top-post</firstterm> zu machen
(also Ihren Kommentar über den zitierten Text zu stellen); 
ansonsten sollten Sie die relevanten Stellen des ursprünglichen
Texts zitieren, gefolgt von Ihrer Rückmeldung.</para>

<!--
<para>Construct the subject lines of new mails carefully.  It's the
most important line in your mail, because it allows each other person
in the project to decide whether or not to read more.  Modern
mail reading software organizes groups of related messages into
threads, which can be defined not only by a common subject, but by
various other headers (which are sometimes not displayed).  It follows
that if a thread starts to drift to a new topic, you can&mdash;and
should&mdash;adjust the subject line accordingly when replying.  The
thread's integrity will be preserved, due to those other headers, but
the new subject will help people looking at an overview of the thread
know that the topic has drifted.  Likewise, if you really want to
start a new topic, do it by posting a fresh mail, not by replying to
an existing mail and changing the subject.  Otherwise, your mail would
still be grouped in to the same thread as what you're replying to, and
thus fool people into thinking it's about something it's not.  Again,
the penalty would not only be the waste of their time, but the slight
dent in your credibility as someone fluent in using communications
tools.</para>

-->
<para>
Verfassen Sie die Betreff-Zeilen neuer E-Mails mit Sorgfalt.
Es ist die wichtigste Zeile in Ihrer E-Mail, da es jeder anderen Person
im Projekt erlaubt, zu entscheiden, ob sie mehr lesen soll oder nicht.
Moderne Mailprogramme ordnen zusammenhängende E-Mails in Threads, die
nicht nur durch die Überschrift definiert sein können, sondern auch 
durch andere E-Mail-Header (welche manchmal nicht angezeigt werden).
Daraus folgt, dass wenn das Thema des Threads zu sehr abschweift, Sie die
Überschriften Ihrer E-Mails entsprechend anpassen können &ndash; und 
sollten &ndash; wenn Sie antworten. Der Thread wird durch die anderen
Header intakt bleiben, die neue Überschrift wird Leuten, die auf die
Übersicht des Threads schauen, aber helfen zu erkennen, dass das Thema
sich geändert hat. Genauso sollten Sie, wenn Sie wirklich ein neues
Thema anreißen wollen, eine frische E-Mail schreiben, und nicht auf eine
bereits vorliegende antworten, indem Sie die Überschrift ändern. 
Ansonsten würde Ihre neue E-Mail in denselben Thread einsortiert werden,
aus dem heraus Sie antworten, und dadurch Leuten vormachen, es ginge um
etwas, um das es tatsächlich nicht geht. Wieder wäre die Strafe nicht 
allein eine Verschwendung ihrer Zeit, sondern auch ein kleiner Kratzer
in Ihrer Glaubwürdigkeit als jemand, der sicher im Umgang mit
Kommunikationsmitteln ist.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="writing-content">
<!--
<title>Content</title>
-->
<title>Inhalt</title>

<!--
<para>Well-formatted mails attract readers, but content keeps them.
No set of fixed rules can guarantee good content, of course, but there
are some principles that make it more likely.</para>
-->
<para>Wohlformatierte E-Mails locken Leser an, aber erst Inhalte fesseln sie. 
Natürlich kann kein Satz festgelegter Richtlinien für guten Inhalt
garantieren, es gibt aber ein paar Prinzipien die ihn etwas 
wahrscheinlicher machen.</para>

<!--
<para>Make things easy for your readers.  There's a ton of information
floating around in any active open source project, and readers cannot
be expected to be familiar with most of it&mdash;indeed, they cannot
always be expected to know how to become familiar.  Wherever possible,
your posts should provide information in the form most convenient for
readers.  If you have to spend an extra two minutes to dig up the URL
to a particular thread in the mailing list archives, in order to save
your readers the trouble of doing so, it's worth it.  If you have to
spend an extra 5 or 10 minutes summarizing the conclusions so far
of a complex thread, in order to give people context in which to
understand your post, then do so.  Think of it this way: the more
successful a project, the higher the reader-to-writer ratio in any
given forum.  If every post you make is seen by <emphasis>n</emphasis>
people, then as <emphasis>n</emphasis> rises, the worthwhileness of
expending extra effort to save those people time rises with it.  And
as people see you imposing this standard on yourself, they will work
to match it in their own communications.  The result is, ideally, an
increase in the global efficiency of the project: when there is a
choice between <emphasis>n</emphasis> people making an effort and one
person doing so, the project prefers the latter.</para>
-->
<para>Machen Sie Ihren Lesern die Sache leicht. Es gibt Unmengen an
Information die in jedem beliebigen aktiven Open-Source-Projekt 
herumschwirren, Sie können nicht erwarten dass Ihre Lesern mit den 
meisten davon vertraut wären &ndash; tatsächlich können Sie von Ihren
Lesern auch nicht erwarten, dass sie wüssten, wie sie sich über diese 
Dingen informieren können. Wo immer möglich, 
sollten Ihre Nachrichten Informationen so bereit 
stellen, wie es für die Leser am bequemsten ist. Wenn Sie zwei 
zusätzliche Minuten damit verbringen müssen, die URL zu einem 
bestimmten Thread aus den Archiven der Mailingliste heraus zu graben, um
es den Lesern Ihrer E-Mail zu ersparen, ist es das wert. Wenn Sie
5 bis 10 zusätzliche Minuten damit verbringen, die Ergebnisse eines
komplexen Threads zusammen zu fassen, um Leuten einen Kontext zu geben,
in dem sie Ihre Nachricht verstehen können, dann tun Sie das. Sehen
Sie es einmal so: Je erfolgreicher ein Projekt ist, desto höher ist 
das Leser/Autoren-Verhältnis, egal auf welcher Plattform. Wenn jede
Nachricht von Ihnen <emphasis>n</emphasis> Personen gelesen
wird, dann wird bei zunehmendem <emphasis>n</emphasis> der Wert zunehmen, 
sich dem zusätzlichen Zeitaufwand auszusetzen, um ihn anderen zu ersparen.
Und wenn die Leute sehen, dass Sie sich selbst diese Regeln auferlegen,
werden sie ihre eigene Kommunikationen dem anpassen. Das Ergebnis ist
im Idealfall eine Zunahme der allgemeinen Effizienz des Projekts:
Wenn es die Wahl gibt zwischen dem Aufwand von <emphasis>n</emphasis>
Personen und dem einer Person, wird das Projekt letzteren vorziehen.</para>

<!--
<para>Don't engage in hyperbole.  Exaggerating in online posts is a
classic arms race.  For example, a person reporting a bug may worry
that the developers will not pay sufficient attention, so he'll
describe it as a severe, showstopper problem that is preventing him
(and all his friends/coworkers/cousins) from using the software
productively, when it's actually only a mild annoyance.  But
exaggeration is not limited to users&mdash;programmers often do the
same thing during technical debates, particularly when the
disagreement is over a matter of taste rather than correctness:</para>
-->
<para>Meiden sie Übertreibungen. Hochspielungen in Online-Nachrichten ist
ein klassischer Fall von Wettrüsten. Zum Beispiel könnte eine Person,
die einen Bug meldet, glauben, dass die Entwickler diesem nicht
genügend Aufmerksamkeit aufbringen werden, und so wird sie den Bug als
schwerwiegenden Fehler beschreiben, ein Problem welches sie
(und all ihre Freunde/Mitarbeiter/Verwandte) daran hindert die
Software produktiv zu nutzen, obwohl es in Wirklichkeit nur ein kleines
Ärgernis ist. Übertreibungen beschränken sich aber nicht nur auf die
Nutzer &ndash; Programmierer machen bei technischen Diskussionen oft das
Gleiche, insbesondere wenn sich die Auseinandersetzung mehr um eine
Geschmackssache dreht als um Korrektheit:</para>

  <blockquote>
     <!--
     <para>"Doing it that way would make the code totally
     unreadable.  It'd be a maintenance nightmare, compared to
     J. Random's proposal..."</para>
     -->
     <para>"Das zu machen, würde den Code völlig unlesbar machen. Ihn
	zu warten, würde zu einem Albtraum, im Vergleich dem Vorschlag
	von H. Mustermann..."</para>
  </blockquote>

<!--
<para>The same sentiment actually becomes
<emphasis>stronger</emphasis> when phrased less sharply:</para>
-->
<para>Der gleiche Gedanke wird sogar <emphasis>stärker</emphasis> wenn
man ihn weniger scharf formuliert:</para>

  <blockquote>
     <!--
     <para>"That works, but it's less than ideal in terms of
     readability and maintainability, I think.  J. Random's proposal
     avoids those problems because it..."</para>
     -->
     <para>"Das geht, aber ich denke es ist bezüglich Lesbarkeit
	und Wartbarkeit nicht so optimal. Der Vorschlag von
	H. Mustermann vermeidet diese Probleme, da hier..."</para>
  </blockquote>

<!--
<para>You will not be able to get rid of hyperbole completely, and in
general it's not necessary to do so.  Compared to other forms of
miscommunication, hyperbole is not globally damaging&mdash;it hurts
mainly the perpetrator.  The recipients can compensate, it's just that
the sender loses a little more credibility each time.  Therefore, for
the sake of your own influence in the project, try to err on the side
of moderation.  That way, when you <emphasis>do</emphasis> need to
make a strong point, people will take you seriously.</para>
-->
<para>Sie werden Übertreibungen nicht völlig vermeiden können, und im
Allgemeinen ist das auch nicht nötig. Im Vergleich zu anderen Formen
der Fehlkommunikation, ist Übertreiben nicht für die Allgemeinheit
schädlich &ndash; es schadet hauptsächlich den Ausübenden. Die Empfänger
können kompensieren, es ist nur dass der Sender mit jeder Nachricht
ein wenig an Glaubwürdigkeit verliert. Sie sollten deshalb im 
Interesse von Ihrem Einfluss im Projekt versuchen in die moderatere
Richtung zu gehen. Auf diese Art werden Leute Sie ernst nehmen, wenn Sie <emphasis>wirklich</emphasis> einen wichtigen Hinweis machen müssen.</para>

<!--
<para>Edit twice.  For any message longer than a medium-sized
paragraph, reread it from top to bottom before sending it but after
you think it's done the first time.  This is familiar advice to anyone
who's taken a composition class, but it's especially important in
online discussion.  Because the process of online composition tends to
be highly discontinuous (in the course of writing a message, you may
need to go back and check other mails, visit certain web pages, run a
command to capture its debugging output, etc.), it's especially easy to
lose your sense of narrative place.  Messages that were composed
discontinuously and not checked before being sent are often
recognizable as such, much to the chagrin (or so one would hope) of
their authors.  Take the time to review what you send.  The more your
posts hold together structurally, the more they will be read.</para>
-->
<para>Bearbeiten Sie zwei mal. Bei jeder Nachricht, die länger ist als
ein mittellanger Absatz, sollten Sie, nachdem Sie der Meinung sind, dass
sie fertig ist, diese von oben bis unten erneut durchlesen, bevor Sie sie
versenden. Dieser Ratschlag wird jedem bekannt vorkommen, der einmal
an einem Schreibkurs teilgenommen hat, ist aber bei Online-Diskussionen
besonders wichtig. Da das Verfassen von Online-Nachrichten
von ständigen Unterbrechungen begleitet wird (während Sie schreiben,
müssen Sie vielleicht in andere E-Mails nachschauen, bestimmte Webseiten
besuchen, einen Befehl ausführen, um Diagnosmeldungen abzugreifen, usw.),
passiert es besonders schnell, dass man den erzählerischen Faden verliert.
Nachrichten, die mit Unterbrechungen verfasst und vor dem
Versenden nicht überprüft wurden, sind, zum Verdruss der Autoren
(möchte man zumindest hoffen), oft als solche erkennen. Nehmen Sie sich
die Zeit zu überprüfen, was Sie abschicken. Je besser der 
strukturelle Zusammenhalt Ihrer Nachrichten, desto mehr werden Sie
gelesen.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="writing-tone">
<!--
<title>Tone</title>
-->
<title>Tonfall</title>

<!--
<para>After writing thousands of messages, you will probably find your
style tending toward the terse.  This seems to be the norm in most
technical forums, and there's nothing wrong with it per se.  A degree
of terseness that would be unacceptable in normal social interactions
is simply the default for free software hackers.  Here's a response I
once drew on a mailing list about some free content management
software, quoted in full:</para>
-->
<para>Nachdem Sie tausende Nachrichten geschrieben haben, werden Sie
bemerken, dass Ihr Schreibstil zum knappen neigt. Das scheint in
den meisten technischen Foren der Normalfall zu sein, und an und gibt
es daran nichts falsches. Ein Grad an Knappheit, welcher im normalen
sozialen Umgang unzumutbar wäre ist für Hacker freier Software einfach
der Standard. Hier ist eine vollständig zitierte Reaktion, welche ich
einmal von einem Mailverteiler über freie Content-Management-Software
erhielt:</para>

<!--
<screen>
Can you possibly elaborate a bit more on exactly what problems
you ran into, etc?

Also:

What version of Slash are you using? I couldn't tell from your
original message.

Exactly how did you build the apache/mod_perl source?

Did you try the Apache 2.0 patch that was posted about on
slashcode.com?

  Shane
</screen>
-->
<screen>
Können Sie möglicherweise etwas näher auf die Probleme auf die Sie 
gestoßen sind, usw. eingehen? 

Desweiteren:

Welche Version von Slash benutzen Sie? Das konnte ich aus Ihrer
ursprünglichen Nachricht nicht erkennen.

Wie genau haben Sie den Build des apache/mod_perl-Quellcode ausgeführt?

Haben Sie den Apache-2.0-Patch ausprobiert, über den auf slashcode.com
berichtet wurde?

  Shane
</screen>

<!--
<para>Now <emphasis>that's</emphasis> terse!  No greeting, no sign-off
other than his name, and the message itself is just a series of
questions phrased as compactly as possible.  His one declarative
sentence was an implicit criticism of my original message.  And yet, I
was happy to see Shane's mail, and didn't take his terseness as a sign
of anything other than him being a busy person.  The mere fact that he
was asking questions, instead of ignoring my post, meant that he was
willing to spend some time on my problem.</para>
-->
<para><emphasis>Das</emphasis> ist jetzt mal knapp! Keine Begrüßung, 
abgesehen vom Namen keine Abmeldung, und die Nachricht selbst ist 
lediglich eine Aneinanderreihung von Fragen die so kompakt wie
möglich formuliert sind. Sein einziger Satz mit einer Aussage war eine
implizite Kritik an meine ursprüngliche Nachricht. Trotzdem war ich
glücklich darüber die Nachricht von Shane zu sehen, und ich fasste
die Knappheit seiner Antwort nicht als ein Anzeichen für irgend etwas
anderes als das er eine beschäftigte Person ist. Alleine die Tatsache,
dass er Fragen stellte, anstatt meine Nachricht zu ignorieren 
bedeutete, dass er bereit war etwas Zeit für meinem Problem 
aufzubringen.</para>

<!--
<para>Will all readers react positively to this style?  Not
necessarily; it depends on the person and the context.  For example,
if someone has just posted acknowledging that she made a mistake
(perhaps she wrote a bug), and you know from past experience that
this person tends to be a bit insecure, then while you may still write
a compact response, you should make sure to leaven it with some sort
of acknowledgment of her feelings.  The bulk of your response might
be a brief, engineer's-eye analysis of the situation, as terse as you
want.  But at the end, sign off with something indicating that your
terseness is not to be taken as coldness.  For example, if you've just
given reams of advice about exactly how the person should fix the bug,
then sign off with "Good luck, &lt;your name here&gt;" to indicate
that you wish them well and are not mad.  A strategically placed
smiley face or other emoticlue can often be enough to reassure an
interlocutor, too.</para>
-->
<para>Werden alle Leser auf diesen Schreibstil positiv reagieren? 
Nicht unbedingt; es kommt auf die Person und den Kontext an. Wenn
Jemand zum Beispiel eben erst geschrieben hat das sie einen Fehler
gemacht hat (vielleicht hat sie einen Bug geschrieben), und Sie aus
vergangener Erfahrung wissen, dass diese Person dazu neigt etwas
Unsicher zu sein, auch wenn Sie trotzdem noch eine knappe Antwort
schreiben, sollten Sie es durch etwas aufwiegen was ihre Gefühle
anerkennt. Der größte Teil Ihrer Antwort mag kurz gehalten sein,
eine Analyse der Situation aus Sicht eines Ingenieurs, so kurz wie
Sie wollen. Melden Sie sich aber zum Schluss mit etwas ab, dass es
nicht als Kälte aufgefasst werden soll. Wenn Sie zum Beispiel der
Person eben erst eine Unmenge an Ratschläge gegeben haben wie sie
einen Bug beheben soll, dann melden Sie sich mit "Viel Glück, &lt;hier
Ihr Name&gt;" um anzudeuten, dass Sie ihnen gutes wünschen und nicht
Sauer sind. Ein strategisch platzierter Smiley oder ein anderer 
Hinweis auf die Gefühlslage kann oft auch ausreichen um den 
Gesprächspartner zu beruhigen.</para>

<!--
<para>It may seem odd to focus as much on the participant's feelings
as on the surface of what they say, but to put it baldly, feelings
affect productivity.  Feelings are important for other reasons too,
but even confining ourselves to purely utilitarian grounds, we may
note that unhappy people write worse software, and less of it.  Given
the restricted nature of most electronic media, though, there will
often be no overt clue as to how a person is feeling.  You will have
to make an educated guess based on a) how most people would feel in
that situation, and b) what you know of this particular person from
past interactions.  Some people prefer a more hands-off attitude, and
simply deal with everyone at face value, the idea being that if a
participant doesn't say outright that she feels a particular way, then
one has no business treating her as though she does.  I don't buy this
approach, for a couple of reasons.  One, people don't behave that way
in real life, so why would they online?  Two, since most interactions
take place in public forums, people tend to be even more restrained in
expressing emotions than they might be in private.  To be more
precise, they are often willing to express emotions directed at
others, such as gratitude or outrage, but not emotions directed
inwardly, such as insecurity or pride.  Yet most humans work better
when they know that others are aware of their state of mind.  By
paying attention to small clues, you can usually guess right most of
the time, and motivate people to stay involved to a greater degree
than they otherwise might.</para>
-->
<para>Es mag komisch erscheinen derart auf die Gefühle des Beteiligten
zu achten, als darauf was sie sagen, aber um es kahl zu sagen, 
beeinflussen Gefühle die Produktivität. Gefühle sind auch aus anderen
Gründen wichtig, selbst wenn wir uns aber ausschließlich auf nutzungsbezogene 
Gebiete zu beschränken, können wir anmerken, dass unglückliche Menschen
schlechtere Software schreiben, und weniger davon. Angesichts der 
begrenzten Natur der meisten elektronischen Medien, wird es jedoch
keinen offensichtlichen Hinweis darauf geben, in welcher
Stimmung sich die Person befindet. Sie werden eine wohlbegründete 
Vermutung darüber anstellen müssen basierend auf a) wie die meisten
Menschen sich in einer solchen Situation fühlen, und b) was Sie über
diese Person aus vergangenen Dialogen wissen. Manche Menschen
bevorzugen eine eher unpersönliche Einstellung, und behandeln all
gleichermaßen nach ihrer oberflächlichen Erscheinung, wobei die Idee
die dahintersteckt ist, dass wenn die Beteiligte nicht offen sagt,
dass sie sich irgendwie fühlt, hat man kein Recht sie so zu behandeln
als ob das der Fall wäre. Ich mag diese Herangehensweise aus mehreren
Gründen nicht. Erstens, verhalten sich Menschen im echten Leben nicht
so, also warum sollten Sie es online machen? Zweitens, da die meisten
Interaktionen in öffentlichen Foren stattfinden, neigen Leute dazu
sich noch mehr zurück zu halten als das im privaten der Fall wäre.
Um es genauer zu sagen, sie sind oft bereit auf andere gerichtete
Gefühle auszudrücken, wie Dankbarkeit oder Unmut, nicht jedoch nach
innen gerichtete Gefühle wie Unsicherheit oder Stolz. Trotzdem
arbeiten die meisten Menschen besser, wenn sie wissen, dass andere
über ihre Verfassung im klaren sind. Indem Sie auf kleine Hinweise
achten, können Sie die meiste Zeit für gewöhnlich richtig raten,
und andere Personen motivieren weiterhin in größerem Maße beteiligt zu
bleiben als es sonst der Fall wäre.</para>

<!--
<para>I don't mean, of course, that your role is to be a group
therapist, constantly helping everyone to get in touch with their
feelings.  But by paying careful attention to long-term patterns in
people's behavior, you will begin to get a sense of them as
individuals even if you never meet them face-to-face.  And by being
sensitive to the tone of your own writing, you can have a surprising
amount of influence over how others feel, to the ultimate benefit of
the project.</para>
-->
<para>Damit meine ich natürlich nicht, dass Sie die Rolle des
Gruppentherapeuten einnehmen sollen, der andauernd jeden dabei helfen
soll, sich über seine Gefühle im klaren zu sein. Indem Sie aber 
sorgfältig auf Muster im langfristigen Verhalten von Personen achten,
werden Sie ein Gespür für sie als Individuen bekommen, selbst wenn Sie
nie von Angesicht zu Angesicht treffen. Und indem Sie auf den Ton Ihrer
Nachrichten achten, können Sie einen überraschenden Einfluss darauf 
haben wie sich andere fühlen, was letztendlich dem Projekt zugute 
kommt.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="rudeness">
<!--
<title>Recognizing Rudeness</title>
-->
<title>Unhöflichkeiten erkennen</title>

<!--
<para>One of the defining characteristics of open source culture is
its distinctive notions of what does and does not constitute rudeness.
While the conventions described below are not unique to free software
development, nor even to software in general&mdash;they would be
familiar to anyone working in mathematics, the hard sciences, or
engineering disciplines&mdash;free software, with its porous
boundaries and constant influx of newcomers, is an environment where
these conventions are especially likely to be encountered by people
unfamiliar with them.</para>
-->
<para>Eine der bestimmenden Eigenschaften der Open-Source-Kultur ist
ihre ausgeprägte Auffassung darüber, was unhöflich ist und was nicht.
Obwohl die unten beschriebenen Grundsätze nicht alleine für die
Entwicklung freier Software gelten, oder auch für Software im 
allgemeinen &ndash; sie wären jedem bekannt der im Bereich der Mathematik,
der technischen Wissenschaften oder im Ingenieurswesen arbeitet &ndash; 
ist freie Software, mit seinen offenen Grenzen und ständigen Fluss an 
Einwanderern, eine Umgebung in der diese Grundsätze besonders häufig von 
Personen begegnet wird, die mit Ihnen nicht vertraut sind.</para>

<!--
<para>Let's start with the things that are <emphasis>not</emphasis>
rude:</para>
-->
<para>Lass uns damit anfangen, was <emphasis>nicht</emphasis>
unhöflich ist:</para>

<!--
<para>Technical criticism, even when direct and unpadded, is not rude.
Indeed, it can be a form of flattery: the critic is saying, by
implication, that the target is worth taking seriously, and is worth
spending some time on.  That is, the more viable it would have been to
simply ignore someone's post, the more of a compliment it becomes to
take the time to criticize it (unless the critique descends into an
<foreignphrase>ad hominem</foreignphrase> attack or some other form of
obvious rudeness, of course).</para>
-->
<para>Technische Kritik, selbst direkte und ungepolsterte ist nicht
unhöflich. Es kann sogar eine Art von Kompliment sein: Der Kritiker
sagt implizit, dass die Zielperson es wert ist ernst genommen zu
werden und Zeit mit auf zu bringen. Das heißt, je attraktiver es
gewesen wäre die Nachricht von jemand zu ignorieren, desto eher ist es
ein Kompliment sich die Zeit zu nehmen es zu kritisieren (natürlich
ausgeschlossen ist wenn die Kritik zu einem persönlichen Angriff 
oder einer anderen Form von Unhöflichkeit verfällt).</para>

<!--
<para>Blunt, unadorned questions, such as Shane's questions to me in
the previously quoted email, are not rude either.  Questions that in
other contexts might seem cold, rhetorical, or even mocking, are often
intended seriously, and have no hidden agenda other than eliciting
information as quickly as possible.  The famous technical support
question "Is your computer plugged in?" is a classic example of this.
The support person really does need to know if your computer is
plugged in, and after the first few days on the job, has gotten tired
of prefixing her question with polite blandishments ("I beg your
pardon, I just want to ask a few simple questions to rule out some
possibilities.  Some of these might seem pretty basic, but bear with
me...").  At this point, she doesn't bother with the padding anymore,
she just asks straight out: is it plugged in or not?  Equivalent
questions are asked all the time on free software mailing lists.  The
intent is not to insult the recipient, but to quickly rule out the
most obvious (and perhaps most common) explanations.  Recipients who
understand this and react accordingly win points for taking a
broad-minded view without prompting.  But recipients who react badly
should not be reprimanded, either.  It's just a collision of cultures,
not anyone's fault.  Explain amiably that your question (or criticism)
had no hidden meanings; it was just meant to get (or transmit)
information as efficiently as possible, nothing more.</para>
-->
<para>Knappe, ungeschminkte Fragen, wie die in der vorhin zitierten
E-Mail von Shane an mich, sind auch nicht unhöflich. Fragen die in einem
anderen Kontext kalt oder rhetorisch, selbst verspottend erscheinen
könnten, sind oft ernst gemeint, und haben keinen Hintergedanken außer
die Informationen so schnell wie möglich zu herauszulocken. Die
berühmte Frage vom technischen Support "Ist Ihr Computer angeschlossen?"
ist ein klassisches Beispiel hierfür. Die Person von Support muss
wirklich wissen, ob Ihr Computer angeschlossen ist, und nach den ersten
paar Tagen bei dieser Arbeit, ist sie müde geworden höflichen 
Schmeicheleien ihren Fragen voranzustellen ("Entschuldigen Sie, ich
möchte lediglich vorher ein paar einfache Fragen stellen, um ein paar
Möglichkeiten aus dem Weg zu räumen. Manche davon mögen sich ziemlich
einfach anhören, haben Sie aber bitte Nachsicht..."). Mittlerweile
macht sie sich aber nicht mehr die Mühe mit der Höflichkeit, sie fragt
einfach gerade heraus: Ist es angeschlossen oder nicht? Die gleichen 
Fragen werden andauernd auf den Mailverteilern freier Software 
gestellt. Die Absicht ist nicht, den Empfänger zu beleidigen, sondern
schnell einige der offensichtlichsten (und möglicherweise häufigsten)
Erklärungen auszuschließen. Empfänger die das verstehen und entsprechend 
reagieren gewinnen Pluspunkte eine aufgeschlossene Sicht
ohne Widerrede eingenommen zu haben. Es ist einfach ein 
Aufeinandertreffen verschiedener Kulturen, und nicht die Schuld von
irgendjemandem. Erklären Sie freundlich, dass Ihre Frage (oder Kritik)
keine versteckte Bedeutung hatte; es war lediglich gedacht die
Information so schnell und effizient wie möglich zu bekommen (oder
übertragen) und sonst nichts.</para>

<!--
<para>So what is rude?</para>
-->
<para>Was ist als Unhöflich?</para>

<!--
<para>By the same principle under which detailed technical criticism
is a form of flattery, failure to provide quality criticism can be a
kind of insult.  I don't mean simply ignoring someone's work, be it
proposal, code change, new issue filing, or whatever.  Unless you
explicitly promised a detailed reaction in advance, it's usually okay
to simply not react at all.  People will assume you just didn't have
time to say anything.  But if you <emphasis>do</emphasis> react, don't
skimp: take the time to really analyze things, provide concrete
examples where appropriate, dig around in the archives to find related
posts from the past, etc.  Or if you don't have time to put in that
kind of effort, but still need to write some sort of brief response,
then state the shortcoming openly in your message ("I think there's an
issue filed for this, but unfortunately didn't have time to search for
it, sorry").  The main thing is to recognize the existence of the
cultural norm, either by fulfilling it or by openly acknowledging
that one has fallen short this time.  Either way, the norm is
strengthened.  But failing to meet that norm, while at the same time
not explaining <emphasis>why</emphasis> you failed to meet it, is like
saying the topic (and those participating in it) was not worth much
of your time.  Better to show that your time is valuable by being
terse than by being lazy.</para>
-->
<para>Nach dem gleichen Prinzip mit der detaillierte technische Kritik
als Kompliment aufgefasst werden kann, kann das Weglassen von
hochwertiger Kritik eine Art von Beleidigung bedeuten. Ich meine nicht 
nur die Arbeit von jemandem zu ignorieren, sei es ein Vorschlag, eine Änderung
am Code oder ein die Meldung von einem Issue oder sonst etwas. Wenn Sie
nicht vorher explizit eine detaillierte Antwort versprochen haben, ist
es gewöhnlich in Ordnung einfach überhaupt nicht zu reagieren. Man wird
annehmen, dass Sie einfach keine Zeit hatten etwas zu sagen. Wenn Sie
aber <emphasis>doch</emphasis> eine Antwort geben, sollten Sie nicht knausern:
nehmen Sie sich die Zeit die Sachen wirklich zu untersuchen, geben Sie
konkrete Beispiele an wo angemessen, wühlen Sie in den Archiven herum
um verwandte Nachrichten zu finden, usw. Oder wenn Sie nicht die Zeit
haben eine solche Mühe aufzubringen, aber trotzdem irgend eine kurze
Antwort geben müssen, dann erklären Sie den Defizit offen in Ihrer
Nachricht ("Entschuldigung, ich denke es gibt hierzu eine Meldung, 
hatte aber leider nicht die Zeit um danach zu suchen"). Die Hauptsache
ist die kulturelle Norm anzuerkennen, entweder indem man sie erfüllt,
oder offen zuzugeben, dass man ihr dieses mal nicht gerecht geworden
ist. In beiden Fällen wird die Norm verstärkt. Der Norm aber nicht
gerecht zu werden und gleichzeitig nicht zu erklären <emphasis>warum
</emphasis>, Sie es nicht geschafft haben Ihnen gerecht zu werden,
ist das gleiche, als ob Sie sagen würden, dass das Thema (und die
daran Beteiligten) nicht viel Ihrer Zeit wert war. Es ist besser zu
zeigen, dass Ihre Zeit wertvoll ist, indem Sie sich kurz halten als
indem Sie faul sind.</para>

<!--
<para>There are many other forms of rudeness, of course, but most of
them are not specific to free software development, and common sense
is a good enough guide to avoid them.  See also
<xref linkend="prevent-rudeness"/><phrase output="printed"> in
<xref linkend="getting-started"/></phrase>, if you haven't
already.</para>
-->
<para>Es gibt viele andere Formen der Unhöflichkeit, die nicht nur
auf Open Source Entwicklung zutrifft und der gesunde Menschenverstand 
hilft in der Regel sie zu vermeiden. Siehe auch
<xref linkend="prevent-rudeness"/><phrase output="printed"> im Kapitel
<xref linkend="getting-started"/></phrase>, wenn Sie es noch nicht
gemacht haben.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="face">
<!--
<title>Face</title>
-->
<title>Gesicht zeigen</title>

<!--
<para>There is a region in the human brain devoted specifically to
recognizing faces.  It is known informally as the "fusiform face
area," and its capabilities are mostly inborn, not learned.  It turns
out that recognizing individual people is such a crucial survival
skill that we have evolved specialized hardware to do it.</para>
-->
<para>Es gibt einen Bereich im menschlichen Gehirn, der speziell
der Erkennung von Gesichtern gewidmet ist. Es wird als "fusiformes 
Gesichtsareal" (en. fusiform face area) bezeichnet und seine
Fähigkeiten sind größtenteils angeboren und nicht angelernt. Es hat
sich herausgestellt, dass die Erkennung von Gesichtern eine derart
wichtige Fähigkeit ist um zu überleben, dass wir spezielle Hardware
dafür entwickelt haben.</para>

<!--
<para>Internet-based collaboration is therefore psychologically odd,
because it involves tight cooperation between human beings who almost
never get to identify each other by the most natural, intuitive
methods: facial recognition first of all, but also sound of voice,
posture, etc.  To compensate for this, try to use a consistent
<firstterm>screen name</firstterm> everywhere.  It should be the front
part of your email address (the part before the @-sign), your IRC
username, your repository committer name, your issue tracker username,
and so on.  This name is your online "face": a short identifying
string that serves some of the same purpose as your real face,
although it does not, unfortunately, stimulate the same built-in
hardware in the brain.</para>
-->
<para>Internet basierende Zusammenarbeit ist deshalb psychologisch 
etwas merkwürdig, da es eine enge Mitarbeit zwischen Menschen 
erfordert, die fast nie die Gelegenheit bekommen sich gegenseitig mit den
intuitivsten Methoden zu identifizieren: erstens durch Gesichter,
aber auch durch Stimme, Haltung, usw. Um das zu kompensieren, sollten
Sie versuchen, überall den selben <firstterm>Bildschirm-Namen
</firstterm> verwenden. Es sollte der vordere Teil Ihrer E-Mail-Adresse
sein (der Teil vor dem @-Zeichen), Ihr Nutzername im IRC,
der Name Ihres Kontos im Projektarchiv, im Bug Tracker usw. Dieser
Name ist Ihr online "Gesicht": Ein Kürzel um Sie zu identifizieren,
welches manche der gleichen Funktionen erfüllt wie Ihr Gesicht,
auch wenn es leider nicht die eingebaute Hardware im Gehirn anregt.
</para>

<!--
<para>The screen name should be some intuitive permutation of your
real name (mine, for example, is "kfogel").  In some situations it
will be accompanied by your full name anyway, for example in mail
headers:</para>
-->
<para>Der Bildschirm-Name sollte eine intuitive Permutation Ihres
echten Namens sein (meiner, zum Beispiel ist "kfogel"). In manchen
Situationen wird es sowieso von Ihrem kompletten Namen begleitet,
zum Beispiel im Kopf einer E-Mail:</para>

<!--
<screen>
From: "Karl Fogel" &lt;kfogel@whateverdomain.com&gt;
</screen>
-->
<screen>
Von: "Karl Fogel" &lt;kfogel@irgendeinedomain.com&gt;
</screen>

<!--
<para>Actually, there are two things going on in that example.  As
mentioned earlier, the screen name matches the real name in an
intuitive way.  But also, the real name is <emphasis>real</emphasis>.
That is, it's not some made-up appellation like:</para>
-->
<para>Tatsächlich gibt es zwei Sachen in dem Beispiel auf die man
achten sollte. Wie vorhin erwähnt, gleicht der Bildschirm-Name dem 
echten auf eine intuitive Art. Der echte Name ist aber auch 
<emphasis>echt</emphasis>. Also kein erfundener wie:</para>

<!--
<screen>
From: "Wonder Hacker" &lt;wonderhacker@whateverdomain.com&gt;
</screen>
-->
<screen>
Von: "Super Hacker" &lt;superhacker@irgendeinedomain.com&gt;
</screen>

<!--
<para>There's a famous cartoon by Paul Steiner, from the July 5, 1993
issue of <citetitle>The New Yorker</citetitle>, that shows one dog
logged into a computer terminal, looking down and telling another
conspiratorially: "On the Internet, nobody knows you're a dog."  This
kind of thought probably lies behind a lot of the self-aggrandizing,
meant-to-be-hip online identities people give themselves&mdash;as if
calling oneself "Wonder Hacker" will actually cause people to believe
one <emphasis>is</emphasis> a wonderful hacker.  But the fact remains:
even if no one knows you're a dog, you're still a dog.  A fantastical
online identity never impresses readers.  Instead, it makes them think
you're more into image than substance, or that you're simply insecure.
Use your real name for all interactions, or if for some reason you
require anonymity, then make up a name that sounds like a perfectly
normal real name, and use it consistently.</para>
-->
<para>Es gibt einen berühmten Cartoon von Paul Steiner, in der Ausgabe vom
5 Juli 1993 der Zeitung <citetitle>The New Yorker</citetitle>, welches
einen Hund an einem Terminal zeigt, der zu einem anderen 
verschwörerisch herunterschaut und sagt: "Im Internet weiß keiner, dass
du ein Hund bist". Diese Denkart ist es wahrscheinlich, die hinter
einer Vielzahl an selbstverherrlichenden soll-wohl-cool-sein 
Online-Identitäten liegen, die Leute sich selber geben &ndash; als ob 
die Leute glauben würden man wäre <emphasis>tatsächlich</emphasis> 
ein toller Hacker wenn man sich "Super Hacker" nennt. Tatsache bleibt
aber: Selbst wenn keiner weiß das Sie ein Hund sind, sind Sie immer
noch ein Hund. Eine glorreiche Online-Identität beeindruckt nie die
Leser. Statt dessen gibt es ihnen den Eindruck, als würden Sie eher
auf das Erscheinungsbild achten als auf den Inhalt, oder dass Sie 
einfach nur unsicher sind. Benutzen Sie Ihren echten Namen für alle
Dialoge, oder wenn Sie aus irgend einem Grund anonym bleiben müssen,
dann erfinden Sie einen Namen der sich wie ein gewöhnlicher anhört 
und bleiben Sie ab da bei ihm.</para>

<!--
<para>In addition to keeping your online face consistent, there are
some things you can do to make it more attractive.  If you have an
official title (e.g., "doctor", "professor", "director"), don't flaunt
it, nor even mention it except when it's directly relevant to the
conversation.  Hackerdom in general, and free software culture in
particular, tends to view title displays as exclusionary and a sign of
insecurity.  It's okay if your title appears as part of a standard
signature block at the end of every mail you send, just don't ever use
it as a tool to bolster your position in a discussion&mdash;the
attempt is guaranteed to backfire.  You want folks to respect the
person, not the title.</para>
-->
<para>Es gibt noch ein paar weitere Sachen die Sie machen können um
Ihr Online-Gesicht attraktiver zu machen, abgesehen davon, dass Sie es
konsistent halten. Wenn Sie einen Titel haben (wie "Doktor" oder 
"Professor"), sollten Sie nicht mit Ihm herum stolzieren, oder auch nur
erwähnen, außer wenn es direkt für die Diskussion bedeutend ist. Im
Allgemeinen neigt die Kultur von Hacker und der freien Software dazu,
das vorzeigen von Titel als etwas ausschließendes und ein Zeichen von
Unsicherheit zu betrachten. Es ist in Ordnung wenn Ihr Titel als Teil
Ihrer Signatur am ende jeder E-Mail die Sie abschicken erscheint,
benutzen Sie es jedoch niemals als um Ihre Position in einer Diskussion
zu verstärken &ndash; der Versuch wird garantiert zurückschlagen. Sie
wollen, dass man die Person respektiert, nicht den Titel.</para>

<!--
<para>Speaking of signature blocks: keep them small and tasteful, or
better yet, nonexistent.  Avoid large legal disclaimers tacked on to
the end of every mail, especially when they express sentiments
incompatible with participation in a free software project.  For
example, the following classic of the genre appears at the end of
every post a particular user makes to a public mailing list I'm
on:</para>
-->
<para>Wo wir gerade von Signaturen sprechen: halten Sie sie kurz und
geschmackvoll, oder lassen Sie sie besser gleich weg. Vermeiden Sie
lange rechtliche Klausel für den Haftungsausschluss die an jede E-Mail
angehängt werden, insbesondere wenn Sie eine Stimmung ausdrücken die
nicht mit der Beteiligung an einem freien Software-Projekt vereinbar
sind. Der folgende Klassiker dieser Gattung erscheint zum Beispiel am
Ende jeder Nachricht von einem bestimmten Nutzer auf einem 
öffentlichen Verteiler bei dem ich angemeldet bin:</para>

<screen>
WICHTIGER HINWEIS

Wenn Sie diese E-Mail fehlerhafterweise erhalten haben oder den
Haftungsausschluss unserer E-Mails lesen wollen, wenden Sie sich bitte
an die folgende Erklärung under nehmen Sie mit dem Absender Kontakt
auf.

This communication is from Deloitte &amp; Touche LLP.  Deloitte &amp;
Touche LLP is a limited liability partnership registered in England
and Wales with registered number OC303675.  A list of members' names
is available for inspection at Stonecutter Court, 1 Stonecutter
Street, London EC4A 4TR, United Kingdom, the firm's principal place of
business and registered office.  Deloitte &amp; Touche LLP is
authorised and regulated by the Financial Services Authority.

This communication and any attachments contain information which is
confidential and may also be privileged.  It is for the exclusive use
of the intended recipient(s).  If you are not the intended
recipient(s) please note that any form of disclosure, distribution,
copying or use of this communication or the information in it or in
any attachments is strictly prohibited and may be unlawful.  If you
have received this communication in error, please return it with the
title "received in error" to IT.SECURITY.UK@deloitte.co.uk then delete
the email and destroy any copies of it.

E-mail communications cannot be guaranteed to be secure or error free,
as information could be intercepted, corrupted, amended, lost,
destroyed, arrive late or incomplete, or contain viruses.  We do not
accept liability for any such matters or their consequences.  Anyone
who communicates with us by e-mail is taken to accept the risks in
doing so.

When addressed to our clients, any opinions or advice contained in
this e-mail and any attachments are subject to the terms and
conditions expressed in the governing Deloitte &amp; Touche LLP client
engagement letter.

Opinions, conclusions and other information in this e-mail and any
attachments which do not relate to the official business of the firm
are neither given nor endorsed by it.
</screen>

<!--
<para>For someone who's just showing up to ask a question now and
then, that huge disclaimer looks a bit silly but probably doesn't do
any lasting harm.  However, if this person wanted to participate
actively in the project, that legal boilerplate would start to have a
more insidious effect.  It would send at least two potentially
destructive signals: first, that this person doesn't have full control
over his tools&mdash;he's trapped inside some corporate mailer that
tacks an annoying message to the end of every email, and he hasn't got
any way to route around it&mdash;and second, that he has little or no
organizational support for his free software activities.  True, the
organization has clearly not banned him outright from posting to
public lists, but it has made his posts look distinctly unwelcoming,
as though the risk of letting out confidential information must trump
all other priorities.</para>
-->
<para>Für jemanden der lediglich ab und an ein paar Fragen stellen möchte,
erscheint dieser riesige Haftungsausschluss etwas albern aber verursacht 
wahrscheinlich keinen dauerhaften Schaden. Wenn diese Person sich
jedoch aktiv an dem Projekt beteiligen wollte, würde dieser Rechtliche
Textblock eine heimtückischere Wirkung haben. Es würde mindestens zwei
möglicherweise schädliche Signal aussenden: Erstens, dass diese Person
nicht die komplette Kontrolle über seine Werkzeuge hat &ndash; er ist in
irgend einem E-Mail-System von einem Unternehmen, welches an jede E-Mail
eine nervige Botschaft anhängt, und er hat keine Möglichkeit es zu
umgehen &ndash; und zweitens, dass er wenig oder keine Unterstützung von
seiner Organisation für seine Aktivitäten bei freier Software hat.
Zugegeben, die Organisation hat ihm ganz klar nicht direkt verboten an
öffentliche Verteiler zu schreiben, aber sie lässt seine Nachrichten
eindeutig unfreundlich aussehen, als ob das Risiko vertrauliche
Informationen herauszulassen über allens anderen Prioritäten steht.</para>

<!--
<para>If you work for an organization that insists on adding such
signature blocks to all outgoing mail, then consider getting a free
email account from, for example, <ulink url="http://gmail.com/"
>gmail.com</ulink>, <ulink url="http://www.hotmail.com/"
>hotmail.com</ulink>, or <ulink url="http://www.yahoo.com/"
>yahoo.com</ulink>, and using that as your address for the
project.</para>
-->
<para>Wenn Sie für eine Organisation arbeiten, welche darauf besteht,
solche Signaturen an alle abgehenden E-Mails anzuhängen, dann sollten
Sie in Betracht ziehen, sich eine kostenlose E-Mail-Adresse anzulegen,
zum Beispiel bei <ulink url="gmail.google.com"/>,
<ulink url="www.hotmail.com"/>, oder <ulink url="www.yahoo.com"/>, und
benutzen Sie diese Adresse für das Projekt.</para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->

<sect1 id="common-pitfalls">
<!--
<title>Avoiding Common Pitfalls</title>
-->
<title>Vermeidung häufiger Fallstricke</title>

<!-- ======================== subsection ============================== -->

<sect2 id="post-with-purpose">
<!--
<title>Don't Post Without a Purpose</title>
-->
<title>Schreiben Sie nicht ohne Veranlassung</title>

<!--
<para>A common pitfall in online project participation is to think
that you have to respond to everything.  You don't.  First of all,
there will usually be more threads going on than you can keep track
of, at least after the project is past its first few months.  Second,
even in the threads that you have decided to engage in, much of what
people say will not require a response.  Development forums in
particular tend to be dominated by three kinds of messages:</para>
-->
<para>Eine häufiger Fehler bei der Beteiligung an einem Online-Projekt
ist zu denken, dass Sie auf alles reagieren müssen. Das müssen Sie 
nicht. Erstens wird es für gewöhnlich mehr Threads geben, über die Sie 
den Überblick behalten können, zumindest nachdem das Projekt die
ersten paar Monate überschritten hat. Zweitens wird das meiste in den Theras
bei denen Sie sich entschieden haben, sie zu verfolgen, keiner Antwort 
erfordern. Gerade Entwicklerforen neigen dazu von drei Arten von 
Nachrichten beherrscht zu werden:</para>

<!--
<orderedlist>
  <listitem><para>Messages proposing something non-trivial</para></listitem>
  <listitem><para>Messages expressing support or opposition to
                  something someone else has said</para></listitem>
  <listitem><para>Summing-up messages</para></listitem>
</orderedlist>
-->
<orderedlist>
  <listitem><para>Nachrichten die etwas nicht triviales vorschlagen
                  </para></listitem>
  <listitem><para>Nachrichten die Unterstützung oder Widerstand für
                  oder gegen etwas ausdrücken was jemand anderes
                  gesagt hat</para></listitem>
  <listitem><para>Zusammenfassende Nachrichten</para></listitem>
</orderedlist>

<!--
<para>None of these <emphasis>inherently</emphasis> requires a
response, particularly if you can be fairly sure, based on watching
the thread so far, that someone else is likely to say what you would
have said anyway.  (If you're worried that you'll be caught in a
wait-wait loop because all the others are using this tactic too, don't
be; there's almost always <emphasis>someone</emphasis> out there
who'll feel like jumping into the fray.)  A response should be
motivated by a definite purpose.  Ask yourself first: do you know what
you want to accomplish?  And second: will it not get accomplished
unless you say something?</para>
-->
<para>Von diesen erfordert keine <emphasis>an und für sich</emphasis>
eine Rückmeldung, insbesondere wenn Sie sich auf der Grundlage von dem
was Sie bisher in dem Thread gesehen haben, sicher sein können, dass
jemand anderes wahrscheinlich sowieso das sagen wird, was Sie eh gesagt
hätten. (Machen Sie sich keine Sorgen, dass Sie in einer Schleife 
gefangen werden, bei dem jeder auf den anderen wartet, weil jeder die
gleiche Taktik verfolgt; es gibt fast immer 
<emphasis>Irgendjemanden</emphasis> der das Bedürfnis hat sich in die
Schlacht zu stürzen. Fragen Sie sich erstens: Wissen Sie was
Sie erreichen wollen? Und zweitens: Wird dieses Ziel nicht erreicht
werden, ohne dass Sie etwas sagen?</para>

<!--
<para>Two good reasons to add your voice to a thread are a) when you
see a flaw in a proposal and suspect that you're the only one who sees
it, and b) when you see that miscommunication is happening between
others, and know that you can fix it with a clarifying post.  It's
also generally fine to post just to thank someone for doing something,
or to say "Me too!", because a reader can tell right away that such
posts do not require any response or further action, and therefore the
mental effort demanded by the post ends cleanly when the reader
reaches the last line of the mail.  But even then, think twice before
saying something; it's always better to leave people wishing you'd
post more than wishing you'd post less.  (See the second half of <xref
linkend="bikeshed-full"/> for more thoughts about how to behave on
a busy mailing list.)</para>
-->
<para>Zwei gute Gründe Ihre Stimme bei einem Thread einzulegen, sind a)
wenn Sie einen Fehler in einem Vorschlag sehen, und vermuten, dass Sie
die einzige sind, der es sieht, und b) wenn Sie sehen, dass in der
Kommunikation etwas schief läuft und Sie wissen, dass Sie es richten
können indem Sie eine klärende Nachricht schreiben. Es ist im 
allgemeinen auch in Ordnung eine Nachricht zu schicken, nur um jemanden
für etwas zu danken, oder um "Ich auch!" zu sagen, da ein Leser bei
solchen Nachrichten sofort erkennen kann, dass sie keiner weiteren
Antwort oder Handlung bedürfen und deshalb endet die geistige 
Anstrengung die sie erfordern sauber mit der letzten Zeile der E-Mail.
Selbst dann sollten Sie zwei mal darüber nachdenken, bevor Sie etwas 
sagen; es ist immer besser Menschen wünschen zu lassen, dass Sie mehr
schreiben, als dass die weniger schreiben. (Siehe den zweiten Teil von
<xref linkend="bikeshed-full"/> für weiteres darüber wie man sich auf
betriebsamen Mailverteilern verhalten soll.)</para>

</sect2>

<!-- ======================== subsection ============================== -->

<sect2 id="productive-threads">
<!--
<title>Productive vs Unproductive Threads</title>
-->
<title>Produktive kontra unproduktive Threads</title>

<!--
<para>On a busy mailing list, you have two imperatives.  One,
obviously, is to figure out what you need to pay attention to and what
you can ignore.  The other is to behave in a way that
avoids <emphasis>causing</emphasis> noise: not only do you want your
own posts to have a high signal/noise ratio, you also want them to be
the sorts of messages that stimulate <emphasis>other</emphasis> people
to either post with a similarly high signal/noise ratio, or not post
at all.</para>
-->
<para>Auf einem betriebsamen Mailverteiler haben Sie zwei Pflichten.
Eines ist herauszufinden, worauf Sie achten müssen und
was Sie ignorieren können. Das andere ist, sich derart zu verhalten,
dass Sie es vermeiden Rauschen zu <emphasis>erzeugen</emphasis>: Sie
wollen nicht nur, dass Ihre eigene Nachrichten ein hohes 
Signal/Rausch-Verhältnis
haben, sondern, dass es die Art von Nachrichten sind, die
<emphasis>andere</emphasis> dazu anregen entweder Nachrichten mit einem
ähnlich hohen Signal/Rausch-Verhältnis zu schreiben, oder überhaupt
nicht zu schreiben.</para>

<!--
<para>To see how to do that, let's consider the context in which it is
done.  What are some of the hallmarks of an unproductive thread?</para>
-->
<para>Um zu sehen wie Sie das erreichen können, lassen Sie uns den Kontext
bedenken in dem so etwas passiert. Was sind einige der Ecksteine von
unproduktiven Threads?</para>

<itemizedlist>
  <!--
  <listitem><para>Arguments that have been made already start being
            repeated, as though the poster thinks no one heard them
            the first time.</para>
  </listitem>
  -->
  <listitem><para>Argumente die bereits aufgeworfen wurden fangen an
	wiederholt zu werden, als ob der Absender denkt, dass keiner
	sie beim erstem mal gehört hat.</para>
  </listitem>
  <!--
  <listitem><para>Increasing levels of hyperbole and involvement as
            the stakes get smaller and smaller.</para>
  </listitem>
  -->
  <listitem><para>Eine Zunahme an Übertreibung und Beteiligung während
	die der Einsatz immer kleiner wird.</para>
  </listitem>
  <!--
  <listitem><para>A majority of comments coming from people who do
            little or nothing, while the people who tend to get things
            done are silent.</para>
  </listitem>
  -->
  <listitem><para>Eine Mehrheit der Kommentare stammt von Personen die
	wenig oder gar nichts machen, während diejenigen die dazu 
	neigen Sachen erledigt zu bekommen ruhig sind.</para>
  </listitem>
  <!--
  <listitem><para>Many ideas discussed without clear proposals ever
            being made.  (Of course, any interesting idea starts out
            as an imprecise vision; the important question is what
            direction it goes from there.  Does the thread seem to be
            turning the vision into something more concrete, or is it
            spinning off into sub-visions, side-visions, and
            ontological disputes?)</para>
  </listitem>
  -->
  <listitem><para>Viele Ideen werden diskutiert, ohne dass klare 
	Vorschläge gemacht werden. (Natürlich fängt jede interessante
	Idee als eine ungenaue Vision an; die wichtige Frage ist in welche
	Richtung sie sich von da weiterentwickelt. Erscheint es so als ob der
	Thread die Vision in etwas konkreteres verwandelt, oder
	schweift es ab in unter Unter-Visionen, Neben-Visionen und 
	Auseinandersetzungen über Grundsatzfragen?)</para>
  </listitem>
</itemizedlist>

<!--
<para>Just because a thread is not productive at first doesn't mean
it's a waste of time.  It might be about an important topic, in which
case the fact that it's not making any headway is all the more
troublesome.</para>
-->
<para>Nur weil ein Thread anfangs nicht produktiv ist, bedeutet es 
nicht, das es Zeitverschwendung ist. Es kann sich um ein wichtiges
Thema drehen, bei dem die Tatsache, dass es nicht vorankommt um so
beunruhigender ist.</para>

<!--
<para>Guiding a thread toward usefulness without being pushy is an
art.  It won't work to simply admonish people to stop wasting their
time, or to ask them not to post unless they have something constructive
to say.  You may, of course, think these things privately, but if you
say them out loud then you will be offensive.  Instead, you have to
suggest conditions for further progress&mdash;give people a route, a
path to follow that leads to the results you want, yet without
sounding like you're dictating conduct.  The distinction is largely
one of tone.  For example, this is bad:</para>
-->
<para>Einen Thread in eine nützliche Richtung zu führen, ohne aggressiv
zu sein, ist eine Kunst. Es wird nicht funktionieren, Leute einfach
abzumahnen, ihre Zeit nicht zu verschwenden, oder Sie darum zu bitten
nicht zu schreiben, es sei denn Sie haben etwas konstruktives
beizutragen. Es mag natürlich sein, dass Sie das privat denken, aber
wenn Sie es laut sagen, werden Sie beleidigend sein. Statt dessen
müssen Sie Bedingungen für den weiteren Fortschritt vorschlagen &ndash; 
geben Sie den Leuten eine Route, einen Weg welcher zu den Ergebnissen
führt, die Sie haben wollen, jedoch ohne dass Sie sich anhören, als
würden Sie das Verhalten diktieren. Der Unterschied liegt größtenteils
im Ton. Folgendes ist zum Beispiel schlecht:</para>

  <blockquote>
     <!--
     <para><emphasis>This discussion is going nowhere.  Can we please
     drop this topic until someone has a patch to implement one of
     these proposals?  There's no reason to keep going around and
     around saying the same things.  Code speaks louder than
     words, folks.</emphasis></para>
     -->
     <para><emphasis>Diese Diskussion führt nirgendwo hin. Können wir
	bitte dieses Thema so lange fallen lassen, bis jemand einen
	Patch hat, um einen der Vorschläge zu implementieren? Es hat
	keinen Sinn immer wieder die gleichen Sachen zu sagen. Code
	spricht lauter als Worte, Leute.</emphasis></para>
  </blockquote>

<!--
<para>Whereas this is good:</para>
-->
<para>Wohingegen folgendes gut ist:</para>

  <blockquote>
     <!--
     <para><emphasis>Several proposals have been floated in this
     thread, but none have had all the details fleshed out, at least
     not enough for an up-or-down vote.  Yet we're also not saying
     anything new now; we're just reiterating what has been said
     before.  So the best thing at this point would probably be for
     further posts to contain either a complete specification for the
     proposed behavior, or a patch.  Then at least we'd have a
     definite action to take (i.e., get consensus on the
     specification, or apply and test the patch).</emphasis></para>
     -->
     <para><emphasis>Verschiedene Vorschläge wurden in diesem Thread
	gemacht, bei keinem wurden aber die Details ausgearbeitet,
	zumindest nicht so weit um darüber abzustimmen. Trotzdem sagen
	wir derzeit nichts neues; wir wiederholen einfach nur was 
	vorher schon gesagt wurde. Derzeit wäre es also wahrscheinlich
	das beste, wenn die folgenden Nachrichten entweder 
	ausgearbeitete Vorschläge beinhalten, oder einen Patch. Dann
	hätten wir wenigstens etwas festes worauf wir reagieren könnten
	(d.H. Konsens über den Vorschlag erreichen oder den Patch
	anwenden und Testen).</emphasis></para>
  </blockquote>

<!--
<para>Contrast the second approach with the first.  The second way
does not draw a line between you and the others, or accuse them of
taking the discussion into a spiral.  It talks about "we", which is
important whether or not you actually participated in the thread
before now, because it reminds everyone that even those who have been
silent thus far still have a stake in the thread's outcome.  It
describes why the thread is going nowhere, but does so without
pejoratives or judgements&mdash;it just dispassionately states
some facts.  Most importantly, it offers a positive course of action,
so that instead of people feeling like discussion is being closed off
(a restriction against which they can only be tempted to rebel), they
will feel as if they're being offered a way to take the conversation
to a more constructive level.  This is a standard people will
naturally want to meet.</para>
-->
<para>Vergleichen Sie die zweite Herangehensweise mit der ersten. Die
Zweite zieht keinen Strich zwischen Ihnen und die anderen, noch
beschuldigt es die Teilnehmer die Diskussion zu verzetteln. 
Es ist die Rede von
"wir", was wichtig ist, ob Sie vorher tatsächlich an dem Thread
beteiligt waren oder nicht, da es alle daran erinnert, dass selbst
diejenigen die bisher ruhig geblieben sind, trotzdem noch einen
Anteil an seinem Ausgang haben. Die Nachricht beschreibt warum der Thread
nirgendwo hinführt, macht es aber ohne Abwertungen oder Verurteilungen
 &ndash; es hält lediglich leidenschaftslos einige Tatsachen fest. Am
wichtigsten ist, dass es eine positive Vorgehensweise anbietet, anstatt dass 
man das Gefühl bekommt, als würde die Diskussion abgebrochen werden
(eine Maßnahme die dazu verleiteten dürfte zu rebellieren),
man wird es als eine Möglichkeit ansehen, wird die Unterhaltung
auf eine konstruktivere Ebene zu führen. Dies ist ein Normwert den 
man natürlich erfüllen will.</para>

<!--
<para>You won't always want a thread to make it to the next level of
constructiveness&mdash;sometimes you'll want it to just go away.  The
purpose of your post, then, is to make it do one or the other.  If you
can tell from the way the thread has gone so far that no one is
actually <emphasis>going</emphasis> to take the steps you suggested,
then your post effectively shuts down the thread without seeming to do
so.  Of course, there isn't any foolproof way to shut down a thread,
and even if there were, you wouldn't want to use it.  But asking
participants to either make visible progress or stop posting is
perfectly defensible, if done diplomatically.  Be wary of quashing
threads prematurely, however.  Some amount of speculative chatter can
be productive, depending on the topic, and asking for it to be
resolved too quickly will stifle the creative process, as well as make
you look impatient.</para>
-->
<para>Sie werden nicht immer wollen, dass ein Thread es auf die nächste
höhere konstruktive Ebene schafft &ndash; manchmal werden Sie einfach nur
wollen das er verschwindet. Der Sinn von Ihrer Nachricht ist dann, das
eine oder das andere herbeizuführen. Wenn Sie schon an der Art wie der
Thread bisher verlaufen ist, erkennen können, dass keiner die von Ihnen
vorgeschlagenen Maßnahmen wirklich <emphasis>machen</emphasis> wird,
haben Sie den Thread effektiv beendet ohne dass es danach aussieht. Es
gibt natürlich keinen narrensicheren Weg einen Thread zu beenden, und
selbst wenn es den gäbe, würden Sie ihn nicht einsetzen wollen. Die
Beteiligten aber darum zu bitten, entweder sichtbaren Fortschritt zu
machen, oder aufzuhören Nachrichten zu schicken, ist wenn Sie es
diplomatisch anstellen, ohne weiteres vertretbar. Hüten Sie sich jedoch
davor Threads voreilig zu schließen. Eine gewisse Menge an spekulativem
Gerede kann, je nach Thema, produktiv sein, und darum zu bitten, dass
man es zu schnell klärt, wird den kreativen Ablauf ersticken, und Sie
zusätzlich als ungeduldig erscheinen lassen.</para>

<!--
<para>Don't expect any thread to stop on a dime.  There will probably
still be a few posts after yours, either because mails got crossed in
the pipe, or because people want to have the last word.  This is
nothing to worry about, and you don't need to post again.  Just let
the thread peter out, or not peter out, as the case may be.  You can't
have complete control; on the other hand, you can expect to have a
statistically significant effect across many threads.</para>
-->
<para>Erwarten Sie von keinem Thread, dass er sofort aufhört. Es wird
wahrscheinlich immer noch ein paar Nachrichten nach Ihrer geben, 
entweder weil Sie gleichzeitig mit jemand anderem gepostet haben, 
oder weil Leute
immer das letzte Wort haben wollen. Das ist nichts, worüber Sie sich
Sorgen machen müssten und Sie müssen nicht erneut ein Schreiben
schicken. Lassen Sie den Thread einfach auslaufen, oder nicht auslaufen
wie immer der Fall auch sein mag. Sie können nicht die absolute 
Kontrolle haben; andererseits, können Sie über viele Threads gesehen, 
eine statistisch signifikante Wirkung zu haben.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="bikeshed">
<!--
<title>The Softer the Topic, the Longer the Debate</title>
-->
<title>Je weicher das Thema, desto länger die Debatte</title>

<!--
<para>Although discussion can meander in any topic, the probability of
meandering goes up as the technical difficulty of the topic goes down.
After all, the greater the technical difficulty, the fewer
participants can really follow what's going on.  Those who can are
likely to be the most experienced developers, who have already taken
part in such discussions thousands of times before, and know what sort
of behavior is likely to lead to a consensus everyone can live
with.</para>
-->
<para>Obwohl Diskussionen bei jedem Thema mäandrieren können, geht die
Wahrscheinlichkeit dafür hoch sobald die technische Schwierigkeit runter
geht. Schließlich ist die Anzahl der Teilnehmer die dem Thema folgen können
um so kleiner, je schwieriger das Thema ist. Diejenigen die dann folgen können,
sind wahrscheinlich die erfahrensten Entwickler, die bereits tausende
Male vorher an solchen Diskussionen teilgenommen haben, und wissen,
welches Verhalten wahrscheinlich zu einem Konsens führt, mit dem alle
leben können.</para>

<!--
<para>Thus, consensus is hardest to achieve in technical questions
that are simple to understand and easy to have an opinion about, and
in "soft" topics such as organization, publicity, funding, etc.
People can participate in those arguments forever, because there are
no qualifications necessary for doing so, no clear ways to decide (even
afterward) if a decision was right or wrong, and because simply
outwaiting other discussants is sometimes a successful tactic.</para>
-->
<para>Konsens ist deshalb am schwersten zu erreichen bei technischen
Fragen, die einfach zu verstehen sind und bei denen man leicht eine
Meinung haben kann, sowie bei "weichen" Themen, wie Organisation,
Öffentlichkeitsarbeit, Finanzierung, usw. Menschen können sich ewig
über solche Themen unterhalten, da es keine nötige Qualifikation 
dafür gibt, keine klaren Möglichkeiten um zu entscheiden (selbst im
Nachhinein) ob eine Entscheidung richtig war oder falsch, und weil
es manchmal eine erfolgreiche Taktik ist einfach länger zu warten
als andere Diskussionsteilnehmer.</para>

<!--
<para>The principle that the amount of discussion is inversely
proportional to the complexity of the topic has been around for a long
time, and is known informally as the <firstterm>Bikeshed
Effect</firstterm>.  Here is Poul-Henning Kamp's explanation of it,
from a now-famous post made to BSD developers:</para>
-->
<para>Das Prinzip, dass die Menge an Diskussion umgekehrt proportional
dazu ist, wie komplex das Thema ist, hat es schon lange gegeben, und
ist allgemein unter dem Begriff <firstterm>Bikeshed Effect</firstterm>
(de. Fahrradschuppen-Effekt) bekannt. Hier ist die Erklärung von 
Poul-Henning Kamp davon, aus einer nunmehr berühmten E-Mail an 
BSD-Entwickler:</para>

<blockquote>

<!-- all review of the translation of this quoted text should 
be done in appc and ported back when finished -->

<!--
<para>It's a long story, or rather it's an old story, but it is quite
short actually.  C. Northcote Parkinson wrote a book in the early
1960'ies, called "Parkinson's Law", which contains a lot of insight
into the dynamics of management.</para>
-->
<para>Es ist eine lange Geschichte, bzw. eher eine alte Geschichte,
aber sie ist auf jeden Fall ziemlich kurz. C. Northcote Parkinson 
schrieb Anfang der 1960'er ein Buch namens "Parkinsons Gesetz", 
welches eine Menge Einblicke in die Dynamik von Management beinhaltet.
</para>

<!--
<para>[...]</para>
-->
<para>[...]</para>

<!--
<para>In the specific example involving the bike shed, the other vital
component is an atomic power-plant, I guess that illustrates the age
of the book.</para>
-->
<para>Bei dem spezifischen Beispiel welches mit einem Fahrradschuppen
zu tun hat, ist die andere entscheidende Komponente ein Atomkraftwerk,
was schätze ich die Zeit in der das Buch geschrieben wurde 
widerspiegelt.</para>

<!--
<para>Parkinson shows how you can go in to the board of directors and
get approval for building a multi-million or even billion dollar
atomic power plant, but if you want to build a bike shed you will be
tangled up in endless discussions.</para>
-->
<para>Parkinson zeigt, wie Sie zu einem Vorstand gehen können und
Zustimmung für den Bau einer multi-millionen oder gar Milliarden
Euro teuren Atomkraftwerk bekommen können, wenn Sie aber einen
Fahrradschuppen bauen wollen, werden Sie sich in endlosen Diskussionen
verzetteln.</para>

<!--
<para>Parkinson explains that this is because an atomic plant is so
vast, so expensive and so complicated that people cannot grasp it, and
rather than try, they fall back on the assumption that somebody else
checked all the details before it got this far.  Richard P.  Feynmann
gives a couple of interesting, and very much to the point, examples
relating to Los Alamos in his books.</para>
-->
<para>Parkinson erklärt, dass das daran liegt, dass ein Atomkraftwerk
so gewaltig, so kostspielig und so kompliziert ist, das Menschen es
nicht begreifen können, und eher als es zu versuchen, fallen Sie auf
die Annahme zurück, dass jemand anderes bereits alle Details
überprüft hat vor es so weit gekommen ist. Richard P. Feynmann gibt
in seinen Büchern ein paar interessante und treffende Beispiele die
mit Los Alamos zu tun haben.</para>

<!--
<para>A bike shed on the other hand.  Anyone can build one of those
over a weekend, and still have time to watch the game on TV.  So no
matter how well prepared, no matter how reasonable you are with your
proposal, somebody will seize the chance to show that he is doing his
job, that he is paying attention, that he
is <emphasis>here</emphasis>.</para>
-->
<para>Einen Fahrradschuppen andererseits kann jeder übers Wochenende 
bauen und trotzdem noch genügend Zeit übrig haben um das Spiel im
Fernsehen zu schauen. Egal wie gut Sie sich vorbereiten, egal wie
vernünftig Sie bei Ihrem Vorschlag also sind, irgend jemand wird die
Chance ergreifen, um Ihnen zu zeigen, dass er seine Arbeit macht, dass
er aufpasst, dass er <emphasis>da</emphasis> ist.</para>

<!--
<para>In Denmark we call it "setting your fingerprint".  It is about
personal pride and prestige, it is about being able to point somewhere
and say "There!  <emphasis>I</emphasis> did that."  It is a strong
trait in politicians, but present in most people given the chance.
Just think about footsteps in wet cement.</para>
-->
<para>In Dänemark nennen wir das "seinen Fingerabdruck hinterlassen".
Es geht um den persönlichen Stolz und Ansehen, es geht darum irgendwo
drauf zeigen zu können und zu sagen "Da! Das habe <emphasis>ich
</emphasis> gemacht". Es ist ein starker Wesenszug bei Politikern,
aber auch in den meisten Menschen vorhanden, wenn sie dazu die
Gelegenheit bekommen. Denken Sie einfach an Fußabdrücke im nassen
Zement.</para>

</blockquote>

<!--
<para>(His complete post is very much worth reading, too.  See <xref
linkend="bikeshed-full"/>; see also
<ulink url="http://bikeshed.com/" >bikeshed.com</ulink>.)</para>
-->
<para>(Seine komplette Nachricht ist auch sehr lesenswert. Siehe <xref
linkend="bikeshed-full"/>; siehe auch 
<ulink url="http://bikeshed.com"/>.)</para>

<!--
<para>Anyone who's ever taken regular part in group decision-making
will recognize what Kamp is talking about.  However, it is usually
impossible to persuade <emphasis>everyone</emphasis> to avoid painting
bikesheds.  The best you can do is point out that the phenomenon
exists, when you see it happening, and persuade the senior
developers&mdash;the people whose posts carry the most weight&mdash;to
drop their paintbrushes early, so at least they're not contributing to
the noise.  Bikeshed painting parties will never go away entirely, but
you can make them shorter and less frequent by spreading an awareness
of the phenomenon in the project's culture.</para>
-->
<para>Jeder der jemals an der Entscheidungsfindung in einer Gruppe
beteiligt war, wird erkennen worüber Kamp redet. Es ist jedoch für
gewöhnlich unmöglich <emphasis>alle</emphasis> zu überreden es zu
vermeiden Fahrradschuppen anzumalen. Das beste was Sie machen können,
ist darauf hinzuweisen, dass das Problem existiert sobald es auftaucht,
und Ihre Senior-Entwickler &ndash; die Personen deren 
Nachrichten am meisten Gewicht tragen &ndash; dazu überreden, frühzeitig
Ihre Pinsel nieder zu legen, damit zumindest sie nicht zum Rauschen
beitragen. Fahrradschuppen-Anmal-Partys werden nie komplett verschwinden, 
aber Sie können sie verkürzen und weniger häufig machen, indem Sie das
Bewusstsein für sie in der Projektkultur verinnerlichen.
</para>

</sect2>

<!-- ======================== SECTION ============================== -->
<sect2 id="holy-wars">
<!--
<title>Avoid Holy Wars</title>
-->
<title>Vermeiden Sie Heilige Kriege</title>

<!--
<para>A <firstterm>holy war</firstterm> is a dispute, often but not
always over a relatively minor issue, which is not resolvable on the
merits of the arguments, but where people feel passionate enough to
continue arguing anyway in the hope that their side will prevail.
Holy wars are not quite the same as bikeshed paintings.  People
painting bikesheds are usually quick to jump in with an opinion
(because they can), but they won't necessarily feel strongly about it,
and indeed will sometimes express other, incompatible opinions, to
show that they understand all sides of the issue.  In a holy war, on
the other hand, understanding the other sides is a sign of weakness.
In a holy war, everyone knows there is One Right Answer; they just
don't agree on what it is.</para>
-->
<para>Ein <firstterm>heiliger Krieg</firstterm> ist eine Debatte, die
oft, aber nicht immer über eine relativ unbedeutende Angelegenheit
geführt wird, welche nicht anhand der Vorzüge verschiedener Argumente
zu klären ist, bei dem aber Leute leidenschaftlich genug sind um
trotzdem weiter darüber zu argumentieren, in der Hoffnung das ihre
Seite sich durchsetzen wird. Heilige Kriege sind nicht ganz das selbe
wie das Anmalen von Fahrradschuppen. Leute die Fahrradschuppen anmalen
sprechen für gewöhnlich schnell Ihre Meinung (weil sie es können), 
fühlen sich aber nicht sonderlich stark an diese Meinung gebunden,
und werden manchmal sogar andere, nicht kompatible Meinungen äußern,
um zu zeigen, dass Sie alle Seiten der Angelegenheit verstehen. Bei
einem heiligen Krieg hingegen wird Verständnis für andere Seiten
als Schwäche aufgefasst. Bei einem heiligen Krieg weiß jeder, dass
es eine richtige Antwort gibt; sie sind sich nur nicht darüber einig
welche es ist.</para>

<!--
<para>Once a holy war has started, it generally cannot be resolved to
everyone's satisfaction.  It does no good to point out, in the midst
of a holy war, that a holy war is going on.  Everyone knows that
already.  Unfortunately, a common feature of holy wars is disagreement
on the very question of <emphasis>whether</emphasis> the dispute is
resolvable by continued discussion.  Viewed from outside, it is clear
that neither side is changing the other's mind.  Viewed from inside,
the other side is being obtuse and not thinking clearly, but they
might come around if browbeaten enough.  Now, I am
<emphasis>not</emphasis> saying there's never a right side in a holy
war.  Sometimes there is&mdash;in the holy wars I've participated
in, it's always been my side, of course.  But it doesn't matter,
because there's no algorithm for convincingly demonstrating that one
side or the other is right.</para>
-->
<para>Wenn ein heiliger Krieg erst einmal angefangen hat, kann es im
allgemeinen nicht zur Zufriedenheit von allen aufgelöst werden. Es
nützt nichts während einem heiligen Krieg darauf hinzuweisen, dass
man sich in einem heiligen Krieg befindet. Jeder weiß das schon. Ein
leider häufiges Merkmal von heiligen Kriegen sind 
Meinungsverschiedenheiten über die Frage <emphasis>ob</emphasis> die
Debatte sich überhaupt durch weitere Diskussion auflösen lässt. Von
außen betrachtet, ist es klar, dass keine Seite die Meinung der anderen
ändert. Von innen betrachtet, benimmt sich die andere Seite 
stumpfsinnig und denkt nicht ganz klar, sie kommt aber vielleicht zur
Besinnung, wenn man sie nur genügend einschüchtert. Ich sage jetzt
<emphasis>nicht</emphasis>, dass es nie eine richtige Seite bei einem
heiligen Krieg gibt. Manchmal gibt es eine &ndash; und natürlich ist es
bei denen an den ich bisher teilgenommen habe immer meine gewesen. Das
macht aber keinen Unterschied, weil es keinen Algorithmus gibt, um
überzeugend zu demonstrieren, dass die eine oder andere Seite richtig
ist.</para>

<!--
<para>A common, but unsatisfactory, way people try to resolve holy
wars is to say "We've already spent far more time and energy
discussing this than it's worth!  Can we please just drop it?"  There
are two problems with this.  First, that time and energy has already
been spent and can never be recovered&mdash;the only question now is,
how much <emphasis>more</emphasis> effort remains?  If some people
feel that just a little more discussion will bring the issue to a
close, then it still makes sense (from their point of view) to
continue.</para>
-->
<para>Eine verbreitete, aber nicht zufriedenstellende Art, wie Leute
versuchen heilige Kriege zu lösen, ist zu sagen "Wir haben bereits viel
mehr Zeit und Energie bei der Diskussion hiervon verbraucht, als es
wert ist! Können wir es bitte einfach fallen lassen"? Es gibt dabei
zwei Probleme. Erstens wurde diese Zeit und Energie bereits aufgebracht,
und sie kann nie wieder zurückgewonnen werden &ndash; die einzige Frage
die jetzt noch übrig bleibt ist, wieviel <emphasis>mehr</emphasis> man
investieren muss? Wenn einige Personen der Meinung sind, dass nur ein 
wenig mehr Diskussion das Thema zum Abschluss bringen wird, dann macht
es immer noch Sinn (aus ihrer Sicht) weiter zu machen.</para>

<!--
<para>The other problem with asking for the matter to be dropped is
that this is often equivalent to allowing one side, the status quo, to
declare victory by inaction.  And in some cases, the status quo is
known to be unacceptable anyway: everyone agrees that some decision
must be made, some action taken.  Dropping the subject would be worse
for everyone than simply giving up the argument would be for anyone.
But since that dilemma applies to all equally, it's still possible to
end up arguing forever about what to do.</para>
-->
<para>Bei der Bitte das Thema fallen zu lassen ist das andere Problem,
dass der Status Quo es einer Seite erlauben würde, den Sieg durch 
Untätigkeit zu erklären. Und in manchen Fällen ist der Status Quo 
sowieso nicht akzeptabel: Alle sind sich darüber einig, 
dass irgendeine Entscheidung
getroffen, irgendeine Maßnahme ergriffen werden muss. Das Thema
fallen zu lassen, wäre schlimmer für alle als
den Streit aufzugeben. Da das Dilemma aber für alle gleichermaßen gilt,
ist es immer noch möglich ewig darüber zu streiten, was getan werden 
soll.</para>

<!--
<para>So how should you handle holy wars?</para>
-->
<para>Wie sollten Sie als heilige Kriege handhaben?</para>

<!--
<para>The first answer is, try to set things up so they don't happen.
This is not as hopeless as it sounds:</para>
-->
<para>Die erste Antwort ist, die Dinge so einzurichten, dass sie gar
nicht erst passieren. Das ist nicht so hoffnungslos wie es sich anhört:
</para>

<!--
<para>You can anticipate certain standard holy wars: they tend to come
up over programming languages, licenses (see
<xref linkend="license-compatibility"/><phrase output="printed">
in <xref linkend="legal"/></phrase>), reply-to munging (see
<xref linkend="reply-to"/><phrase output="printed"> in
<xref linkend="technical-infrastructure"/></phrase>), and a few
other topics.  Each project 
usually has a holy war or two all its own, as well, which longtime
developers will quickly become familiar with.  The techniques for
stopping holy wars, or at least limiting their damage, are pretty much
the same everywhere.  Even if you are positive your side is right, try
to find <emphasis>some</emphasis> way to express sympathy and
understanding for the points the other side is making.  Often the
problem in a holy war is that because each side has built its walls
as high as possible, and made it clear that any other opinion is sheer
foolishness, the act of surrendering or changing one's mind becomes
psychologically unbearable: it would be an admission not just of being
wrong, but of having been <emphasis>certain</emphasis> and still being
wrong.  The way you can make this admission palatable for the other
side is to express some uncertainty yourself&mdash;precisely by
showing that you understand the arguments they are making and find
them at least sensible, if not finally persuasive.  Make a gesture
that provides space for a reciprocal gesture, and usually the
situation will improve.  You are no more or less likely to get the
technical result you wanted, but at least you can avoid unnecessary
collateral damage to the project's morale.</para>
-->
<para>Sie können einige immer wiederkehrende heilige Kriege 
vorausahnen: Sie tendieren zu Themen wie Programmiersprachen, Lizenzen
(siehe <xref linkend="license-compatibility"/><phrase 
output="printed"> im Kapitel <xref linkend="legal"/></phrase>), Änderung
des reply-to Feldes (siehe <xref linkend="reply-to"/><phrase 
output="printed"> im Kapitel <xref 
linkend="technical-infrastructure"/></phrase>) sowie ein paar andere
Themen. Jedes Projekt hat auch ein oder zwei ganz eigene
heilige Kriege, womit langjährige Entwickler schnell vertraut werden.
Die Techniken um heilige Kriege aufzuhalten, oder zumindest ihren 
Schaden zu begrenzen, sind überall ziemlich die gleichen. Selbst wenn
Sie sich sicher sind, dass Ihre Seite recht hat, versuchen Sie 
<emphasis>irgendeine</emphasis> Möglichkeit zu finden um Mitgefühl
und Verständnis für die Argumente die die anderen Seite macht
auszudrücken. Oftmals ist das Problem bei einem heiligen Krieg, dass
jede Seite ihre Mauern so hoch wie möglich gebaut hat, und klar
gemacht hat, dass jede andere Meinung schlichtweg albern ist, wird 
Kapitulation oder die Änderung seiner Meinung psychologisch
unerträglich: Es wäre nicht nur ein Geständnis, dass man falsch lag,
sondern sich <emphasis>sicher</emphasis> gewesen zu sein und trotzdem
falsch. Sie können dieses Geständnis für die andere Seite schmackhaft
machen, ist indem Sie selber Ungewissheit zeigen &ndash; gerade
indem Sie zeigen, dass Sie die Argumente die sie machen verstehen und
sie zumindest vernünftig finden, wenn auch nicht ganz überzeugend.
Zeigen Sie eine Geste, welche Raum lässt, für eine gegenseitige
Geste lässt, und die Situation wird sich gewöhnlich verbessern. Es ist
weder wahrscheinlicher oder unwahrscheinlicher, dass Sie das Ergebnis, 
das Sie ursprünglich wollten erreichen, zumindest können Sie dadurch 
aber unnötigen Kollateralschaden an der Moral des Projekts vermeiden.</para>

<!--
<para>When a holy war can't be avoided, decide early how much you
care, and then be willing to publicly give up.  When you do so, you
can say that you're backing out because the holy war isn't worth it,
but don't express any bitterness and <emphasis>don't</emphasis> take
the opportunity for a last parting shot at the opposing side's
arguments.  Giving up is effective only when done gracefully.</para>
-->
<para>Wenn ein heiliger Krieg nicht vermieden werden kann, entscheiden
Sie sich frühzeitig wie sehr sie die Sache kümmert, und seien Sie
bereit öffentlich aufzugeben. Wenn Sie das tun, können Sie sagen, dass
Sie aussteigen, weil ein heiliger Krieg es nicht wert ist, drücken Sie
dabei aber keine Bitterkeit aus und nutzen Sie die Gelegenheit
<emphasis>nicht</emphasis> als eine letzte Gelegenheit um gegen die
Argumente der Gegenseite zu argumentieren. Aufzugeben ist nur effektiv 
wenn es taktvoll gemacht wird.</para>

<!--
<para>Programming language holy wars are a bit of a special case,
because they are often highly technical, yet many people feel
qualified to take part in them, and the stakes are very high, since
the result may determine what language a good portion of the project's
code is written in.  The best solution is to choose the language
early, with buy-in from influential initial developers, and then
defend it on the grounds that it's what you are all comfortable
writing in, <emphasis>not</emphasis> on the grounds that it's better
than some other language that could have been used instead.  Never let
the conversation degenerate into an academic comparison of programming
languages (this seems to happen especially often when someone brings
up Perl, for some reason); that's a death topic that you must simply
refuse to be drawn into.</para>
-->
<para>Heilige Kriege über Programmiersprachen sind ein Spezialfall, da
dazu neigen sehr technisch zu sein, dennoch fühlen sich viele Leute 
qualifiziert an Ihnen teil zu nehmen, und der Einsatz ist sehr hoch,
da das Resultat bestimmen kann, in welcher Sprache ein Großteil des
Codes vom Projekt geschrieben wird. Die beste Lösung ist es, die 
Sprache frühzeitig zu wählen, mit Unterstützung durch einflussreiche
Entwickler, und es dann auf der Grundlage zu verteidigen, dass sie
sich alle wohl fühlen in dieser Sprache zu schreiben, 
<emphasis>nicht</emphasis> auf der Grundlage, dass es besser ist als
irgend eine andere Sprache, die man sich statt dessen hätte aussuchen
können. Lassen Sie die Unterhaltung nie zu einem akademischen Vergleich
verschiedener Programmiersprachen verfallen (das scheint, aus irgendeinem
Grund, besonders of zu passieren, wenn jemand Perl aufbringt); das ist
einfach ein Thema des Todes in welches Sie sich weigern müssen 
hineingezogen zu werden.</para>

<!--
<para>For more historical background on holy wars, see <ulink
url="http://catb.org/~esr/jargon/html/H/holy-wars.html"
>catb.org/~esr/jargon/html/H/holy-wars.html</ulink>, and the
paper by Danny Cohen that popularized the term, <ulink
url="http://www.ietf.org/rfc/ien/ien137.txt"
>ietf.org/rfc/ien/ien137.txt</ulink>.</para>
-->
<para>Für ein eher historischen Hintergrund über heilige Kriege, siehe
<ulink url="http://catb.org/~esr/jargon/html/H/holy-wars.html"/>, und
die Veröffentlichung von Danny Cohen welches den Begriff populär <ulink
url="http://www.ietf.org/rfc/ien/ien137.txt"/>.</para>

</sect2>

<!-- ======================== subsection ============================== -->

<sect2 id="noisy-minority">
<!--
<title>The "Noisy Minority" Effect</title>
-->
<title>Der "Laute Minderheit"-Effekt</title>

<!--
<para>In any mailing list discussion, it's easy for a small minority
to give the impression that there is a great deal of dissent, by
flooding the list with numerous lengthy emails.  It's a bit like a
filibuster, except that the illusion of widespread dissent is even
more powerful, because it's divided across an arbitrary number of
discrete posts and most people won't bother to keep track of who said
what, when.  They'll just have an instinctive impression that the topic
is very controversial, and wait for the fuss to die down.</para>
-->
<para>Bei jedem Mailverteiler ist es leicht, für eine kleine 
Minderheit den Eindruck zu erwecken, dass eine Menge Dissens gibt,
indem Sie den Verteiler mit einer Menge langer E-Mails überfluten.
Es ist ein eine art Obstruktionspolitik, mit dem Unterschied, dass
der Eindruck von ausgedehntem Dissens noch stärker ist, da es auf eine
beliebige Anzahl einzelner Nachrichten aufgeteilt ist und die meisten
Leute werden sich nicht die Mühe machen mitzuverfolgen wer was wann
gesagt hat. Sie werden nur den instinktiven Eindruck haben, dass das
Thema sehr kontrovers ist, und warten, bis die Aufregung sich gelegt
hat.</para>

<!--
<para>The best way to counteract this effect is to point it out very
clearly and provide supporting evidence showing how small the actual
number of dissenters is, compared to those in agreement.  In order to
increase the disparity, you may want to privately poll people who have
been mostly silent, but who you suspect would agree with the majority.
Don't say anything that suggests the dissenters were deliberately
trying to inflate the impression they were making.  Chances are they
weren't, and even if they were, there would be no strategic advantage
to pointing it out.  All you need do is show the actual numbers in a
side-by-side comparison, and people will realize that their intuition
of the situation does not match reality.</para>
-->
<para>Sehr klar zu Belegen, wie klein die tatsächliche Anzahl der 
Dissidenten ist im Vergleich zu denen die zustimmen ist die beste Art 
gegen diesen Effekt anzukommen. Um die Ungleichheit zu vergrößern,
sollten Sie im privaten Leute ansprechen die größtenteils ruhig
geblieben sind, von denen Sie aber vermuten, dass Sie der Mehrheit 
zustimmen. Sagen Sie nichts, was darauf hindeutet, dass die Dissidenten
absichtlich versucht haben den Eindruck den sie hinterlassen zu
verstärken. Wahrscheinlich war das nicht der Fall, und selbst wenn,
gäbe es keinen strategischen Vorteil darauf hinzuweisen. Alles was Sie
tun müssen, ist eine Gegenüberstellung der echten Zahlen, und Leute
werden erkennen, dass ihr intuitiver Eindruck der Situation nicht der
Wirklichkeit entspricht.</para>

<!--
<para>This advice doesn't just apply to issues with clear
for-and-against positions.  It applies to any discussion where a fuss
is being made, but it's not clear that most people consider the issue
under discussion to be a real problem.  After a while, if you agree that
the issue is not worthy of action, and can see that it has failed to
get much traction (even if it has generated a lot of mails), you can
just observe publicly that it's not getting traction.  If the "Noisy
Minority" effect has been at work, your post will seem like a breath of
fresh air.  Most people's impression of the discussion up to that
point will have been somewhat murky: "Huh, it sure feels like there's
some big deal here, because there sure are a lot of posts, but I can't
see any clear progress happening."  By explaining how the form of the
discussion made it appear more turbulent than it really was, you
retrospectively give it a new shape, through which people can recast
their understanding of what transpired.</para>
-->
<para>Dieser Ratschlag gilt nicht nur für Angelegenheiten mit klaren
Positionen für oder gegen etwas. Sondern für jede Diskussion bei der
viel Lärm gemacht wird, aber nicht klar ist, ob die meisten die
Angelegenheit als ein echtes Problem ansehen. Nach
einer gewissen Zeit, wenn Sie darüber einstimmen, dass die Meldung
keiner Reaktion wert ist, und sehen können, dass sie es nicht geschafft
hat an Zug zu gewinnen (selbst wenn es eine Menge E-Mails hervorgebracht
hat), können Sie einfach öffentlich feststellen, dass es keinen Zug
gewinnt. Wenn der "Laute Minderheit"-Effekt aufgetreten war, wird Ihre
Nachricht wie eine Atemzug frischer Luft wirken. Der Eindruck den die
meisten Leute bisher von der Diskussion hatten, wird etwas düster
gewesen sein: "Hmm, es scheint eine große Sache zu sein, weil es
wirklich eine Menge Nachrichten gibt, aber ich sehe keinen echten
Fortschritt". Indem Sie erklären, wie die Art der Diskussion es hat
scheinen lassen, als wäre es stürmischer als in Wirklichkeit, werden
Sie es im Nachhinein eine neue Gestalt geben, wodurch Leute ihr
Verständnis von dem was passiert ist neu gestalten können.</para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="difficult-people">
<!--
<title>Difficult People</title>
-->
<title>Schwierige Leute</title>

<!--
<para>Difficult people are no easier to deal with in electronic forums
than they are in person.  By "difficult" I don't mean "rude".  Rude
people are annoying, but they're not necessarily difficult.  This book
has already discussed how to handle them: comment on the rudeness the
first time, and from then on, either ignore them or treat them the same
as anyone else.  If they continue being rude, they will usually make
themselves so unpopular as to have no influence on others in the
project, so they are a self-containing problem.</para>
-->
<para>Schwierige Leute sind im Umgang in elektronischen Foren nicht 
einfacher als im echten Leben. Mit "schwierig" meine ich nicht "unhöflich".
Unhöfliche Leute nerven, aber sie sind nicht unbedingt schwierig. 
Dieses Buch hat bereits behandelt, wie man mit denen umgeht: Machen Sie
eine Bemerkung beim ersten mal, und ab dann, sollten Sie sie entweder 
ignorieren oder sie wie alle anderen behandeln. Wenn sie weiterhin
unhöflich sind, werden sie sich meistens derart unbeliebt machen, dass
sie keinen Einfluss auf andere im Projekt haben, also sind sie ein in 
sich abgeschlossenes Problem.</para>

<!--
<para>The really difficult cases are people who are not overtly rude,
but who manipulate or abuse the project's processes in a way that ends
up costing other people time and energy, yet do not bring any benefit
to the project<footnote><para>For an extended discussion of one
particular subspecies of difficult person, see Amy Hoy's hilariously
on-target <citetitle><ulink
url="http://slash7.com/2006/12/22/vampires/">Help Vampires: A
Spotter's Guide</ulink></citetitle>.  Quoting Hoy: "It's so regular you
could set your watch by it. The decay of a community is just as
predictable as the decay of certain stable nuclear isotopes. As soon
as an open source project, language, or what-have-you achieves a
certain notoriety&nbsp;&mdash;&nbsp;its half-life, if you
will&nbsp;&mdash;&nbsp;<emphasis>they</emphasis> swarm in, seemingly
draining the very life out of the community itself.
<emphasis>They</emphasis> are the Help Vampires. And I'm here to stop
them..."</para></footnote>.</para>
-->
<para>Die wirklich schwierigen Fälle sind Leute die nicht sonderlich
unhöflich sind, die aber die Arbeitsabläufe im Projekt derart
manipulieren oder missbrauchen, dass es die Zeit und Energie anderer
auffrisst, dem Projekt jedoch keinen Nutzen bringt. 
<footnote><para>Für eine ausführliche Diskussion einer Subspezies
dieser Personen, siehe:<citetitle><ulink
url="http://slash7.com/2006/12/22/vampires/">Help Vampires: A
Spotter's Guide</ulink></citetitle>.  Um Hoy zu zitieren: "Es ist so
normal, dass man seine Uhr danach stellen mann. Der Zerfall einer
Community ist genauso vorhersagbar wie der Zerfall von nuklearen
Isotopen. Sobald ein Open Source Projekt, Sprache usw. seine Halb-
wertszeit erreicht, kommen sie und nehmen das Leben aus der Community.
<emphasis>Sie</emphasis> sind die Vampire der Hilfe. Und ich bin hier um
sie zu stoppen…"</para></footnote>.</para>

<!--
<para>Often, such people look for wedgepoints in the project's
procedures, to give themselves more influence than they might
otherwise have.  This is much more insidious than mere rudeness,
because neither the behavior nor the damage it causes is apparent to
casual observers.  A classic example is the filibuster, in which
someone (always sounding as reasonable as possible, of course) keeps
claiming that the matter under discussion is not ready for resolution,
and offers more and more possible solutions, or new viewpoints on old
solutions, when what is really going on is that he senses that a
consensus or a ballot is about to form and he doesn't like where it's
headed.  Another example is when there's a debate that won't converge
on consensus, but the group tries to at least clarify the points of
disagreement and produce a summary for everyone to refer to from then
on.  The obstructionist, who knows the summary may lead to a result he
doesn't like, will often try to delay even the summary, by
relentlessly complicating the question of what should be in it, either
by objecting to reasonable suggestions or by introducing unexpected
new items.</para>
-->
<para>
Solche Menschen suchen oft nach Lücken in den Abläufen des Projekts, 
um sich selber
mehr Einfluss zu verschaffen als es sonst der Fall wäre. Das ist viel
heimtückischer als schlichte Unhöflichkeit, weil weder das Verhalten
noch der Schaden für einen beiläufigen Beobachter offensichtlich ist.
Ein klassisches Beispiel ist die Verschleppungstaktik bei der
jemand (der sich natürlich immer so vernünftig wie möglich anhört)
immer wieder behauptet, dass die Angelegenheit die zur Debatte steht,
nicht für eine Klärung bereit ist und weitere mögliche Lösungen
anbietet, oder neue Sichten auf alte Lösungen, wenn in wirklich
derjenige merkt, dass ein Konsens oder eine Wahl sich langsam anbahnt,
und ihm gefällt die Richtung nicht in der sie wahrscheinlich geht. Ein
weiteres Beispiel ist, wenn eine Debatte die sich keinem Konsens
annähert, die Gruppe aber versucht wenigstens die Eckpunkte der
Meinungsverschiedenheit klar zu stellen und eine Zusammenfassung für
alle zu produzieren, auf der sich alle von da an beziehen können. Der
Quertreiber, der weiß, dass die Zusammenfassung zu einem Ergebnis 
führen könnte, welches ihm nicht gefällt, wird oft versuchen selbst
die Zusammenfassung hinauszuzögern, indem er schonungslos die Fragen
verkompliziert, was darin beinhaltet sein soll, entweder indem er
Einspruch erhebt oder indem er unerwartete neue Punkte vorstellt.</para>

<sect2 id="handling-difficult-people">
<!--
<title>Handling Difficult People</title>
-->
<title>Handhabung schwieriger Leute</title>

<!--
<para>To counteract such behavior, it helps to understand the
mentality of those who engage in it.  People generally do not do it
consciously.  No one wakes up in the morning and says to himself:
"Today I'm going to cynically manipulate procedural forms in order to
be an irritating obstructionist."  Instead, such actions are often
preceded by a semi-paranoid feeling of being shut out of group
interactions and decisions.  The person feels he is not being taken
seriously, or (in the more severe cases) that there is almost a
conspiracy against him&mdash;that the other project members have decided to
form an exclusive club, of which he is not a member.  This then
justifies, in his mind, taking rules literally and engaging in a
formal manipulation of the project's procedures, in order
to <emphasis>make</emphasis> everyone else take him seriously.  In
extreme cases, the person can even believe that he is fighting a
lonely battle to save the project from itself.</para>
-->
<para>Um solchem Verhalten entgegenzuwirken hilft es, die Mentalität
derjenigen zu verstehen, die es ergreifen. Menschen machen es im
Allgemeinen nicht bewusst. Keiner wacht morgens auf und sagt sich:
"Heute werde ich Verwaltungsverfahren zynisch manipulieren, um ein
irritierender Quertreiber zu sein". Statt dessen geht solches
Verhalten oftmals ein halb paranoides Gefühl voraus, von den
Interaktion und den Entscheidungen in der Gruppe ausgeschlossen zu
werden. Die Person fühlt sich nicht ernst genommen, oder (in
schwerwiegenderen Fällen), dass es fast schon eine Verschwörung gegen
ihn ist &ndash; dass die anderen Mitglieder des Projekts sich entschieden
haben, einen exklusiven Club zu bilden, in dem er kein Mitglied ist.
Das rechtfertigt dann, in seinen Augen, die Regeln wörtlich zu nehmen
und anzufangen die Abläufe des Projekts formal zu manipulieren, um alle
anderen zu <emphasis>zwingen</emphasis> Ihn ernst zu nehmen. Im 
Extremfall, kann die Person sogar glauben, dass er einen einsamen Kampf
ausficht, um das Projekt vor sich selbst zu retten.</para>

<!--
<para>It is the nature of such an attack from within that not everyone
will notice it at the same time, and some people may not see it at all
unless presented with very strong evidence.  This means that
neutralizing it can be quite a bit of work.  It's not enough to
persuade yourself that it's happening; you have to marshal enough
evidence to persuade others too, and then you have to distribute that
evidence in a thoughtful way.</para>
-->
<para>Es liegt in der Natur solch eines Angriffs von innen, dass nicht
jeder es zur gleichen Zeit bemerken wird, und manche werden es 
überhaupt nicht sehen, bis man ihnen aussagekräftige Beweise vorlegt.
Das bedeutet, dass es eine Menge Arbeit sein kann es zu neutralisieren.
Es reicht nicht sich selbst zu überzeugen, dass es passiert; Sie müssen
genügend Beweise sammeln, um andere auch zu überzeugen, und dann müssen
Sie diese Beweise wohl überlegt verbreiten.</para>

<!--
<para>Given that it's so much work to fight, it's often better just to
tolerate it for a while.  Think of it like a parasitic but mild
disease: if it's not too debilitating, the project can afford to
remain infected, and medicine might have harmful side effects.
However, if it gets too damaging to tolerate, then it's time for
action.  Start gathering notes on the patterns you see.  Make sure to
include references to public archives&mdash;this is one of the reasons
the project keeps records, so you might as well use them.  Once you've
got a good case built, start having private conversations with other
project participants.  Don't tell them what you've observed; instead,
first ask them what they've observed.  This may be your last chance to
get unfiltered feedback about how others see the troublemaker's
behavior; once you start openly talking about it, opinion will
become polarized and no one will be able to remember what he
formerly thought about the matter.</para>
-->
<para>Wenn man bedenkt wie viel Arbeit es ist dagegen anzukämpfen, ist
es oft besser, es einfach eine Weile lang zu tolerieren. Betrachten
Sie es als eine parasitäre aber leichte Krankheit: Wenn es nicht zu
sehr das Projekt behindert, kann das Projekt es sich leisten infiziert
zu bleiben, und Medizin könnte schädliche Nebenwirkungen haben. Wenn es
jedoch zu schädlich wird um es zu tolerieren, dann ist es Zeit etwas
dagegen zu machen. Fangen Sie an Notizen und Muster zu sammeln, die Sie
erkennen. Stellen Sie sicher Verweise auf die öffentlichen Archive mit
einzubeziehen &ndash; das ist eines der Gründe warum das Projekt alles
protokolliert, also können Sie sie genau so gut auch nutzen. Sobald Sie
einen guten Fall aufgebaut haben, fangen Sie an private Unterhaltungen
mit den anderen Beteiligten am Projekt zu führen. Sagen Sie ihnen nicht
was Sie beobachtet haben; statt dessen, fragen Sie zuerst, was sie
beobachtet haben. Das kann Ihre letzte Gelegenheit sein, ungetrübte
Rückmeldung zu erhalten, wie andere das Verhalten des Störenfrieds
sehen; wenn Sie erst einmal angefangen haben öffentlich darüber zu
reden, werden die Meinungen polarisiert werden und keiner wird sich
daran erinnern können wie er vorher darüber gedacht hat.</para>

<!--
<para>If private discussions indicate that at least some others see
the problem too, then it's time to do something.  That's when you
have to get <emphasis>really</emphasis> cautious, because it's very
easy for this sort of person to try to make it appear as though you're
picking on them unfairly.  Whatever you do, never accuse them of
maliciously abusing the project's procedures, of being paranoid, or, in
general, of any of the other things that you suspect are probably
true.  Your strategy should be to look both more reasonable and more
concerned with the overall welfare of the project, with the goal of
either reforming the person's behavior, or getting them to go away
permanently.  Depending on the other developers, and your relationship
with them, it may be advantageous to gather allies privately first.
Or it may not; that might just create ill will behind the scenes, if
people think you're engaging in an improper whispering
campaign.</para>
-->
<para>Wenn private Diskussionen darauf hindeuteten, dass zumindest ein
paar andere das Problem sehen, dann ist es Zeit etwas zu unternehmen.
Ab dann müssen Sie <emphasis>wirklich</emphasis> vorsichtig sein, denn
es ist sehr leicht für diese Person es danach aussehen zu lassen als
würden Sie unfairerweise auf ihr herum hacken. Was immer Sie auch tun,
beschuldigen Sie sie nicht, die Abläufe im Projekt arglistig 
missbraucht zu haben, paranoid zu sein oder im Allgemeinen, alles was
Sie vermuten, dass es wahrscheinlich wahr ist. Ihre Strategie sollte es
sein, sowohl vernünftiger und eher besorgt um das Wohl des Projekts zu
sein, mit dem Ziel entweder das Verhalten der Person zu reformieren,
oder Sie dazu zu bringen permanent zu verschwinden. Abhängig davon, ob
andere Entwickler, und Ihr Verhältnis mit ihnen, kann es vorteilhaft
sein, zuerst im privaten Verbündete zu sammeln. Oder auch nicht; dass
kann auch nur Feindseligkeit hinter den Vorhängen erzeugen, wenn Leute
denken, dass Sie eine nicht angemessene flüster-Kampagne ergreifen.</para>

<!--
<para>Remember that although the other person may be the one behaving
destructively, <emphasis>you</emphasis> will be the one who appears
destructive if you make a public charge that you can't back up.  Be
sure to have plenty of examples to demonstrate what you're saying, and
say it as gently as possible while still being direct.  You may not
persuade the person in question, but that's okay as long as you
persuade everyone else.</para>
-->
<para>Denken Sie daran, dass obwohl die andere Person vielleicht 
derjenige ist, die sich zerstörerisch verhält, werden <emphasis>Sie
</emphasis> diejenige sein, die zerstörerisch erscheint, wenn Sie eine
öffentliche Beschuldigung machen, welche Sie nicht untermauern können,
und es so sanft wie möglich sagen, aber trotzdem noch direkt sind. Sie
werden die betreffende Person vielleicht nicht überzeugen können, aber
das ist in Ordnung, so lange Sie alle anderen Überzeugen können.</para>

</sect2>

<sect2 id="difficult-people-case-study">
<!--
<title>Case study</title>
-->
<title>Fallbeispiel</title>

<!--
<para>I remember only one situation, in more than 10 years of working
in free software, where things got so bad that we actually had to ask
someone to stop posting altogether.  As is so often the case, he was
not rude, and sincerely wanted only to be helpful.  He just didn't
know when to post and when not to post.  Our lists were open to the
public, and he was posting so often, and asking questions on so many
different topics, that it was getting to be a noise problem for the
community.  We'd already tried asking him nicely to do a little more
research for answers before posting, but that had no effect.</para>
-->
<para>Ich erinnere mich nur an eine Situation, in mehr als 10 Jahren
Arbeit an freier Software, wo die Sachen derart schlimm wurden, dass
wir tatsächlich jemanden darum bitten mussten, komplett seine Nachrichten
einzustellen. Wie es so oft der Fall ist, war er nicht unhöflich, und
wollte aufrichtig hilfreich sein. Er wusste nur nicht wann er schreiben
sollte und wann er es lieber lassen sollte. Unsere Mailinglisten waren für
die Öffentlichkeit frei zugänglich, und er schrieb so oft Nachrichten,
und stellte bei so vielen verschiedenen Themen Fragen, dass es für die
Gemeinschaft zu einem Problem im Geräuschpegel führte. Wir hatten
bereits versucht, ihn nett darum zu bitten etwas mehr vor seinen
Nachrichten nach Antworten zu recherchieren, aber es zeigte keine
Wirkung.</para>

<!--
<para>The strategy that finally worked is a perfect example of how to
build a strong case on neutral, quantitative data.  One of our
developers did some digging in the archives, and then sent the
following message privately to a few developers.  The offender (the
third name on the list below, shown here as "J. Random") had very
little history with the project, and had contributed no code or
documentation.  Yet he was the third most active poster on the mailing
lists:</para>
-->
<para>Die Strategie die letztendlich funktionierte, ist ein perfektes
Beispiel, wie man einen starken Fall aufbaut, basierend auf neutralen
und messbaren Daten. Einer unserer Entwickler schürfte etwas in den
Archiven herum, und schickte dann im privaten folgende Nachricht an ein
paar Entwickler. Der Übeltäter (der dritte Name in der nachfolgenden
Liste, hier als "H. Mustermann" aufgeführt) hatte eine sehr kurze
Geschichte mit dem Projekt und hatte weder Code noch Dokumentation
beigetragen. Trotzdem war er die drittaktivste Person auf den
Mailinglisten:</para>

<screen>
Von: "Brian W. Fitzpatrick" &lt;fitz@collab.net&gt;
An: [... Liste der Empfänger wegen Datenschutz ausgespart...]
Betreff: Der Energieabfall in Subversion 
Datum: Mit, 12 Nov 2003 23:37:47 -0600

In den letzten 25 Tagen, waren die folgenden 6 Personen auf den svn
[dev|users] Verteilern am aktivsten:

    294  kfogel@collab.net
    236  "C. Michael Pilato" &lt;cmpilato@collab.net&gt;
    220  "H. Mustermann" &lt;hmustermann@problemposter.com&gt; <!-- de: Wie "Problembär", mit Dank an Herrn Stoiber -->
    176  Branko &Ccaron;ibej &lt;brane@xbc.nu&gt;
    130  Philip Martin &lt;philip@codematters.co.uk&gt;
    126  Ben Collins-Sussman &lt;sussman@collab.net&gt;

Ich würde sagen, dass fünf dieser Personen etwas zu Subversion 
beitragen, welches bald Version 1.0 erreichen wird.

Ich würde auch sagen, dass einer dieser Personen beständig Zeit und 
Energie von den anderen 5 wegnimmt, gar nicht erst von dem Verteiler
insgesamt zu sprechen, und dadurch (wenn auch unbeabsichtigt) die
Entwicklung von Subversion ausbremst. Ich hab keine Analyse der
Threads gemacht, aber ein vgrep meiner Subversion-Mails sagt mit, dass
auf jede E-Mail von dieser Person, mindestens ein mal von mindestens zwei
der anderen fünf Entwickler geantwortet wurde.

Ich denke das irgendein radikaler Eingriff hier nötig ist, selbst wenn
wir die angesprochene Person verschrecken. Nettigkeiten und 
Freundlichkeit haben bereits keine Wirkung gezeigt.

dev@subversion ist ein Mailverteiler um die Entwicklung eines
Versionsverwaltungsystems zu unterstützen, keine Gruppentherapie.

-Fitz, im Versuch durch drei Tage an SVN-Mails durchzuarbeiten, welche
 er angehäuft hat
</screen>

<!--
<para>Though it might not seem so at first, J. Random's behavior was a
classic case of abusing project procedures.  He wasn't doing something
obvious like trying to filibuster a vote, but he was taking advantage
of the mailing list's policy of relying on self-moderation by its
members.  We left it to each individual's judgement when to post and
on what topics.  Thus, we had no procedural recourse for dealing with
someone who either did not have, or would not exercise, such judgement.
There was no rule one could point to and say the fellow was violating
it, yet everyone knew that his frequent posting was getting to be a
serious problem.</para>
-->
<para>Obwohl es zuerst nicht so aussehen mag, war das Verhalten von
H. Mustermann ein klassisches Beispiel für den Missbrauch von Abläufen
im Projekt. Er hat nichts offensichtliches gemacht, wie eine Abstimmung
hinauszuzögern, sondern machte sich die Richtlinie des Verteilers
zunutze, dass Mitglieder selber die Moderatoren sind. Wir überließen
es dem Urteilsvermögen von jedem einzelnen, wann man zu welchen Themen
etwas schreibt. Wir hatten deshalb nichts worauf wir zurückgreifen
konnten, bei jemand der ein solches Urteilsvermögen entweder nicht
hatte, oder nicht benutzte. Es gab keine Regel auf die wir hätten
verweisen konnten und sagen konnten, dass dieser Kerl es gebrochen
hat, jeder wusste jedoch, dass seine häufigen Nachrichten zu einem
echten Problem wurden.</para>

<!--
<para>Fitz's strategy was, in retrospect, masterful.  He gathered
damning quantitative evidence, but then distributed it discreetly,
sending it first to a few people whose support would be key in any
drastic action.  They agreed that some sort of action was necessary,
and in the end we called J. Random on the phone, described the problem
to him directly, and asked him to simply stop posting.  He never
really did understand the reasons why; if he had been capable
of understanding, he probably would have exercised appropriate
judgement in the first place.  But he agreed to stop posting, and the
mailing lists became useable again.  Part of the reason this strategy
worked was, perhaps, the implicit threat that we could start
restricting his posts via the moderation software normally used for
preventing spam (see
<xref linkend="spam-prevention"/><phrase output="printed"> in
<xref linkend="technical-infrastructure"/></phrase>).  But the
reason we were able to have that option in reserve was that Fitz had
gathered the necessary support from key people first.</para>
-->
<para>Die Strategie von Fitz war, im Nachhinein, meisterhaft. Er 
sammelte eindeutige und messbare Beweise, verteilte sie dann aber
diskret, indem er sie zuerst an ein paar Leute sandte, deren
Unterstützung bei jeder drastischen Maßnahme entscheidend wäre. Sie
stimmten überein, dass irgend eine Maßnahme nötig war, und schließlich
riefen wir J. Random telefonisch an, beschrieben ihm direkt das Problem,
und baten ihn darum, seine Nachrichten einfach einzustellen. Er hat
niemals wirklich verstanden warum; wenn er dazu in der Lage gewesen
wäre, dann hätte er wahrscheinlich schon am Anfang ein angemessenes
Urteilsvermögen aufgebracht. Er willigte aber ein, seine Nachrichten
einzustellen, und die Mailinglisten wurden wieder brauchbar. Dass
diese Strategie funktionierte, lag wohl zum Teil auch an der impliziten
Drohung, dass wir seine Nachrichten auch durch die Moderations-Software
hätten eingrenzen können, die normalerweise dazu benutzt
wird, Spam zu verhindern (siehe <xref 
linkend="spam-prevention"/><phrase output="printed"> im Kapitel <xref
linkend="technical-infrastructure"/></phrase>). Der Grund warum wir
diese Option als Rücklage hatten, war das Fitz die nötige Unterstützung
zuerst von entscheidenden Personen gesammelt hatte.</para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="growth">
<!--
<title>Handling Growth</title>
-->
<title>Handhabung von Wachstum</title>

<!--
<para>The price of success is heavy in the open source world.  As your
software gets more popular, the number of people who show up looking
for information increases dramatically, while the number of people
able to provide information increases much more slowly.  Furthermore,
even if the ratio were evenly balanced, there is still a fundamental
scalability problem with the way most open source projects handle
communications.  Consider mailing lists, for example.  Most projects
have a mailing list for general user questions&mdash;sometimes the
list's name is "users", "discuss", "help", or something else.
Whatever its name, the purpose of the list is always the same: to
provide a place where people can get their questions answered, while
others watch and (presumably) absorb knowledge from observing these
exchanges.</para>
-->
<para>Der Preis vom Erfolg ist bei groß in der Open-Source-Welt. 
Während Ihre Software beliebter wird, nimmt die Anzahl der Menschen zu,
die auftauchen um nach Informationen zu suchen, dramatisch zu,
während die Anzahl der Menschen die in der Lage sind Informationen
bereitzustellen sehr viel langsamer zunimmt. Desweiteren, gäbe es
selbst wenn das Verhältnis ausgeglichen wäre immer noch das Problem,
mit der Art wie die meisten Open-Source-Projekte Kommunikation 
handhaben. Betrachten Sie zum Beispiel Mailverteiler. Die meisten
Projekte haben Mailverteiler für allgemeine Fragen von Nutzern &ndash; 
manchmal heißt der Verteiler "users", "discuss", "help" oder irgend
etwas anderes. Unabhängig von Namen, ist der Sinn des Verteilers immer
der gleiche: Einen Ort zur Verfügung zu stellen, wo Leute auf ihre
Fragen Antworten bekommen können, während andere zuschauen und
(vermutlich) aus der Beobachtung dieses Austauschs Wissen aufsaugen. 
</para>

<!--
<para>These mailing lists work very well up to a few thousand users
and/or a couple of hundred posts a day.  But somewhere after that, the
system starts to break down, because every subscriber sees every post;
if the number of posts to the list begins to exceed what any
individual reader can process in a day, the list becomes a burden to
its members.  Imagine, for instance, if Microsoft had such a mailing
list for Windows XP.  Windows XP has hundreds of millions of users; if
even one-tenth of one percent of them had questions in a given
twenty-four hour period, then this hypothetical list would get
hundreds of thousands of posts per day!  Such a list could never
exist, of course, because no one would stay subscribed to it.
This problem is not limited to mailing lists; the same logic applies
to IRC channels, online discussion forums, indeed to any system in
which a group hears questions from individuals.  The implications are
ominous: the usual open source model of massively parallelized support
simply does not scale to the levels needed for world
domination.</para>
-->
<para>Diese Mailverteiler funktionieren sehr gut, bis zu ein paar
Tausend Nutzern, und/oder ein paar hundert Nachrichten am Tag. Irgendwo
danach fängt das System jedoch an zusammenzubrechen, weil jeder der
angemeldet ist jede Nachricht sieht; wenn die Anzahl der Nachrichten
an einem Verteiler über das hinaus geht, was eine einzige Person am Tag
verarbeiten kann, wird der Verteiler zu einer Last für seine 
Mitglieder. Stellen Sie sich zum Beispiel vor, wenn Microsoft einen
solchen Verteiler für Windows XP hätte. Windows XP hat Hunderte von
Millionen von Nutzern; wenn auch nur ein Promille von denen in einer
vierundzwanzigstündigen Zeitspanne Fragen hätte, dann bekäme dieser
Verteiler theoretisch Hunderte von Tausende von Nachrichten am Tag!
Solch einen Verteiler könnte es natürlich niemals geben, denn keiner
bliebe bei ihm angemeldet. Dieses Problem beschränkt sich nicht auf
Mailverteiler; die gleiche Logik lässt sich anwenden, auf IRC, 
Online-Diskussionsforen, sogar jedes System in dem eine Gruppe die
Fragen von Einzelnen hört. Die Implikationen sind bedenklich: Das
gewöhnliche Open-Source-Modell von massiv paralleler technischer
Unterstützung skaliert schlicht und einfach nicht auf der Ebene, die
für Weltherrschaft nötig ist.</para>

<!--
<para>There will be no explosion when forums reach the breaking point.
There is just a quiet negative feedback effect: people unsubscribe
from the lists, or leave the IRC channel, or at any rate stop
bothering to ask questions, because they can see they won't be heard
in all the noise.  As more and more people make this highly rational
choice, the forum's activity will seem to stay at a manageable level.
But it is staying manageable precisely because the rational (or at
least experienced) people have started looking elsewhere for
information&mdash;while the inexperienced people stay behind and
continue posting.  In other words, one side effect of continuing to
use unscalable communications models as the project grows is that the
average quality of both questions and answers tends to go down, which
makes it look like new users are dumber than they used to be, when in
fact they're probably not.  It's just that the benefit/cost ratio of
using those high-population forums goes down, so naturally those with
the experience to do so start to look elsewhere for answers first.
Adjusting communications mechanisms to cope with project growth
therefore involves two related strategies:</para>
-->
<para>Es wird keine Explosion geben, wenn die Foren anfangen
überzulaufen. Es wird nur einen leisen Folge negativer Rückmeldungen
geben: Leute melden sich von den Verteilern ab, oder verlassen das
IRC, oder hören zumindest auf sich die Mühe zu machen Fragen zu stellen,
da sie sehen können, dass man Sie in dem ganzen Lärm nicht gehört
werden. Sowie immer mehr Leute diese im hohen Maße vernünftige Wahl
treffen, wird die Aktivität auf dem Forum aussehen als wäre es auf
einer annehmbaren Stufe. Es es bleibt genau deshalb annehmbar, weil
die Vernünftigen (oder zumindest erfahrenen) Leute anfangen an
anderen Orten nach Informationen zu suchen &ndash; während die
unerfahrenen zurück bleiben und weiterhin Nachrichten schreiben. Mit
anderen Worten, während das Projekt wächst, ist eine weitere Nebenwirkung 
von nicht-skalierbaren Kommunikationsmodellen, dass
die durchschnittliche Qualität sowohl der Fragen, als auch der Antworten
dazu neigt schlechter zu werden, was es danach aussehen lässt, als
wären die neuen Nutzer blöder als es ehemals der Fall war, obwohl das
wahrscheinlich nicht der Fall ist. Es ist nur, dass das
Kosten/Nutzen-Verhältnis dieser Foren mit einer hohen Bevölkerung
weniger wird, also fangen diejenigen mit mehr Erfahrung natürlich
zuerst an woanders nach Antworten zu suchen. Die 
Kommunikationsmechanismen anzupassen, um mit dem Wachstum des Projekts
umzugehen, beinhaltet deshalb zwei verwandte Strategien:</para>

<orderedlist>
  <!--
  <listitem><para>Recognizing when particular parts of a forum are
            <emphasis>not</emphasis> suffering unbounded growth, even
            if the forum as a whole is, and separating those parts
            off into new, more specialized forums (i.e., don't let
            the good be dragged down by the bad).</para>
  </listitem>
  -->
  <listitem><para>Zu erkennen, wann bestimmte Teile eines Forums 
	<emphasis>nicht</emphasis> unter unbegrenztem Wachstum
	leiden, selbst wenn das für das Forum insgesamt der Fall ist,
	und diese Teile in neue, speziellere Foren zu Trennen (d.H.
	lassen Sie das Gute nicht vom Schlechten herunterziehen).</para>
  </listitem>
  <!--
  <listitem><para>Making sure there are many automated sources
            of information available, and that they are kept
            organized, up-to-date, and easy to find.</para>
  </listitem>
  -->
  <listitem><para>Stellen Sie sicher, dass viele automatisierte
	Informationsquellen zur Verfügung stehen, und dass Sie
	organisiert, aktuell, und leicht auffindbar gehalten werden.
        </para>
  </listitem>
</orderedlist>

<!--
<para>Strategy (1) is usually not too hard.  Most projects start out
with one main forum: a general discussion mailing list, on which
feature ideas, design questions, and coding problems can all be hashed
out.  Everyone involved with the project is on the list.  After a
while, it usually becomes clear that the list has evolved into several
distinct topic-based sublists.  For example, some threads are clearly
about development and design; others are user questions of the "How do
I do X?" variety; maybe there's a third topic family centered around
processing bug reports and enhancement requests; and so on.  A given
individual, of course, might participate in many different thread
types, but the important thing is that there is not a lot of overlap
between the types themselves.  They could be divided into separate
lists without causing any harmful balkanization, because the threads
rarely cross topic boundaries.</para>
-->
<para>Strategie (1) ist gewöhnlich nicht all zu schwer. Die meisten
Projekte fangen mit einem Hauptforum an: Ein Mailverteiler für
allgemeine Diskussionen, auf dem Ideen für neue Funktionen, Fragen zum
Aufbau der Software, und programmier-Probleme zerlegt werden 
können. Jeder der an dem Projekt beteiligt ist, ist auf dem Verteiler.
Nach einer Weile, wird es für gewöhnlich offensichtlich, dass der
Verteiler sich in mehrere unterschiedliche Unterverteiler, auf 
bestimmten Themen basierend, aufgeteilt hat. Zum Beispiel geht es in
manchen Threads eindeutig um Entwicklung und Aufbau des Codes; andere
sind eher Benutzerfragen, von der Art "Wie mache ich X?"; es gibt
vielleicht eine dritte Familie die sich um die Verarbeitung von
Bug-Meldungen und Erweiterungs-Wünsche dreht; und so weiter. Eine
beliebige Person mag sich natürlich an vielen verschiedenen 
Thread-Arten beteiligen, das Wichtige ist aber, dass nicht viel Überlappung
zwischen den verschiedenen Arten gibt. Sie könnten in separate
Verteiler aufgeteilt werden ohne irgend eine schädliche Balkanisierung
zu verursachen, da die Threads selten mehrere Themen überspannen.
</para>

<!--
<para>Actually doing this division is a two-step process.  You create
the new list (or IRC channel, or whatever it is to be), and then you
spend whatever time is necessary gently nagging and reminding people
to <emphasis>use</emphasis> the new forums appropriately.  That latter
step can last for weeks, but eventually people will get the idea.  You
simply have to make a point of always telling the sender when a post
is sent to the wrong destination, and do so visibly, so that other
people are encouraged to help out with routing.  It's also useful to
have a web page providing a guide to all the lists available; your
responses can simply reference that web page and, as a bonus, the
recipient may learn something about looking for guidelines before
posting.</para>
-->
<para>Diese Aufteilung wirklich zu machen, ist ein Vorgang mit zwei
Schritten. Sie werden einen neuen Verteiler (oder einen IRC-Kanal, oder
was immer es auch sein soll), und dann müssen Sie welche Zeit auch 
immer nötig ist, um Leute zu nerven und erinnern die neuen Foren
entsprechend zu <emphasis>nutzen</emphasis>. Letzteres kann Wochen
andauern, letztendlich werden es die Leute aber kapieren. Sie müssen
es sich nur zum Prinzip machen, dem Absender immer zu sagen, wenn er
an das falsche Ziel geschickt hat, und es auf eine sichtbare Art tun,
damit andere dazu ermutigt werden, beim umleiten mitzuhelfen. Es ist
auch nützlich, eine Webseite mit einem Wegweiser zu allen Verteilern
bereit zu haben; Ihre Rückmeldungen können einfach auf diese Seite
verweisen und als Bonus, mag der Empfänger etwas darüber lernen, nach
Richtlinien zu suchen, vor er eine Nachricht schreibt.</para>

<!--
<para>Strategy (2) is an ongoing process, lasting the lifetime of the
project and involving many participants.  Of course it is partly a
matter of having up-to-date documentation (see
<xref linkend="documentation"/><phrase output="printed"> in
<xref linkend="getting-started"/></phrase>) and making sure to
point people there.  But it is also much more than that; the sections
that follow discuss this strategy in detail.</para>
-->
<para>Strategie (2) ist ein anhaltender Vorgang, welcher die ganze
Lebensdauer des Projekts überdauern kann und mit vielen Beteiligten
zu tun haben kann. Natürlich handelt es sich dabei zum Teil auch um
die Frage eine aktuelle Dokumentation zu haben (siehe
<xref linkend="documentation"/><phrase output="printed"> im Kapitel
<xref linkend="getting-started"/></phrase>) und weisen Sie Leute darauf
hin. Es ist aber auch viel mehr als das; die Abschnitte die folgen,
behandeln diese Strategie im detail.</para>

<!-- ======================== SECTION ============================== -->
<sect2 id="using-archives">
<title>Auffällige Nutzung der Archive</title>

<!--

-->
<para>Typischerweise, werden alle Kommunikationen in einem 
Open-Source-Projekt 
(außer manchmal IRC-Unterhaltungen) archiviert. Die Archive 
sind öffentlich, können durchsucht werden und referenzen darauf bleiben
Stabil: Dass heißt, sobald ein Stück Information unter einer bestimmten
Adresse aufgezeichnent wird, bleibt es ewig an dieser Adresse.</para>

<!--

-->
<para>Benutzen Sie diese Archive so viel wie möglich, und so auffällig
wie möglich. Selbst wenn Sie die Antwort auf eine Frage aus dem Kopf
wissen, wenn Sie denken, dass es eine Referenz auf die gleiche Frage
in den Archiven gibt, welche die Antwort beinhaltet, nehmen Sie sich
die Zeit es auszugraben und zu präsentieren. Jedes mal wenn Sie das
auf eine öffentlich sichtbare Art tun, lernen manche Leute zum ersten
mal, dass es die Archive gibt, und sie zu durchsuchen, Antworten
hervorbringen kann. Indem Sie auf die Archive referenzieren, bestärken
Sie auch die soziale Norm, Informationen nicht zu duplizieren. Warum die
gleiche Antwort an zwei verschiedenen Stellen haben? Wenn die Anzahl
der Stellen an der es gefunden werden kann, auf ein minimum beschränkt
wird, werden Leute die es vorher gefunden haben sich eher daran 
erinnern wonach sie suchen müssen um es wieder zu finden. Gut 
platzierte Referenzen tragen auch allgemein zu der Qualität der 
Suchergebnisse bei, da Sie den Rang der referenzierten Ressourcen in
Suchmachinen erhöhen.</para>

<!--

-->
<para>Es gibt Zeiten, wann die Verdopplung von Informationen jedoch
Sinn macht. Nehmen wir zum Beispiel an, es gäbe bereits eine 
Rückmeldung in den Archiven, nicht von Ihnen, welche sagt:</para>

<screen>
Es scheint, dass Ihre Scanley-Indexe verfrobbt wurden. Führen Sie diese
Schritte aus, um sie zu entfrobben:

1. Schalten Sie den Scanley-Server aus.
2. Lassen Sie das 'Entfrobb'-Programm, welches mit Scanley 
ausgeliefert wird, aus.
3. Starten Sie den Server.
</screen>

<!--

-->
<para>Monate später, sehen Sie dann eine weitere Nachricht, welche
andeutet, dass die Indexe von jemand verfrobbt wurden. Sie suchen in
den Archiven und finden obige Rückmeldung, sehen aber, dass ein paar
Schritte Fehlen (vielleicht aus versehen, oder weil die Software sich,
seitdem die Nachricht geschrieben wurde, geändert hat). Die eleganteste 
Art das zu handhaben, ist es eine neue vollständigere Nachricht zu 
schreiben, und die alte Information explizit als obsolet zu markieren,
indem Sie es erwähnen:</para>

<screen>
Es scheint, dass Ihre Scanley Indexe verfrobbt wurden. Wir haben
dieses Problem im July gesehen und H. Mustermann schrieb eine
Lösung bei http://blahblahblah/blah. Unten ist eine vollständigere
Beschreibung wie Sie Ihre Indexe entfrobben können, basierend auf
der Anleitung von H. Mustermann aber ein wenig erweitert:

1. Schalten Sie den Scanley-Server aus.
2. Wechseln Sie zum Benutzer, unter dem Scanley normalerweise läuft.
3. Lassen Sie mit diesem Benutzer das 'Entfrobb'-Programm über die
Indexe laufen.
4. Lassen Sie Scanley per Hand laufen, um zu sehen, ob die Indexe jetzt
funktionieren.
5. Starten Sie den Server neu.
</screen>

<!--

-->
<para>(In einer idealen Welt wäre es möglich, eine Anmerkung an die
alte Nachricht anzuhängen, welche sagt, dass eine neuere Version der
Information zur Verfügung steht, und auf die neue Nachicht hinzuweisen.
Mir ist allerdings keine Archivierungssoftware bewusst, welche eine
"obsolet durch" Funktion anbietet, vielleicht wäre es ein wenig
schwierig, auf eine Art zu implementieren, welche die Vorgabe eines
Archivs, eine wortgetreue Aufzeichnung zu sein, nicht verletzen würde.
Das ist ein weiterer Grund, warum es eine gute Idee ist, Webseiten zu
erstellen, die der Beantwortung von häufigen Fragen gewidmet sind.)</para>

<!--

-->
<para>Archive werden wahrscheinlich am häufigsten nach Antworten zu
technischen Fragen durchsucht, ihre Bedeutung für das Projekt geht
jedoch weit darüber hinaus. Wenn die formalen Richtlinien eines
Projekts seine in einer Satzung festgelegten Gesetze sind, sind die
Archive seine allgemeinen Gesetze: Eine Aufzeichnung aller Diskussionen
die geführt wurden, und wie sie erreicht wurden. Bei jeder 
wiederkehrenden Diskussion, ist es heutzutage quasi bindend, mit einer
Suchen in den Archiven anzufangen. Das erlaubt es Ihnen, die Diskussion
mit einer Zusammenfassung des derzeitigen Standes anzufangen, 
Einsprüche vorauszuahnen, Konterargumente vorzubereiten, und 
möglicherweise Sichtweisen zu entdecken, an der Sie noch nicht gedacht
hatten. Die anderen Beteiligten, werden auch <emphasis>erwarten
</emphasis>, dass Sie eine Durchsuchung des Archivs gemacht haben. 
Selbst wenn vorangehende Diskussionen nirgendwo hingeführt haben, 
sollten Sie Verweise darauf einbeziehen, wenn Sie das Thema wieder
aufgreifen, damit Leute sich selber davon überzeugen können a) dass
sie nirgends hingeführt haben, und b) dass Sie Ihre Hausaufgaben
gemacht haben, und desshalb wahrscheinlich etwas sagen, was noch keiner
zuvor gesagt hat.</para>

<sect3 id="all-as-archives">
<title>Behandeln Sie alle Ressourcen wie Archive</title>

<!--

-->
<para>Alle vorhergehenden Ratschläge gelden für mehr als nur die 
Archive von Mailverteilern. Bestimmte Informationsstücke an einer
stabilen, leicht auffindbaren Adresse zu haben, sollte ein 
Organisationsprinzip alle Informationen des Projekts sein. Lass uns
die FAQ des Projekts als Fallstudie betrachten.</para>

<!--

-->
<para>Wie nutzen Leute eine FAQ?</para>

<orderedlist>
  <listitem>
    <para>Sie wollen es nach bestimmten Worten und Begriffen 
	  durchsuchen.</para>
  </listitem>
  <listitem>
    <para>Sie wollen darin stöbern, Informationen aufsaugen, ohne
	  zwangsläufig nach Antworten zu bestimmten Fragen zu suchen.
          </para>
  </listitem>
  <listitem>
    <para>Sie erwarten, dass Suchmachinene wie Googel über den Inhalt
	  der FAQ bescheid wissen, damit Suchergebnisse Einträge der
	  FAQ beinhalten können.</para>
  </listitem>
  <listitem>
    <para>Sie wollen Leute direkt auf bestimmte Einträge in der FAQ
	  verweisen können.</para>
  </listitem>
  <listitem>
    <para>Sie wollen neues Material zu der FAQ hinzufügen können,
	  bedenken Sie aber, dass das sehr viel weniger geschiedt, als
	  die Antworten aufgerufen werden &ndash; in einer FAQ wird sehr
	  viel öfter geschieben als gelesen.</para>
  </listitem>
</orderedlist>

<!--

-->
<para>Punkt 1 impliziert, dass die FAQ in irgend einem textuellen 
Format zur verfügung stehen sollte. Punkte 2 und 3 implizieren, dass
die FAQ als HTML Seite zur verfügung stehen sollte, zusätzlich
impliziert Punkt 2, dass diese HTML Datei auf eine lesbare Art 
aufgebaut sein soll, (d.H. Sie werden etwas Einfluss auf sein 
Aussehen), und sollte ein Inhaltsverzeichnis haben. Punkt 4 bedeutet,
dass jeder einzelne Eintrag in der FAQ einen HTML <firstterm>benannten
Verweis (en. "anchor")</firstterm> zugewiesen haben sollte, ein tag 
welches es Leute erlaubt, eine bestimmte Stelle in der Seite auf eine
bequeme Art zu erreichen (siehe <xref
linkend="version-everything"/><phrase output="printed"> im Kapitel 
<xref linkend="technical-infrastructure"/></phrase>), in einem Format
welches leicht zu bearbeiten ist.</para>

  <sidebar id="html-named-anchors-and-ids">
  <title>Benannte Verweise und ID-Attribute</title>

  <para>Es gibt zwei Möglichkeiten einen Browser dazu zu bringen an
  einer bestimmte Stelle in einer Webseite zu springen: benannte
  Verweise und id Attribute.</para>

  <para>Ein <firstterm>benannter Verweis</firstterm> is lediglich ein
  normaler HTML Verweis (<literal>&lt;a&gt;...&lt;/a&gt;</literal>),
  aber mit ein "name" Attribut:</para>

  <screen>&lt;a&nbsp;name="meinEtikett"&gt;...&lt;/a&gt;</screen>

  <para>Neuere Versionen von HTML unterstützen eine generisches
  <firstterm>id-Attribut</firstterm>, welches an jedem HTML-Element
  angehängt werden kann, nicht nur an <literal>&lt;a&gt;</literal>.
  Zum Beispiel:</para>

  <screen>&lt;p&nbsp;id="meinEtikett"&gt;...&lt;/p&gt;</screen>

  <para>Sowohl benannte Verweise als auch id-Attribute werden auf die
  gleiche Art benutzt. Eines hängt eine Raute und den Bezeichner an 
  eine URL, um den Browser dazu zu bringen direkt zu der Stelle in der
  Seite zu springen:</para>

  <screen>http://meinprojekt.beispiel.de/faq.html#meinEtikett</screen>

  <para>Praktisch alle Browser unterstützen benannte Verweise; die
  meisten modernen Browser unterstützen das id-Attribut. Um sicher zu
  gehen, würde ich Ihnen empfehelen, entweder nur benannte Verweise zu
  benutzen, oder benannte Verweise <emphasis>und</emphasis> 
  id-Attribute zusammen (natürlich mit dem gleichen Bezeichner für beide
  bei einem gegebenen Paar). Benannte Verweise können sich nicht nicht
  selber Abschließen &ndash; selbst wenn es keinen Text in dem Element
  gibt, müssen Sie es trotzdem in der vollständigen form Ausschreiben:
  </para>

  <screen>&lt;a&nbsp;name="meinEtikett"&gt;&lt;/a&gt;</screen>

  <para>...obwohl es normalerweise etwas Text, wie den Titel von dem
  Abschnitt geben würde.</para>

  <para>Ob Sie einen benannten Verweis benutzen oder ein id-Attribut
  oder beides, denken Sie daran, dass der Bezeichner nicht für 
  jemandem sichtbar ist, der zu der Stelle blättert, ohne den
  Bezeichner zu benutzen. Solch eine Person mag aber vielleicht den
  Bezeichner für eine bestimmte Stelle herausfinden wollen, um zum
  Beispiel die URL an einem Freund als Antwort zu schicken. Um ihnen
  dabei zu helfen, fügen Sie einen <firstterm>title-Attribut
  </firstterm> an dasselbe Element bei dem Sie das "name" und/oder
  id-Attribut hizugefügt haben:</para>

  <screen>&lt;a&nbsp;name="meinEtikett"&nbsp;
  title="#meinEtikett"&gt;...&lt;/a&gt;</screen>

  <para>Wenn der Mauszeiger über den Text innerhalb des Elements platziert
  wird, auf den das title-Attribut angewandt wurde, werden
  die meisten Browser einen kleinen Kasten aufklappen, in dem der Titel
  angezeigt wird. Ich füge normalerweise das Raute-Zeichen hinzu, um
  die Leute daran zu erinnern, es am Ende der URL zu platzieren um beim
  nächsten Mal direkt an diese Stelle zu springen.</para>

  </sidebar>

<!--

-->
<para>Die FAQ zu formatieren, ist ledigleich eines der Beispiele, wie
Sie eine Ressource vorzeigbar machen können. Die gleichen Eigenschaften
&ndash; direkte Durchsuchbarkeit, Verfügbarkeit für größere 
Suchmaschinen, stabile Referenzen, und (wo möglich) Bearbeitbarkeit
&ndash; gelten für andere Webseiten, den Quellcode-Baum, den Bugtracker
usw. Es ist zufällig so, dass die meiste Software zur 
Archivierung von Mailinglisten schon lange erkannt haben, wie 
wichtig diese Eigenschaften sind, weshalb Mailverteiler dazu neigen,
diese Funktionen von sich aus eingebaut zu haben, während andere
Formate unter Umständen etwas zusätzliche Mühe seitens des wartenden
(<xref linkend="managing-volunteers"/> behandelt, wie Sie diese Bürde 
der Wartung über viele Entwickler verteilen können).</para>

</sect3>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="codifying-tradition">
<title>Festschreiben von Traditionen</title>

<!--

-->
<para>Während das Projekt Geschichte und Komplexität ansammelt, nimmt
die Menge an Daten zu, die ein neuer Teilnehmer sich aneignen muss.
Solche die schon seit langen bei dem Projekt sind, konnten die 
Konventionen des Projekts im laufe der Zeit lernen und erfinden. Sie
werden sich oft nicht der riesigen Menge an Traditionen die sich
angesammelt hat bewusst sein, und mögen überrascht sein, wie viele
Fehlschritte neue Mitglieder scheinbar machen. Natürlich, liegt das
nicht daran, dass die Neuen von einer schlechteren Qualität sind als
vorher; es ist lediglich, dass Sie einer größeren bürde der kulturellen
Anpassung als in der Vergangenheit gegenüberstehen.</para>

<!--

-->
<para>Die Traditionen, die ein Projekt ansammelt haben genau soviel
damit zu tun, wie man komunizieren und Informationen bewahren, wie es
um die Festhaltung von Standards und andere technische Kleinigkeiten 
geht. Wir haben uns bereits beide Standards im Kapitel
<xref linkend="developer-documentation"/><phrase output="printed"> 
sowie <xref linkend="getting-started"/></phrase> und 
<xref linkend="written-rules"/><phrase output="printed"> im Kapitel
<xref linkend="social-infrastructure"/></phrase> jeweils, und mit
Beispielen angeschaut. In diesem Abschnitt, geht es darum, wie man
solche Richtlinien aktuell hält, während das Projekt sich weiter
entwickelt, insbesondere Richtlinien darüber, wie Kommunikation
gehandhabt wird, denn das sind diejenigen die sich am meisten ändern
wärend das Projekt an Größe und Komplexität zunimmt.</para>

<!--

-->
<para>Erstens, halten Sie ausschau danach, wie Leute verwirrt werden.
Wenn Sie die gleichen Situationen immer wieder auftauchen sehen,
insbesondere bei neue Beteiligten, ist die Wahrscheinlichteit groß,
dass eine Richtlinie dokumentiert werden muss, es aber noch nicht
ist. Zweitens, werden Sie nicht müde die gleichen Sachen immer wieder
zu sagen, und <emphasis>klingen</emphasis> Sie nicht, als würden Sie
langsam davon müde werden. Sie und die anderen Verteranen im Projekt
werden sich oft wiederholen müssen; es ist ein unausweichliche
Nebenwirkung von dem Ankommen von Neuankömmlinge.</para>

<!--

-->
<para>Jede Webseite, jede Nachrich im Mailverteiler, und jeder 
IRC-Kanal sollte als eine Werbefläche betrachtet werden &ndash; nicht für
kommerzielle Werbung, sondern für Werbung über die Ressourcen Ihres 
eigenen Projekts. Was Sie auf dieser Fläche anbringen, hängt ab von der
Demographie von denen die es wahrscheinlich lesen werden. Ein IRC-Kanal
für Benutzerfragen zum Beispiel, wird wahrscheinlich Leute anlocken,
die noch nie zuvor mit dem Projekt zu tun hatten &ndash; oftmals jemand
der eben erst die Software installiert hat, und eine Frage hat, die er
gleich beantwortet haben möchte (schließlich hätte er es statt dessen
an den Mailverteiler schicken können, wenn es hätte warten können,
was wahrscheinlich weniger von seiner Zeit insgesamt in anspruch 
genommen hätte, obwohl es länger gedauert hätte, bis er eine Antwort
erhalten hätte). Leute machen für gewöhnlich keine permanente 
Investition in einem IRC-Kanal; sie tauchen auf, stellen ihre Frage und
gehen wieder.</para>

<!--

-->
<para>Desshalb, sollte das Thema des Kanals auf Leute abgesehen sein,
die technische Fragen <emphasis>genau jetzt</emphasis>über die Software
haben, eher als sagen wir, Leute die sich vielleicht auf längere Sicht
an dem Projekt beteiligen wollen und für die Richtlinien für den Umgang
innerhalb der Gemeinschaft eher angebracht wären. Ein wirklich
betriebsammer Kanal handhabt es folgendermaßen (Vergleichen Sie es, mit
dem früheren Beispiel in <xref linkend="irc"/><phrase output="printed">
im Kapitel <xref linkend="technical-infrastructure"/></phrase>):</para>

<screen>
Sie reden jetzt in #linuxhelp

Das Thema für #linuxhelp ist Bitte LESEN Sie 
http://www.catb.org/~esr/faqs/smart-questions.html &amp;&amp;
http://www.tldp.org/docs.html#howto BEVOR Sie Fragen stellen | Regeln
für den Kanal finden Sie bei http://www.nerdfest.org/lh_rules.html |
Bitte schauen Sie sich http://kerneltrap.org/node/view/799 bevor Sie
Fragen über einen Upgrade nach Kernel 2.6.x stellen | Speicher Abfrage
möglich: http://tinyurl.com/4s6mc -&gt; update nach 2.6.8.1 oder 
2.4.27 | hash algo Katastrophe: http://tinyurl.com/6w8rf
| reiser4 weg
</screen>

<!--

-->
<para>Bei Mailverteilern ist die "Werbefläche" eine kleine Fußnote,
die an jeder Nachricht angehängt wird. Die meisten Projekte schreiben
Anweisungen zur Anmeldung/Abmeldung dort, und vielleicht einen Hinweis
auf die Webseite des Projekts oder auch von der FAQ. Sie denken 
vielleicht, das jeder der an dem Veriteiler angemeldet ist, wissen
würde, wie man diese Informationen findet, und das ist wahrscheinlich
auch der Fall &ndash; aber viel mehr Leute als nur die angemeldeten
sehen diese Nachrichten des Verteilers. Auf eine archivierte Nachricht,
kann von vielen Stellen aus verwiesen werden; tatsächlich werden manche
Nachrichten derart bekannt, dass sie letztendlich mehr Leser erhält,
als der gesamte Verteiler angemeldete Nutzer hat.</para>

<!--

-->
<para>Formatierung kann einen großen Unterschied machen. Im 
Subverison-Projekt zum Beispiel hatten wir eingeschränkten Erfolg
bei der Verwendung der Methode zur Filterung von Bugs, beschrieben in
<xref linkend="bug-filtering"/><phrase output="printed"> im Kapite 
<xref linkend="technical-infrastructure"/></phrase>. Viele falsche 
Bug-Meldungen wurden immer noch von unerfahrenen Personen eingereicht, und
jedes mal, als das geschah, musste der Absender auf genau die gleiche
Art aufgeklärt werden, wie die 500 Personen vor ihm. Eines tages,
nahdem bei einem unserer Entwickler schließlich der Faden gerissen war,
und irgend einen armen Nutzer zugeflamed hatte, der die Richtlinien
für den Bugtracker nicht sorgfältig genug gelesen hatte, entschied
sich ein anderer Entwickler, dass dieses Muster schon viel zu lange
gelaufen war. Er schlug vor, dass wir die erste Seite des Bugtrackers
neu formatieren sollten, so dass der wichtigste Teil, die Vorgabe den
Bug zuerst auf dem Mailverteiler oder im IRC zu diskutieren, vor
man einen Bug meldet, in riesigen, fetten, roten Buchstaben auf einem
gelben Hintergrund, in der Mitte der Seite über alles andere stehen
würde. Das machten wir (Sie können das Ergebnis bei folgender Seite
sehen <ulink url="http://subversion.tigris.org/project_issues.html"/>),
und das Ergebnis, war ein merklicher Abfall in der Anzahl der falschen
Bug-Meldungen. Wir bekommen sie natürlich immer noch 
 &ndash; das wird immer der Fall sein &ndash; aber die Menge ist wesentlich
weniger geworden, selbst wärend die Anahl der Nutzer zunimmt. Die Folge
ist, dass die Bug-Datenbank nicht nur weniger Müll enthält, sondern,
dass diejenigen die auf diese Meldungen reagieren, besser gelaunt
bleiben und eher freundlich bleiben, wenn sie auf einer der
nunmehr seltenen Falschmeldungen reagieren. Das verbessert sowohl das
Erscheinungsbild des Projekts als auch die psychische Verfassung seiner
Freiwilligen.</para>

<!--

-->
<para>Die Lektion die wir hierraus ziehen konnten war, dass es nicht
ausreichte, die Richtlinien einfach nur nieder zu schreiben. Wir 
mussten sie auch dort platzieren wo sie von denjenigen gefunden werden,
die sie am meisten brauchen, und sie so formatieren, dass ihr status
als Einführungsmaterial sofort für Personen klar wird, die noch nicht
mit dem Projekt vertraut sind.</para>

<!--

-->
<para>Statische Webseiten sind nicht die einzige Ort um für die Bräuche
des Projekts zu werben. Eine bestimmte Menge an interaktiver Kontrolle
(im sinne von freundlichen Hinweisen, nicht grober Zurechtweisung) ist
auch notwendig. Jede Überprüfungm auch die Überprüfung von Commits,
beschrieben in <xref linkend="code-review"/><phrase output="printed">
im Kapitel <xref linkend="getting-started"/></phrase>, sollten auch
eine Evaluierung in wiefern es mit den Normen des Projekts
übereinstimmt oder nicht, insbesondere im Bezug auf Konventionen über
die Kommunikation.</para>

<!--

-->
<para>Ein weiteres Beispiel aus dem Subversion-Projekt: Wie einigten
uns auf die Konvention wonach "r12908" für "Revision 12908 des
Projektarchivs der Versionsverwaltung." Das klein geschriebene vorangehende
"r" ist einfach zu schreiben und da es lediglich die halbe höhe der
Zahlen ist, ergibt es einen leicht zu ekennnenden Textblock, wenn man
es mit den Zahlen kombiniert. Sich auf diese Konventien zu einigen,
bedeutet natürlich nicht, dass jeder gleich anfangen wird, sie gleich
zu benutzen. Deshalb, wenn eine Commit-E-Mail mit folgendem Kommentar
eintrifft:</para>

<screen>
------------------------------------------------------------------------
r12908 | qsimon | 02-02-2005 14:15:06 -0600 (Mit, 02 Feb 2005) | 4 Zeilen

Patch vom Freiwilligen H. Mustermann &lt;hmustermann@gmail.com&gt;

* trunk/contrib/client-side/psvn/psvn.el:
  Einige Rechtschreibfehler in revision 12828 behoben.
------------------------------------------------------------------------
</screen>

<!--

-->
<para>...gehört es zur Überprüfung des Commits, zu sagen "Übrigens,
benutze bitte die 'r12828', nicht die 'revision 12828' schreibweise um
auf vergangene Änderungen zu verweisen." Das ist nicht einfach nur
pedantisch; es ist genau so wichtig um es automatisch parsen zu können,
wie für die menschliche Leserschaft.</para>

<!--

-->
<para>Indem Sie das allgemeine Prinzip verfolgen, dass es kanonische
Methoden geben sollte, um auf häufige Entitäten zu verweisen und dass
man diese verweis Methoden überall auf eine konsistente Art verwenden
sollte, exportiert das Projekt in Wirklicheit gewisse Standards. Diese
Standards ermöglichen es andere, Werkzeuge zu schreiben, welche die
Kommunikationen des Projekts auf andere brauchbarere Arten zu
presentieren &ndash; zum Beispiel könnte eine Revision mit dem Format
"r12828" in einen Link zu der Seite des Projektarchivs verwandelt werden.
Das wäre schwieriger, wenn die Revision als "revision 12828" 
geschrieben würde, sowohl weil diese Form durch einen Zeilenumbruch
getrennt werden könnte, und weil es weniger eindeutig ist (das Wort
"revision" wird häufig alleine erscheinen, und gruppen von Zahlen
erscheinen heufig alleine, wohingegen die Kombination "r12828 sich nur
auf eine Revisionsnummer beziehen kann). Ähnliche Bedenken gelten für
die Meldungsnummern im Bugtracker, FAQ Einträge (tipp: Benutzen Sie
eine URL mit einem benannten Verweis, wie in <xref 
linkend="html-named-anchors-and-ids"/> beschrieben), usw.</para>

<!--

-->
<para>Selbst bei Einträgen, wo es keinen offensichtlichen kurze,
kanonische Form gibt, sollten Leute dazu ermutigt werden, wesentliche
Informationen einheitlich anzugeben. Wenn man zum Beispiel auf eine
Nachricht im Mailverteiler verweist, geben Sie nicht nur den
Absender und die Überschrift an; geben Sie auch die URL im Archiv
<emphasis>und</emphasis> den Message-ID-Header an. Letzteres erlaubt
es Leute die ihre eigene Kopie des Mailverteilers haben, (manche
Leute halten offline Kopieen, zum Beispiel auf einem Laptop für die
Nutzung auf Reisen) eindeutig die richige Nachricht zu identifizieren,
selbst wenn sie keinen Zugriff auf die Archive haben. Der Absender und
die Überschrift würden dazu nicht ausreichen, weil dieselbe Person
vielleicht mehrere Nachrichten im selben Thread schreibt, sogar am
selben Tag.</para>

<!--

-->
<para>Je mehr ein Projekt wächst, desto wichtiger wird diese Art von
Konsistenz. Konsistent bedeutet, dass überall wo Leute hinschauen,
sie die gleichen Muster in verwendung sehen, also wissen sie auch sie
selber zu befolgen. Das wiederum, verringert die Anzahl der Fragen die
sie stellen müssen. Die Bürde millionen Leser zu haben ist nicht
größer, als die einen zu haben; Probleme der Skalierbarkeit fangen nur
dann aufzutreten, wann ein gewisser Prozentsatz dieser Leser Fragen
stellen. Wärend ein Projekt wächst, muss es desshalb diesen 
Prozentsatz verringern, indem es die Dichte und Verfügbarkeit von
Informationen erhöht, damit jede beliebige Person eher das findet,
wonach sie sucht, ohne fragen zu müssen.</para>

<!--

<para><remark>See
<ulink
url="http://subversion.tigris.org/mailing-list-guidelines.html"/> for
an example of mailing list guidelines, talk about which problems such
guidelines can solve and which they can't.  Also, log message
guidelines (if that gets its own section, remember to adjust the xrefs
in Version Control Vocabulary and elsewhere in Chapter 3).  Mention
the parseability concern; point out that it can overdone, too.
Formatting of bug tracker numbers in log messages is an excellent
example of where parseability is an appropriate concern.  Log message
templates.  Make sure that commit reviews apply to log messages and
other "meta" aspects of the commit as well as to the code
itself.</remark></para>

-->

</sect2>

<!-- todo: A lot of projects have designated summarizers, like the
Zack Brown (?) for the Linux kernel, and I think I've seen similar
stuff at DebianPlanet as well.  That's another thing to talk about in
this discussion of "Strategy (2)", and maybe something to add to the
Project Roles examples in <xref linkend="share-management"/>.
-->

</sect1>

<sect1 id="bug-tracker-usage">
<title>Keine Unterhaltungen im Bugtracker</title>

<!--

-->
<para>Bei jedem Projekt, welches aktiv seinen Bugtracker benutzt,
gibt es immer die Gefahr, dass dieser Tracker sich selbst in ein 
Diskussionsforum verwandelt, obwohl der Mailverteiler in
Wirklichkeit besser wäre. Für gewöhnlich, fängt es ganz unschuldig an:
Jemand hängt einen Kommentar an eine Meldung, sagen wir mit einem
Lösungsvorschlag, oder einem unvolständigen Patch. Jemand anderes
sieht das und bemerkt, dass es Probleme mit der Lösung gibt, und hängt
einen weiteren Kommentar an um sie zu schildern. Die erste Person
antwortet wiederrum, auch wieder mit einem Kommentar an der Meldung...
und so geht es weiter.</para>

<!--

-->
<para>Das Problem dabei ist erstens, dass der Bugtracker ein ziemlich 
unbequemer Ort ist, um eine Unterhaltung zu führen, und zweitens,
dass andere Leute vielleicht nicht zuschauen &ndash; schließlich erwarten
Sie, dass Diskussionen über die Entwicklung auf dem Entwickler 
Verteiler stattfinden, also ist das der Ort an dem sie suchen. Es mag
sein, dass sie überhaupt nicht bei dem Verteiler für Änderungen im 
Bugtracker angemeldet sind, und wenn sie es sind, kann es sein, dass sie
es nicht sonderlich gründlich verfolgen.</para>

<!--

-->
<para>Aber wo genau bei dem Ablauf ging etwas schief? War es als die
ursprüngliche Person ihre Lösung an die Meldung anhängte &ndash; hätte
sie lieber eine Nachricht an den Verteiler schreiben sollen? Oder war
es als die zweite Person in der Meldung reagierte, anstatt an den
Verteiler?</para>

<!--

-->
<para>Es gibt keine eine richtige Antwort, aber es gibt eine allgemeine
Regel: Wenn Sie lediglich Daten an einer Meldung anhängen, dann machen
Sie es auf dem Tracker, wenn Sie aber eine <emphasis>Unterhaltung
</emphasis> anfangen, dann machen Sie es auf dem Mailverteiler. Es
mag sein, dass Sie nicht immer erkennen können, was der Fall ist, 
nutzen Sie aber einfach Ihre Urteilsvermögen. Wenn Sie zum Beispiel,
einen Patch anhängen, welches eine möglicherweise kontroverse Lösung
beinhaltet, kann es sein, dass Sie vorrausahnen können, das Leute
Fragen darüber haben werden. Obwohl Sie also normalerweise den Patch
an die Meldung anhängen würden (angenommen Sie wollen nicht oder lönnen
nicht direkt einen Commit der Änderung machen), wäre es in diesem Fall
vieleicht eher angemessen statt dessen, eine Nachricht an den 
Mailverteiler zu schicken. In jedem Fall wird es aber einen Punkt geben,
an dem die eine oder andere Partei erkennen kann, dass es gleich von
dem einfachen Anhängen von Informationen zu einer echten Unterhaltung
übergeht &ndash; in dem Beispiel mit dem dieser Abschnitt anfing, wäre
das die zweite Person, welche in dem Moment, wo er bemerkt, dass es
Probleme mit dem Patch gibt, hätte vorrausahnen können, dass eine echte
Diskussion sich gleich entwickelt, und desshalb in dem angemessenen
Medium gehalten werden sollte.</para>

<!--

-->
<para>Um einen Vergleich zur Mathematik zu führen, wenn die 
Information danach aussieht, als würde es schnell konvergieren, dann
stellen Sie es gleich in den Bugtracker; wenn es danach aussieht
als würde es divergieren, dann wäre ein Mailverteiler oder ein
IRC-Kanal der bessere Ort.</para>

<!--

-->
<para>Das bedeutet nicht, dass es niemals Austausche auf dem Bug 
Tracker geben sollte. Dem Meldenden nach weiteren Details einer
Anleitung zur Reproduktion zu fragen, neigt beispielsweise dazu ein im
hohen maße konvergenter Ablauf zu sein. Die Rückmeldung wird 
wahrscheinlich keine neuen Probleme hervorbringen, es wird lediglich
die Informationen erweitern, die bereits erfasst wurden. Es gibt
keinen Grund den Mailverteiler mit diesem Vorgang abzulenken; Sie
können es durchaus in den Kommentaren des Bugtrackers erledigen.
Gleichermaßen gilt, wenn Sie sich ziemlich sicher sind, dass der Bug
fälschlicherweise gemeldet wurde (d.h. kein Bug ist), dann können Sie
es gleich in der Meldung sagen. Selbst auf ein kleines Problem bei einer
vorgeschlagenen Lösung hinzuweisen ist in Ordnung, angenommen es ist
kein Problem welches die Lösung gänzlich verhindert.</para>

<!--

-->
<para>Wenn Sie andererseits philosophische Angelegenheiten über den
Ramen der Meldung oder das Verhalten der Anwendung aufbringen, können
Sie sich sicher sein, dass andere Entwickler beteiligt sein wollen.
Die Diskussion wird wahrscheinlich eine weile lang divergieren, bevor
es konvergiert, also schreiben Sie an den Mailverteiler.</para>

<!--

-->
<para>Verlinken Sie immer von der Meldung auf den Thread im 
Mailverteiler. Es ist immer noch wichtig für jemand der die Meldung
verfolgt, in der Lage zu sein, die Diskussion zu erreichen, selbst wenn
die Meldung selber nicht das Forum der Diskussion ist. Die Person die
den Thread anfängt, mag das ein wenig aufwendig finden, aber in 
Open-Source-Kultur hat im allgemeinen der Autor die Verantwortung: Es ist
viel wichtiger Sachen für duntzende oder hunderte Leute die den Bug
möglicherweise lesen als für die drei oder fünf die darüber schreiben.
</para>

<!--

-->
<para>Es ist in Ordnung, wichtige Schlussfolgerungen oder 
Zusammenfassungen aus der Listen-Diskussion in die Meldung zu
übertragen, wenn das es für die Leser einfacher macht. Ein häufiger
Ablauf ist es, eine E-Mail-Diskussion anzufangen, einen Link an den
Thread in der Meldung zu schreiben, und dann sobald die Diskussion
zu Ende ist, die finale Zusammenfassung in die Meldung zu kopieren
(zusammen mit einem Link zu der Nachricht welche die Zusammenfassung
beinhaltet), damit jemand die sich die Meldung anschaut, leicht
erkennen kann, welche Lösung beschlossen wurde, ohne irgendwo anders
hinclicken zu müssen. Man merke an, dass die gewöhnliche Problematik
doppelter Informationen hier nicht gibtm da sowohl Archive als auch
Kommentare in einer Meldung, im allgemeinen sowieso statische, 
unveränderliche Daten sind.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="publicity">
<title>Öffentlichkeit</title>

<!--

-->
<para>Bei freier Software gibt es einen relativ glatten Übergang
zwischen rein internen Diskussionen und öffentlichen Bekanntmachungen.
Das liegt zum Teil daran, dass die Zielgruppe immer schlecht bestimmbar
ist: Angesichts, dass die meisten oder alle Nachrichten öffentlich
zugänglich sind, hat das Projekt nicht die volle Kontrolle darüber,
welchen Eindruck die Öffentlichkeit bekommt. Jemand &ndash; sagen wir
ein <ulink url="heise.de"/> Mitarbeiter &ndash; kann die Aufmerksamkeit
von Millionen Lesern auf eine Nachricht richten, von der keiner vermutet
hätte, dass sie jemals außerhalb des Projekts gesehen werden würde.
Das ist eine Tatsache des Lebens, mit der alle Open-Source-Projekte
leben müssen, in der Praxis aber, ist das Risiko für gewöhnlich klein.
Im algemeinen, sind die Bekanntgaben die das Projekt am ehesten
öffentlich verbreiten will, diejenigen die auch am ehesten bekannt
werden, angenommen Sie nutzen die richtigen Mechanismen darauf 
hinzuweisen, wie berichtenswert es ist für die Öffentlichkeit ist.
</para>

<!--

-->
<para>Für großere Bekanntgaben, gibt es allgemein vier Hauptkanäle der
Verbreitung, auf den Melungen so gleichzeitig wie möglich gemacht 
werden sollten:</para>

<orderedlist>

  <listitem><para>Die erste Seite Ihres Projekts wird wahrscheinlich
	    von mehr leuten gesehen, als irgend ein anderer Teil des
	    Projekts. Wenn Sie eine wirklich große Ankündigung haben,
	    schreiben Sie einen paar kurzen Sätze dorthin. Sie sollten
	    eine kurze Zusammenfassung sein die auf die Pressemitteilung
	    (siehe unten) für weitere Informationen verweist.</para>
  </listitem>

  <listitem><para>Gleichzeitig, sollten Sie auch einen "Nachrichten"
	    oder "Pressemitteilungen" Bereich auf der Webseite haben
	    wo die Bekanntgabe im detail erläutert werden kann. Der
	    Sinn von einer Pressemitteilung liegt zum Teil darin, ein
	    einziges kanonisches "Bekanntgabe-Objekt" zu haben, auf
	    das andere Seite verlinken können, also stellen Sie sicher,
	    dass es entsprechend strukturiert ist: entweder als eine
	    Webseite für jede neue Version, als diskreten Eintrag in
	    einem Blog, oder als irgend eine andere Art Entität auf
	    die verlinkt werden kann, und die trotzdem eindeutig
            von anderen Veröffentlichungen imselben Bereich zu
	    unterscheiden ist.</para>
  </listitem>

  <listitem><para>Wenn Ihr Projekt einen RSS-Feed hat, stellen Sie 
	    sicher, dass die Ankündigung auch dort veröffentlicht wird.
	    Das mag automatisch passieren wenn Sie die Pressemitteilung
	    erstellen, abhängig davon, wie Ihre Webseite eingerichtet
	    ist. (<firstterm>RSS</firstterm> ist eine Methode, um
	    Nachrichten-Zusammenfassungen mit einer Menge Metadaten an
	    "Abonenten" zu verteilen, zu verbreiten, also Leute die ein
	    Interesse gezeigt haben, diese Zusammenfassungen zu 
	    bekommen. Siehe <ulink 
	url="http://www.xml.com/pub/a/2002/12/18/dive-into-xml.html"/>
            für weitere Informationen über RSS.)</para>
  </listitem>

  <listitem><para>Wenn es in der Ankündigung um eine neue Version der
	Software geht, dann aktualisieren Sie den Eintrag Ihres Projekts
	bei <ulink url="http://freshmeat.net/"/> (siehe <xref 
	linkend="announcing"/> in dem es darum geht diesen Eintrag 
	überhaupt erst anzulegen). Jedes mal, wenn Sie einen 
        Freshmeat-Eintrag aktualisieren, geht dieser Eintrag auf die 
	Änderungsliste von Freashmeat für den Tag. Die Änderungsliste
	wird nicht nur auf Freashmeat selber aktualisiert, sondern auf
	verschiedenen anderen Portalen (inklusive <ulink 
	url="slashdot.org"/>) welches erwartungsvoll von einer Horde
	Menschen beobachtet wird. Freshmeat bietet auch die gleichen
	Daten mittels eines RSS-Feed an, damit Leute die den RSS-Feed
	von Ihrem projekt aboniert haben, die Ankündigung trotzdem
	durch den von Freshmeat sehen.</para>
  </listitem>

  <listitem><para>Schreiben Sie eine E-Mail an den Verteiler für
	Ankündigungen (en. announcement) ihres Projekts. Der Name von
	diesem Verteiler sollte wirklich "announce" sein, d.h. 
	<literal>announce@ihrprojekt.org</literal>, weil das 
	mittlerweile so ziemlich zum Standard geworden ist, und Ihr
	Projekt sollte klarstellen, dass es einen sehr geringen
	Betrieb hat, ausschließlich für Projekt Ankündigunen. Die
	meisten dieser Ankündigunen werden sich um neue Versionen der
	Software drehen, gelegentlich aber andere Ereignisse, wie eine
	Spendaktion, die Entdeckung einer Sicherheitslücke (siehe 
	<xref linkend="security"/>)<phrase output="printed"> später
	in diesem Kapitel</phrase>, oder eine größere Änderung in der
	Richtung des Projekts können dort auch gemeldet werden. Da es
	ein Verteiler mit geringem Betrieb ist und nur für wichige
	Sachen benutzt wird, hat der <literal>announce</literal> 
	Verteiler typischerweise die höchste Anzahl an Anmeldungen von
	allen Verteilern in Ihrem Projekt (das bedeutet natürlich, dass
	Sie es nicht missbrauchen sollten &ndash; überlegen Sie genau vor
	Sie etwas schreiben). Um zu vermeiden, dass jeder beliebige,
	oder schlimmer noch, Spam durchkommt, muss der
	<literal>announce</literal> Verteiler immmer moderiert werden.
	</para>
  </listitem>

</orderedlist>

<!--

-->
<para>Versuchen Sie die Ankündigunen an all diesen Stellen zur gleichen
Zeit zu machen, so nahe wie möglich. Manche werden vielleicht verwirrt,
wenn Sie eine Ankündigung auf dem Verteiler sehen, aber keinen 
entsprechenden Eintrag auf der Webseite des Projekts oder seinen
Pressemitteilungen, welches dem entspricht. Wenn Sie die die 
verschiedenen Änderungen (E-Mails, Bearbeitung der Webseite, usw.)
aufreihen und alle in einem Zug abschicken, können Sie das Fenster der
inkonsistenz sehr klein halten.</para>

<!--

-->
<para>Bei einem weniger wichtigen Ereignis, können Sie manche oder
alle obigen Kanäle ausschließen. Das Ereignis wird immer noch von
der Öffentlichkeit entsprechend seiner Wichtigkeit bemerkt werden.
Während zum Beispiel eine neue Version der Software ein großes
Ereignis ist, ist lediglich das Datum für eine neue Version 
festzulegen, wenn auch einigermaßen Berichtenswert, nich annähernd so
wichtig wie die neue Version selbst. Ein Datum festzulegen ist eine
E-Mail an die täglichen Mailverteiler wert (nicht an den "announce"
Verteiler), und eine aktualisierung der Zeitplan oder der Status-Seite,
aber nicht mehr.</para>

<!--

-->
<para>Sie werden vielleicht trotzdem dieses Datum in anderen 
Diskussionen im Internet auftauchen sehen, überall dort, wo Leute an
dem Projekt interesiert sind. Leute die auf Ihren Verteilern
herumschleichen, lediglich horchen und nie etwas sagen, sind nicht
unbedingt an andern Stellen still. Mundpropaganda sorgt für eine sehr
weite Verbreitung; Sie sollten darauf zählen, und selbst kleine
Ankündigunen sorgfältig ausarbeiten, derart, dass eine korrekte
übertragung der Informationen ermutigt wird. Insbesondere Nachrichten,
von denen Sie erwarten, dass sie zitiert werden, sollten einen klaren
für die Zitierung gedachten Anteil haben, genau so, als ob Sie eine
formale Pressemitteilung schreiben würden. Zum Beispiel:</para>

  <blockquote>
     <para><emphasis>Nur eine Information über den aktuellen Stand:
	Wir planen die Version 2.0 von Scanley mitte August 2005 zu
	veröffentlichen. Sie können immer 
	http://www.scanley.org/status.html auf Aktualisierungen 
	überprüfen. Die große neue Funtion wird die Suche mit
	Regulären Ausdrücken sein.</emphasis></para>

     <para><emphasis>Andere neue Funktionen sind unter anderem:&nbsp;... 
	Es wird auch verschiedene Bugfixes geben, unter 
	anderem:&nbsp;...</emphasis></para>
  </blockquote>

<!--

-->
<para>Der erste Absatz ist kurz, gibt die zwei wichtigsten Informationen
(Datum der Veröffentlichung und die wichtige neue Funktion), und eine
URL die man für weitere Nachrichten besuchen kann. Wenn dieser Absatz
das einzige ist, was über den Bildschirm von jemanden läuft, sind Sie
immer noch auf einem guten Weg. Die übrige E-Mail könnte verloren gehen
ohne das wesentlich am Ihnalt zu beeinflussen. Manchmal werden Leute
sowieso auf die ganze E-Mail verlinken, aber genau so oft, werden Sie
nur einen kleinen Teil zitieren. Wenn man letztere Möglichkeit bedenkt,
können Sie es ihnen auch genau so gut einfach machen, und bei dem
Geschäft etwas Einfuss darüber haben, was zitiert wird.</para>

<!-- ======================== subsection ============================== -->
<sect2 id="security">
<title>Bekanntgabe von Sicherheitslücken</title>

<!--

-->
<para>Eine Sicherheitslücke zu handhaben ist anders, als jede andere Art
von Bug-Meldung zu handhaben. Bei freier Software, ist es fast schon
eine religiöse Überzeugung alles offen zu machen. Jeder Schritt der im
Ablauf der normalen Bug handhabung ist für alle sichtbar, denen es
interesiert: Das Eintreffen einer ersten Meldung, die darauf folgende
Diskussion, und die letztendliche Behebung.</para>

<!--

-->
<para>Sicherheitslücken sind anders. Sie können die Daten und 
möglicherweise die Rechner von Nutzer kompromitieren. Solche Probleme
offen zu diskutieren käme dem weltweiten Bewerben ihrer Existenz gleich
&ndash; inklusive gegenüber allen Parteien, die vielleicht einen
böswilligen Nutzen aus dem Bug ziehen könnten. Selbst den Fix zu 
commiten, kündigt effektiv die Existenz des Bugs an (es gibt potentielle
Angreifer, welche die Commit-Kommentare öffentlicher Projekte
verfolgen, systematisch auf der Suche nach Änderungen, die auf
Sicherheitsprobleme in dem noch nicht geänderten Code hinweisen). Die
meisten Projekte haben sich auf ungefär die gleichen Schritte
festgelegt, um diesen Konflikt zwischen Offenheit und Geheimhaltung
zu handhaben, basierend auf folgende Richtlinien:</para>

<orderedlist>
  <listitem><para>Reden Sie nicht öffentlich über den Bug bis ein Fix
	verfügbar ist; stellen Sie dann den Fix zu genau der selben 
	Zeit zur Verfügung wie Sie den Bug bekanntgeben.</para> 
  </listitem>
  <listitem><para>Denken Sie sich diesen Fix so schnell wie möglich
	aus &ndash; insbesondere wenn jemand von außerhalb des Projekts
	den Bug gemeldet hat, denn dann wissen Sie, dass es zumindest
	eine Person außerhalb des Projekts gibt, der in der Lage ist
	die Lücke auszunutzen.</para>
  </listitem>
</orderedlist>

<!--

-->
<para>In der Praxis, führen diese Prinzipien zu einer ziemlich 
standardisierte reihe an Schritten, welche in den Abschnitten weiter
unten beschrieben werden.</para>

<sect3 id="security-receiving">
<title>Empfang der Meldung</title>

<!--

-->
<para>Ein Projekt muss offensichtlich die Möglichkeit habem Meldungen
über Sicherheitslücken von jedem zu bekommen. Die gewöhnlichen Adressen
für Bug-Meldungen reichen aber nicht aus, da sie auch von jedem
beobachtet werden können. Führen Sie desshalb einen getrennten 
Mailverteiler um Bug-Meldungen über Sicherheitslücken zu bekommen. Dieser
Verteiler darf keine öffentlich zugänglichen Archive haben, und
seine Anmeldungen müssen strengstens überwacht werden &ndash; nur
langjährige, vertrauenswürdige Entwickler dürfen auf den Verteiler 
sein. Wenn Sie eine formale Definition darüber haben wollen was
"vertrauenswürdig" ist, können Sie "jeder der seit zwei oder mehr 
Jahren commit Zugriff hat" verwenden, um Bevorzugung zu vermeiden.
Das ist die Gruppe die Sicherheitslücken handhaben wird.</para>

<!--

-->
<para>Im Idealfall sollte der Sicherheits-Verteiler nicht vor Spam
geschützt oder moderiert werden, da Sie nicht wollen, dass eine 
wichtige Meldung gefiltert oder verzögert wird, nur weil an dem
Wochenende keine Moderatoren online waren. Wenn Sie doch Software zum
automatischen Schutz vor Spam benutzen, versuchen Sie es mit einer
hohen Toleranz zu konfigurieren; es ist besser ein paar Spam-Mails
durchkommen zu lassen, als eine Meldung zu verpassen. Damit der
Verteiler effektiv ist, müssen Sie natürlich seine Adresse bewerben;
in anbetracht, dass er nicht moderiert wird, wenn überhaupt, nur leicht
vor Spam geschützt wird, versuchen Sie nie seine Adresse ohne irgend
eine Art verschleierung der Adresse zu verbreiten, wie in <xref 
linkend="address-hiding"/><phrase output="printed"> im Kapitel <xref
linkend="technical-infrastructure"/></phrase> beschrieben. 
Glücklicherweise, muss die Verschleierung der Adresse sie nicht
unbedingt unleserlich machen; siehe <ulink 
url="http://subversion.tigris.org/security.html"/>, und schauen Sie
sich den HTML Quellcode für die Seite als Beispiel an.</para>

</sect3>

<sect3 id="security-finding-a-fix">
<title>Entwickeln Sie den Fix im stillen</title>

<!--

-->
<para>Was macht der sicherheits Verteiler also wenn es eine Meldung 
bekommt? Die erste Aufgabe ist zu evaluieren wie schwerwiegend und
dringend es ist:</para>

<orderedlist>
  <listitem><para>Wie ernst ist die Lücke? Erlaubt es einen
	böswilligen Angreifer den Computer von jemanden der Ihre 
	Software benutzt zu übernehmen? Oder gibt es lediglich
	Informationen darüber, wie groß manche ihrer Dateien sind?
	</para>
  </listitem>

  <listitem><para>Wie leicht ist es die Lücke auszunutzen? Kann ein
	Angriff automatisiert werden, oder erfordert es Wissen über
	bestimmte Umstände, wohlbegründete Vermutungen und Glück?</para>
  </listitem>

  <listitem><para><emphasis>Wer</emphasis> hat Ihnen das Problem
	gemeldet? Die Antwort auf diese Frage ändert natürlich nichts an
	der Natur der Lücke, aber es gibt Ihnen eine Idee davon, wie
	viele andere darüber bescheid wissen könnten. Wenn die Meldung
	von einem der eigenen Mitglieder des Projekts kommt, können Sie
	es etwas gelassener nehmen (aber nur ein bisschen), da Sie
	ihnen Vertrauen können, dass sie es keinen anderen gesagt 
	haben. Wenn es andereseits in einer E-Mail von
	<literal>anonymer14@globalehacker.net</literal> kam, dann 
	sollten Sie lieber so schnell wie möglich etwas unternehmen.
	Die Person hat Ihnen einen Gefallen getan, indem sie Ihnen
	überhaupt über das Problem informiert hat, aber Sie haben
	keine Ahnung wie viele weitere sie darüber bescheid gesagt hat,
	oder wie lange sie warten wird, vor sie die schwachstelle in
	einem laufenden System ausnutzen wird.</para>
  </listitem>
</orderedlist>

<!--

-->
<para>Man merke an, dass die Unteschiede von denen wir hier reden oft
nur eine enge Spanne zwischen <emphasis>dringend</emphasis> und
<emphasis>extrem&nbsp;dringend</emphasis> ist. Selbst wenn die Meldung
von einer bekannten, wohl gesinnten Quelle kommt, könnte es immer noch
andere im Netz geben, die diesen Bug schon vor langem entdeckt haben,
und es nur nicht gemeldet haben. Der einzige Fall bei dem es nicht
dringen ist, ist wenn der Bug von sich aus die Sicherheit nicht
ernsthaft Kompromitiert.</para>

<!--

-->
<para>Das "<literal>anonyer@globalehacker.net</literal>" Beispiel
ist im übrigen nicht schertzhaft gemeint. Es kann durchaus sein, dass
Sie Bug-Meldungen von anonymen Personen bekommen, die mit Ihren Worten
nie ganz klar stellen ob sie auf Ihrer Seite sind oder nicht. Es macht
keinen Unterschied: Wenn Sie eine Sicherheitslücke an Sie gemeldet 
haben, werden sie das gefühl haben Ihenen eine Gefallen getan zu haben,
und Sie sollten entsprechend antworten. Danken Sie ihnen für die
Meldung, geben Sie ein Datum an vor dem Sie vorhaben einen öffentlichen
Fix freizugeben, und halten Sie sie den Kontakt. Manchmal werden sie
<emphasis>Ihnen</emphasis> ein Datum geben &ndash; das heißt, eine
implizite Drohung den Bug an einem bestimmten Datum bekannt zu geben,
ob Sie bereit sind oder nicht. Das mag sich nach einschüchterndem
Machtspiel anfühlen, aber es ist wahrscheinlich eher eine vorsorgliche
Maßnahme die sich aus vergangener Enttäschung mit nicht reagierenden
Software-Produzenten, welche die Sicherheitsmeldungen nicht ernst
genug nahmen. In jedem Fall, können Sie es sich nicht leisten, dieser
Person auf die Nerven zu gehen. Wenn der Bug ernst ist, hat er
schließlich Wissen, welches Ihren Nutzern ernste Probleme bereiten
könnte. Behandeln Sie solche Personen gut, und hoffen Sie darauf, dass
sie auch gut behandelt werden.</para>

<!--

-->
<para>Eine weitere Person die häufig Bugs meldet, ist der Sicherheitsprofi, 
jemand der davon lebt, Code zu überprüfen und sich auf dem
Laufenden über die neusten Software-Schwachstellen hält. Diese Leute
haben für gewöhnlich Erfahrung mit beiden Seiten des Zauns &ndash; sie
haben sowohl Meldungen gemacht als auch bekommen, wahrscheinlich mehr
als die meisten in Ihrem Projekt. Auch sie werden wahrscheinlich ein
Frist setzen, vor dem eine Lücke geschlossen werden muss, vor sie an
die öffentlichkeit gehen. Die Frist mag etwas verhandelbar sei, das
hängt aber vom Meldenden ab; Fristen sind unter Sicherheitsexperten
so ziemlich als die einzige Möglichkeit anerkannt worden, Organisationen 
zuverlässig dazu zu bringen, sich um Sicherheitsprobleme zeitnah zu
kümmern. Betrachten Sie die Frist also nicht als unhöflich, sie ist 
eine altehrwürdige Tradition und es gibt gute Gründe dafür.</para>

<!--

-->
<para>Sobald Sie wissen wie schwerwiegend und dringend eine Lücke ist,
können Sie sich an dem Fix zu schaffen machen. Es gibt manchmal einen
Kompromiss zwischen einen eleganten Fix und es schnell zu machen; das
ist der Grund warum Sie sich vorher über die Dringlichkeit einigen
müssen vor Sie anfangen. Halten Sie die Diskussion über den Fix 
natürlich auf die Mitglieder des Sicherheitsverteilers beschränkt,
sowie auf den ursprünglichen Meldenden (wenn die beteiligt sein möchte)
und solche Entwickler die aus technischen Gründen herangezogen werden
müssen.</para>

<!--

-->
<para>Committen Sie den Fix nicht zum Projektarchiv. Halten Sie ihn als
Patch bereit bis zum Datum der Bekanntgabe. Wenn Sie es committen
würden, selbst mit einem unscheinbaren Kommentar, könnte jemand die
Änderung bemerken und verstehen. Sie wissen nie, wer Ihr Projektarchiv im
Auge behält und warum sie vielleicht interesiert sein könnten. 
Commit-E-Mails 
abzuschalten würde nichts bringen; erstens weil sich die Lücke
in der Reihe der E-Mails verdächtig aussehen würde, und die Daten wären
immer noch im Projektarchiv. Machen Sie einfach die ganze Entwicklung
in einem Patch und halten Sie ihn an einem privaten Ort, vielleicht ein
getrenntes privates Projektarchiv, das nur denjenigen bekannt ist, die
schon über den Bug Bescheid wissen. (Wenn Sie eine dezentralisierte
Versionsverwaltung benutzen wie Arch oder SVK, können Sie die Arbeit
mit kompletter Versionsverwaltung machen und dieses Projektarchiv einfach
vorm Zugriff für Ausenstehende schützen.)</para>

</sect3>

<sect3 id="security-cve">
<title>CAN/CVE-Nummer</title>

<!--

-->
<para>Sie haben vielleicht eine <firstterm>CAN-Nummer</firstterm> oder
eine <firstterm>CVE-Nummer</firstterm> im Zusammenhang mit 
Sicherheitsproblemen gesehen. Diese Zahlen sehen für gewöhnlich zum
Beispiel so "CAN-2004-0397" oder so "CVE-2002-0092" aus.</para>

<!--

-->
<para>Beide Zahlenarten repräsentieren den gleichen Entitätstyp:
Ein Eintrag in der Liste von "Common Vulnerabilities and Exposures" 
(de. "Verbreitete Schwachstellen und Aufdeckungen") die bei
<ulink url="http://cve.mitre.org/"/> gepflegt wird. Der Sinn dieser
Liste ist es standardisierte Namen für alle bekannte 
Sicherheitsprobleme zur verfügung zu stellen, damit jeder einen
eindeutigen, kanonischen Namen bei der Diskussion eines solchen hat,
und einen zentralen Ort zu haben, um mehr Informationen zu bekommen.
Der einzige Unterschied zwischen einer "CAN"-Nummer und einer 
"CVE"-Nummer ist, dass erstere einen Kandidaten-Eintrag repräsentiert, 
welches noch nichtbestätigt wurde, und letzteres einen bestätigten
Eintrag repräsentiert. Beide Typen sind jedoch für die Öffentlichkeit
sichtbar, und die Nummer für einen Eintrag ändert sich nicht, wenn Sie
bestätigt wird &ndash; der "CAN"-Prefix wird einfach mit "CVE" ersetzt.
</para>

<!--

-->
<para>Ein CAN/CVE-Eintrag entält selber nicht eine vollständige
Beschreibung von dem Bug und wie Sie sich vor ihm schützen. 
Stattdessen, enthält es eine kurze Beschreibung und eine Liste von
Verweisen auf externe Ressourcen (wie die Archive des Verteilers) wo
Leute detalliertere Infomationen nachschlagen können. Der wirkliche
Sinn von <ulink url="http://cve.mitre.org/"/> ist einen wohl
organisierten Ort zu haben, in dem jede Schwachstelle einen Namen 
haben und eine klare Route zu weiteren Daten haben kann. Siehe
<ulink url="http://cve.mitre.org/cgi-bin/cvename.cgi?name=2002-0092"/>
als Beispiel für einen Eintrag. Beachten Sie, dass Verweise sehr kurz
gehalten sein können, mit Quellen die als kryptische Abkürzungen
erscheinen. Ein Schlüssel zu diesen Abkürzungen befindet sich bei
<ulink url="http://cve.mitre.org/cve/refs/refkey.html"/>.</para>

<!--

-->
<para>Wenn Ihre Schwachstelle die Kriterien für ein CVE erfüllt, kann
es sein, dass Sie dafür eine CAN-Nummer bekommen wollen. Der Prozess
dafür ist absichtlich umständlich gehalten: Im Prinzip müssen Sie
jemanden kennen, oder jemanden kennen der jemand anderen kennt. Das ist
nicht so verrückt wie es sich anhören mag. Damit die CVE-Redaktion
es vermeiden kann von unechten oder schlecht geschriebenen Vorschlägen
überwältigt wird, nehmen Sie nur Vorschläge von Quellen, die sie bereits 
kennen und denen Sie vertrauen. Damit Ihre Lücke in der Liste aufgenommen
wird, müssen Sie desshalb einen Pfad von Bekanntschaften von Ihrem
Projekt hin zu der CVE-Redaktion finden. Fragen Sie bei Ihren 
Entwicklern nach; einer von Ihnen wird wahrscheinlich jemand anderen
kennen der bereits durch den CAN-Prozess gelaufen ist, oder der jemand
kennt der es gemacht hat, usw. Der Vorteil dieser Methode ist auch,
das irgendwo in der Kette jemand sein kann, der genug weiß, um Ihnen
sagen zu können, dass a) es nicht als Lücke oder Aufdeckung nach den
Kriterien von MITRE zählen würde, es also keinen Sinn hat es 
vorzuschlagen, oder b) dass die Lücke bereits eine CAN- oder CVE-Nummer
<emphasis>hat</emphasis>. Letzteres kann passieren, wenn der Bug 
bereits auf einer andern Liste für Sicherheitsberatung veröffentlicht
wurde, zum Beispiel bei <ulink url="http://www.cert.org/"/> oder auf
dem BugTraq-Mailverteiler bei 
<ulink url="http://www.securityfocus.com/"/>. (Wenn das passiert ist,
ohne das Ihr Projekt davon erfahren hat, dann sollten Sie sich sorgen
machen, was noch möglicherweise abläuft worüber Sie nichts wissen.)
</para>

<!--

-->
<para>Wenn Sie überhaupt eine CAN/CVE-Nummer bekommen, werden Sie sie
wahrscheinlich im frühen Stadium Ihrer Bug-Untersuchung bekommen, damit
alle weitere Kommunikation sich auf diese Nummer beziehen kann. 
CAN-Einträge stehen unter einem Embargo bis zu dem 
Veröffentlichungsdatum; Der Eintrag wird als leerer Platzhalter 
existieren (damit Sie den Namen nicht verlieren), es wird aber keine
Informationen über die Lücke enthüllen, bist zu dem Datum an dem Sie
den Bug und den Fix bekanntgeben.</para>

<!--

-->
<para>Weitere Informatione über den CAN/CVE-Prozess kann bei
<ulink url="http://cve.mitre.org/about/candidates.html"/> gefunden
werden, und eine besonders klare Darstellung von dem Nutzen eines
Open-Source-Projekts der CAN/CVE-Nummern befindet sich auf <ulink
url="http://www.debian.org/security/cve-compatibility"/>.</para>

</sect3>

<sect3 id="security-prenotification">
<title>Vorankündigung</title>

<!--

-->
<para>Sobald Ihr Sicherheitsteam (also die Entwickler die auf dem
sicherheits Verteiler sind, oder die zu einer bestimmten Meldung
herangezogen wurden) eine Fix bereit hat, müssen Sie entscheiden
wie Sie es Verbreiten wollen.</para>

<!--

-->
<para>Wenn Sie den Fix einfach zu Ihrem Projektarchiv committen, oder
sonstwie der Welt bekanntgeben, zwingen Sie effektiv alle die Ihre
Software benutzen sofort zu aktualisieren oder das Risiko einzugehen,
gehackt zu werden. Es ist deshalb manchmal angemessen, für bestimmte
Nutzer eine <firstterm>Vorankündigung</firstterm> zu machen. Das gilt
insbesondere bei Client-Server-Software, bei dem es wenige wohl
bekannte Server geben kann, die verlockende Ziele für Angreifer sind.
Die Administratoren dieser Server wären dankbar darüber einen
zusetzlichen Tag oder zwei für die Aktualisierung zu haben, damit
Sie bereits geschützt sind, wenn die Lücke öffentlich bekannt wird.
</para>

<!--

-->
<para>Vorankündigung bedeutet lediglich eine E-Mail an diese 
Administratoren zu senden, vor dem Veröffentlichungsdatum, in dem Sie
ihnen über die Lücke bescheid geben und wie sie es beheben können. Sie
sollten eine Vorankündigung nur an Personen schicken, die Sie diese
diskrete Information anvertrauen können. Die Qualifikation um eine
Vorankündigung zu erhalten hat also zwei Bedingungen: Der Empfänger
muss eine große Installation in Betrieb haben, wichtige Server bei dem
eine Kompromitierung etwas ernstes wäre, <emphasis>und</emphasis> der
Empfänger muss jemanden sein, der sich über das Sicherheitsproblem vor
dem Veröffentlichungsdatum verplappert.</para>

<!--

-->
<para>Senden Sie jede E-Mail mit einer Vorankündigung einzeln (eines
nach dem anderen) an jedem Empfänger. Senden Sie <emphasis>nicht
</emphasis> an die komplette Liste von Empfängern auf ein mal, da sie
dann ihre gegenseitigen Namen sehen würden &ndash; was zur Folge hat,
dass Sie im Grunde genommen jedem Empfänger über die Tatsache 
aufmerksam machen, dass jeder <emphasis>andere</emphasis> Empfänger
möglicherweise die Sicherheitslücke auf seinem Empfänger hat. Es an
alle mittels einem blinden CC (BCC) zu schicken ist auch keine gute
Lösung, da manche Administratoren ihre Mail-Konten mit Spam-Filtern
schützen, die entweder BCC-Mails blockieren, oder ihre Priorität
reduzieren, da heutzutage sehr viel Spam mit BCC verschickt wird.
</para>

<!--

-->
<para>Hier ist ein Beispiel E-Mail für eine Vorankündigung:</para>

<screen>
Von: Ihr Name hier
An: admin@grosser-bekannter-server.de
Antwort-an: Ihr Name hier (nicht die Adresse des Sicherheitsverteilers)
Betreff: Vertrauliche Meldung einer Scanly-Sicherheitslücke.


Diese E-Mail ist eine vertrauliche Vorankündigung einer 
Sicherheitsmeldung zum Scanley-Server.

Bitte leiten Sie keinen Teil dieser E-Mail an irgend jemand weiter. Die
öffentliche Bekanntgabe wird nicht vor dem 19. Mai stattfinden, und
wir würden die Information gerne bis dann unter Verschluss halten.

Sie erhalten diese E-Mail, da (wir denken, dass) Sie einen Scanley-Server
betreiben, und wir ihn lieber gepatcht hätten, bevor die Sicherheitslücke
am 19ten Mai bekannt gegeben wird.

Verweise:
===========

   CAN-2004-1771: Scanley Speicherüberlauf in Abfragen

Sicherheitslücke:
==============

   Der Server kann dazu gebracht werden, beliebige Befehle auszuführen,
   wenn die Locale des Servers falsch konfiguriert ist und der Client
   eine fehlerhafte Abfrage macht.

Sicherheitsgrad:
=========

   Sehr ernst, kann die Ausführung von beliebigen Code auf dem Server
   zur Folge haben.

Provisorische Lösungen:
============

   Die 'natural-language-processing'-Einstellung in der 
   scanley.conf auf 'off' zu stellen, schließt die Sicherheitslücke.

Patch:
======

   Der folgende Patch gilt für Scanley 3.0, 3.1, und 3.2.

   Eine neu Version (Scanley 3.2.1) wird am oder kurz vor dem 19. Mai
   veröffentlicht werden, damit es zur gleichen Zeit verfügbar istm wie
   die Bekanntgabe der Lücke. Sie können dem Patch jetzt anwenden oder
   einfach auf die neue Version warten. Der einzige Unterschied 
   zwischen 3.2 und 3.2.1 wird diese Patch sein.

[...Patch folgt hier...]
</screen>

<!--

-->
<para>Wenn Sie eine CAN-Nummer haben, geben Sie sie bei der 
Vorankündigung mit an (wie oben gezeigt), selbst wenn die Information
unter Verschluss steht und die MITRE Seite desshalb leer sein wird. Die
CAN-Nummer erlaubt es dem Empfänger mit sicherheit zu wissen, dass der
Bug über den sie eine Vorankündigung bekommen haben, der gleiche ist
von dem sie später durch öffentliche Kanäle erfahren, also müssen sie
sich keine Sorgen darüber machen, ob weitere Schritte notwendig sind,
was genau der Sinn einer CAN/CVE-Nummer ist.</para>

</sect3>

<sect3 id="security-announcing">
<title>Verteilen Sie den Fix öffentlich</title>

<!--

-->
<para>Der letzte Schritt bei der Handhabung einer Sicherheitslücke, ist
den fix öffentlich zu verteilen. Sie sollten in einer einzigen, 
umfangreichen Meldung, das Problem beschreiben, die CAN/CVE-Nummer
angeben, falls vorhanden, beschreiben wie das Problem zu umgehen ist,
und wie es permanent 'gefixed' werden kann. 'Fix' bedeutet für
gewöhnlich auf eine neuere Version der Software zu aktualisieren,
obwohl es manchmal die Anwendung von einem Patch bedeuten kann,
insbesondere wenn die Software sowieso meistens vom Quellcode-Format
aus betrieben wird. Wenn Sie doch eine neue Version machen, sollte
es sich von einer existierenden Version durch genau diesen
sicherheits-Patch unterscheiden. So können konservative 
Administratoren, aktualisieren, ohne sich sorgen zu machen, was sie
noch beeinflussen könnten; sie müssen sich also keine Sorgen über
zukünftige Upgrades machen, da der sicherheits Patch als Folge in
allen zukünftigen Versionen enthalten sein wird. (Details der
Abläufe für neue Versionen werden in 
<xref linkend="security-releases"/><phrase output="printed"> im Kapitel
<xref linkend="development-cycle"/></phrase> behandelt.)</para>

<!--

-->
<para>Ob der öffentliche Fix eine neue Version zur Folge hat oder 
nicht, machen Sie die Meldung mit ungefähr der der gleichen Priorität
wie Sie eine neue Version machen würden: Senden Sie eine E-Mail an den
<literal>announce</literal> Verteiler des Projekts, machen Sie eine
neue Pressemitteilung, aktualisieren Sie den Freshmeat-Eintrag, usw.
Während Sie nie versuchen sollten, die Existenz einer Sicherheitslücke
herunterzuspielen, aus Sorge um den Ruf des Projekts, können Sie
durchaus den Ton und die Gewichtung der Sicherheitsmeldung anpassen,
um den Ernst des Problems zu entsprechen. Wenn die Sicherheitslücke
nur eine kleine Offenlegung von Informationen ist, nicht eine Lücke
die es erlaubt den kompletten Computer des Anwenders zu übernehmen,
mag es keinen all zu großen Wirbel gerechtfertigen. Sie können sich
sogar Entscheiden den <literal>announce</literal> Verteiler damit
abzulenken. Wenn das Projekt schließlich jedes mal Wolf schreit, 
werden sich die Nutzer denken, dass die Software weniger sicher ist,
als das tatsächlich der Fall ist, und es möglicherweise nicht glauben
wenn Sie wirklich ein riesiges Problem ankündigen müssen. Siehe
<ulink url="http://cve.mitre.org/about/terminology.html"/> als eine
gute Einführung zu dem Problem der Beurteilung wie schwerwiegend eine
Sicherheitslücke ist.</para>

<!--

-->
<para>Im Allgemeinen, wenn Sie sich nicht sicher sind, wie Sie ein
Sicherheitsproblem behandeln sollen, suchen Sie sich jemand Erfahrenen
und reden Sie darüber. Lücken zu handhaben und zu bewerten, ist 
größtenteils eine angelernte Fähigkeit und es ist leicht, die ersten 
paar Male Fehler zu machen.</para>

</sect3>

<!--

-->
<para>Zum Umgang mit Sicherheitslücken siehe auch die 
Richtlinien der Apache Software Foundation unter
<ulink url="http://www.apache.org/security/committers.html"/>.  Sie 
bieten eine ausgezeichnete Checkliste, anhand derer Sie prüfen können,
ob Sie alle Punkte sorgfältig bedacht haben.</para>

</sect2>

</sect1>

</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
