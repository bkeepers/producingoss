<chapter id="pfs-ch-6">

<title>Daily Development, Packaging and Releasing <!-- [ 15-25 pp] --> </title>

<simplesect>

<para><remark>Some things that should be in this chapter: common uses
of lightweight branches; separation of core development from satellite
development (such as translations, doc fixes, web site maintenance,
etc); the necessity of not interfering with ongoing development work
when some stabilizing activity (such as a release or a high-priority
fix across all the code) is going on.  The big difference with
commercial software development here is that you can't ask your dev
team to all join together and work toward the new release.  Some of
them will be interested in that, but others will not.  Those others
still want to keep busy on the project, so things need to be arranged
such that that is possible.</remark></para>

<para><remark>This might also be the right place to talk about change
annotation, as referred to from the "merge" entry in the Version
Control Vocabulary in chapter 3.</remark></para>

</simplesect>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-cycles">
<title>Cycles</title>

<para><remark>Common development cycle patterns in free
software.</remark></para>


<!-- ========================== subsection =========================== -->

<sect2 id="pfs-version-numbering">
<title>Version Numbering</title>

<para><remark>talk about how to do release numbers right, refer here from the
      "Announcing" in Chapter 2</remark></para>

</sect2>

<!-- ========================== subsection =========================== -->
<sect2 id="pfs-packaging">
<title>Packaging for Distribution</title>

<para><remark>Talk about the importance of adhering to the standards.
Describe and reference them.  Use cvs2svn as an example of how *not*
to do it.  Importance of tight link between release numbering and
tarball unpackment result name.  Importance of certain standard
all-caps files in the top-level of the project, which will also serve
as canonical reference targets from web pages.  Therefore it's
important that either the version control system have a browse mode,
or that the live web site be a checked out tree.  Note this in section
3 on version control.</remark></para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-tool-integration">
<title>Integrating Process With Tools</title>

<para><remark>How to tie in with the revision control system and the
bug tracker, so that they become integral parts of distributed
development.</remark></para>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-testing">
<title>Testing, Automated and Otherwise</title>

<para><remark>Regression testing: choosing the right level of
formality.  Coordinating results from human volunteers.</remark></para>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-releasing">
<title>Stabilizing and Releasing</title>

<para><remark>Stabilization and release preparation (i.e., avoiding the last
minute feature rush); making sure the process terminates in a finite
amount of time.  Point out how that releases may actually be harder in
open source projects than in proprietary ones.</remark></para>

<para><remark>Describe the change-inclusion voting system, but point
out how it is very different from the kinds of voting talked about in
Chapter 4.</remark></para>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-release-lines">
<title>Maintaining Multiple Release Lines</title>

<para><remark>Whether and how to maintain multiple release lines.  Make sure
this gets tied in bidirectionally with revision control discussion
(branches, arch vs cvs-style, for example).  Also, stress importance
of training people to use the issue tracker well.  Be patient, be
verbose, repeat yourself -- it will feel stupid, but it <emphasis>will
pay off</emphasis>.</remark></para>

</sect1>


</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->

