     Oh Most Noble and Gracious Emacs, please be in -*- org -*- mode!

This is mostly todo items for the 2nd edition, plus some random other stuff.
Many items here may not make sense to people other than the book's author.

This file is not a complete list of all todo items, just most of them.
If something you expected to see here is missing, the omission may not
be intentional, or that may be one of the todo items kept in a private
file (because it comes from a confidential suggestions -- the result
will be public, but the information leading to the result is private).

I'm not bothering with a bug tracker because I'm not really running
the book like an open source project.  This TODO list is the tracker.

* Content ideas
** Mention Gabriella Coleman's book in preface or appendix or somewhere.
** In Chapter 7, update for JavaScript projects and other
   continuous development / auto-deployment situations.
   Also, commit IDs as release numbers, in certain circumstances.
** Ask Ben Reser and Hyrum Wright if they'll review Chapter 7?
** Ask Ben Reser to review "Announcing Security Vulnerabilities"
   in Chapter 6, to make sure I'm not missing anything important.
** Tell readers that SaaS-on-open-source-software is a thing.
   In Jenn Brandel's words:
   "Wanted to remind you (before I forget!) for you to note the
   software / service difference re: the dual licensing section of
   your book.  Just to make the distinction that there's no problem in
   charging for a service built on open source code."
   See also: http://nucivic.com/opensaas-future-government-innovation/
** Minor consistency fixes (easy):
   - "codebase" not "code base"
   - in todo notes, use "poss2" not "possv2"
** Mention other OSS forge platforms, alongside Gitorious, etc.
   - http://kallithea-scm.org/
   - Phabricator.org.  Michael Akinde says to look at this blog post:
     http://blogs.gnome.org/aklapper/2014/05/19/wikimedia-phabricator/
** Bugs reported by Gerhard Poul
   - http://cia.vc no longer exists
   - Google Code Hosting now supports git
   - Linux release numbering has since changed; maybe it would make
     sense to note that and maybe even enhance the section by
     describing the new numbering scheme?
   - typo "Public list mailing list"?
   - MySQL history needs to be updated as the fork already happened.
   - In the eBook (read the ePUB I converted to MOBI) the Fossil
     section refers to itself instead of veracity; this doesn't seem to
     be a problem in the HTML version that is currently on the web,
     though, so may also be a conversion issue.
** BUG: compatibility links don't produce .html files.
   When id="mailing-lists" changed to id="message-forums" in ch03.xml,
   we left an <anchor id="mailing-lists" /> in place for compatibility.
   However, that still doesn't produce mailing-lists.html, which means
   a bunch of links out on the Net will suddenly become obsolete.
   Solution is to find all the compatibility anchors and generate .html
   files that do a 301 redirect to the new link.
** Discuss the issue of when the "users" are by definition developers.
   (e.g., all those JS projects on GitHub).  Being a developer in
   general is not the same as being a developer on the project -- all
   those people using JQuery are not necessarily contributing to JQuery
   itself.  From JQuery's point of view, they're users, not developers.
   (Do this in Chapter 3?  Or somewhere else?)
** http://www.mikealrogers.com/posts/generation-gap.html
   On GitHub and the "amateurization" of open source projects.
** Search for everywhere "freecode" is mentioned, see if still right.
** Check for "opensource.org/licenses/*", fix to use SPDX URLs.
** Make sure the book recommends copyright ownership for new code.
   Check if this is covered in legal chapter or elsewhere.
** SFLC copyright management guide:
  http://softwarefreedom.org/resources/2012/ManagingCopyrightInformation.html
** Arches project as example of why attention bandwidth / resources
   can mean heads-down initial development makes sense sometimes.
   See Koen van Daele's mail about this ("Re: Arches") Aug/Sep 2012.
** OpenHatch / peers@ list
** Comb Jono Bacon's book again for topic coverage.
** Dreamwidth
** Formatting sanity check:
   Everywhere the '<phrase output="printed"> in ...</phrase>' trick is
   used, make sure there is appropriate spacing around the "in".
** Consortiums (OIC Weave, that first responder app, etc)
** breser points out don't use email to submit security bugs
   <breser> Pushing the ASF to stop using email to submit security issues.
 
   <breser> https://secsubmit.apache.org/
 
   * kfogel looks
 
   <breser> ^ That doesn't go anywhere yet so don't use it.
   
   <breser> I didn't build that Humbedoh did but in response to my
            suggestion at Apache Con
   
   <kfogel> That reminds me that I need to update that section of my
            book, to say the same thing.  Email is obviously the wrong
            way to transmit this kind of information.
   
   <breser> Ohh it's a fine way if both sides know how to deal with PGP.
   
   <breser> The problem is most don't.
   
   <breser> And in the case of an open source project they have to
            encrypt to multiple people.
   
   <breser> That is partly out of my annoyance at the ASF security team's
            behavior of taking encrypted mail, decrypting it and then
            posting it to the security/private list for a project.
   
   <kfogel> yeah -- I really think PGP/GPG is great but only in certain
            limited use cases
   
   <kfogel> I mean, unless everyone's going to set up Schleuder, but even
            then it's not a perfect win
   
   <breser> Feel free to weigh in here:
            http://mail-archives.apache.org/mod_mbox/www-infrastructure-dev/201404.mbox/%3C5357F5D6.1020209%40cord.dk%3E
   
   <kfogel> Nah, I don't think I'm likely to have a uniquely valuable
            opinion that's not already being better represented by
            someone taking more active part in the discussion
   
   <kfogel> Do you mind if I record a snapshot of this part of our
            conversation in a book-notes file that's publicly visible (to
            those who know where to look)?  I also have a private notes
            file I can use, if not.
   
   <breser> Go right ahead, nothing sensitive here.
** jorendorff's question about read access to security bugs,
    apparently an internal debate at Mozilla citing
    http://blog.gerv.net/2011/12/a-level-playing-field/ which cites POSS
    story about Mike Pilato and commit access.  See IRC transcript
    in #red-bean of 2012-08-15.
** Check with Mike on status of EPL-2.0, re "license-choosing" in Ch. 10.
** GitHub, bug trackers update
** Look on foundations list for some recent discussions, e.g.,
   "advice on branding and open source communities"
** OSS and gov't
    - the DNC thing with Paul Smith: interesting case study
    - check civcoms wiki of course
    - COTS, FARS, etc
    - Ask Simon about EU
    - What about the rest of the world?  May have to punt :-(
    - Most of what govts are concerned about are not really open source
      vs proprietary issues.  Procurement, vendor availability, quality
      of the system, transition costs, need for retraining (OpenHMIS),
      long-term maintenance costs, etc... Take open source and
      licensing issues off the table, since these buyers don't usually
      negotiate about licensing anyway.  Address functionality and
      support services.  Open source should be about the seventh bullet
      point down (credit Gunnar Hellekson).  But do watch out for
      misconceptions about the availablity of support, quality of UI or
      of admin UI or of back-end implementation.  Advantage of open
      source is data repurposability -- it can better meet reporting
      needs, data quality needs, will tend to use standardized formats,
      etc.
** See Mel Chua's mails
** http://dreamsongs.com/IHE/IHE-62.html
** From Wolf Peuker
   Date: Tue, 02 Oct 2012 10:58:11 +0200
    
   First, I was working on the IRC section, there was a list of
   open source pastebin sites (gray box):
    http://producingoss.com/en/irc.html
   What do you think on Gist https://gist.github.com/ as run by GitHub?
   Is it popular? Should it be in the list?
    
   Second, I translated RSS section into German. There were some readers
   mentioned. I think modern mail clients or browsers can be used to.
   I don't know if it's really popular, but I read RSS only within
   Thunderbird, my mail client. Should this be made explicit?
** From Wolf
   Date: Tue, 02 Oct 2012 17:23:34 +0200
   Hi Karl,
   here you predict it, now it's become true ;-)
   > (no Git, at least not yet)
   http://producingoss.com/en/web-site.html#canned-hosting-choosing
   ...but I think this should be updated.
*** note that web-based presentation of diffs on Google Code is
    thought ugly by some; compare to SF or GitHub.  GitHub has
    commenting on commits (line-based if nessesary!), though, and it's
    fast too.
** From Kit Plummer
   From: Kit Plummer
   Subject: Re: [mil-oss] November mil-oss Book Club
   To: mil-oss
   Date: Mon, 5 Nov 2012 07:32:09 -0700
    
   Very cool Karl.  On the topic of [1] I hope that the intent is to
   discuss the value of DVCS and not necessarily Github specifically.
    
   When I first read the book (back in '05), the biggest challenge for me
   wasn't the tactics of running an open source project, but the
   complexities associated with cultural requirements at executive,
   project management and engineering levels.  I'd love to see a section
   in "Setting the Tone" identify with this a bit.  I know you've covered
   well the "change" as it affects developers…
    
   Thanks.
   Kit
** David Eaves's "Science of Community Management"
   http://eaves.ca/2012/11/15/making-bug-fixing-more-efficient-and-pleasant-this-made-me-smile/
   http://www.youtube.com/watch?v=TvteDoRSRr8
** Look at this Dr. Dobbs piece.
   http://www.drdobbs.com/jvm/creating-an-open-source-project/240145389
** "Bus Factor"
   (suggested by Philip Olson <philip {_AT_} roshambo.org>, later a KS pledger)
** Importance of real-life events (conferences, code sprints, hackathons, etc)
   From http://keimform.de/2007/freie-software-produzieren/ (translated):
   What is also missing, the importance of real-life events, ie
   conferences, code sprints, Doc sprints, work camps, etc. From my
   perspective and experience are such meetings for the social process
   in an active community is very important.
** http://gabriellacoleman.org/Coleman-Coding-Freedom.pdf
** Open Source Software Licenses versus Business Models (Stephen Walli)
   http://www.networkworld.com/community/node/82215
   Also this by Stephen:
   http://www.outercurve.org/Blogs/EntryId/77/Which-Open-Source-Software-License-Should-I-Use
** Check out Simon's columns, of course.
** "Open source policy no guarantee governments will actually use open source" from FierceGovIT
** Look over mil-oss posts in general
*** "Resources for info on why *companies* should *produce* OSS?"
    Thread with David Wheeler and Camille, among others.  Useful section for the book?
** http://www.bitsandbuzz.com/article/which-open-source-license/
** Journalists (e.g., using NYC financial transparency site) need their
   questions and bug reports embargoed.  In general, there may be a
   need for bug curation, editing assistance, delay, consolidation,
   etc.  This is just one example, and it's not only journalists.
** Dustin Mitchell's comments:
   https://plus.google.com/u/0/105883044168332773236/posts/GPEj7Rm4C3w
** See comment from Agog Labs on Kickstarter project page.
** Mark Atwood re Open Stack
** One Kickstarter reader asked:
   "Will you be going into greater detail about managing cultural
   issues in open source projects, like trolls, doxing, sexism,
   harassment, or bullying?"
** Bastien suggests:
   PS: I received your email while reading this blog post by Samuel
   Klein (sj) about Wikipedia' Article Feedback Tool.  I thought you
   might enjoy this as a case-study -- but not sure it is relevant
   to your topic.
   http://blogs.law.harvard.edu/sj/2013/02/02/edit-by-edit-an-article-feedback-tool-gets-firmly-tested/
** Android as a model.  (See also TDF call notes.)
** Vitorio Miliano asks (8 Feb 2013)
   Will you be going into greater detail about managing cultural
   issues in open source projects, like trolls, doxing, sexism,
   harassment, or bullying?
   (responded "yes")
** Cornelius Schumacher volunteered to discuss KDE.
** Don't have a "Community" tab
   E.g., http://gitlab.org/
** Presentation
   https://speakerdeck.com/conroy/building-open-source-communities
   Note it talks about github + pull requests *and* about commit access.
   Kind of proves the point that commit access is a social concept,
   not a technical one.
** Noel Hidalgo suggests camps, cons, hackathons, and kickstarting:
   I'd love to see a section in "kick starting" FOSS software & how     
   social media plays an impact within these communities. Additionally, 
   camps, cons, & hackathons should have their own chapter. Knowing how 
   physical engagement plays into online engagement is critical.
 
   Re kickstarting: interview Joey Hess?  Who else?
** Matt Doar suggests stackoverflow-type forums, shared spreadsheets, etc.
   I'd like to see forums and stackoverflow-like sites referred to as
   well as mailing lists
 
   For bug trackers, a paragraph on why email and shared spreadsheets
   such as Google Docs don't usually work well enough for this purpose.
 
   Fields such as as priority and severity should always be clearly
   described or arguments break out when their values get changed
** Keith Casey suggests fewer tool recommendations, more human stuff:
   Other than a brief overview of the tools, I think there's little
   value there simply because they're changing too quickly and it's
   mostly preferences vs right/wrong.
 
   For me, the biggest value of the first edition was the people
   side. Stopping to take a look at *how* a project formed, *why*
   people contribute, how to build some of the good practices, and how
   to document them have been instrumental in how I've approached my
   projects and my job ever since.
 
   Therefore, I'd love to see more on that side of things. What
   strategies have/haven't worked and why or why not? What things
   worked in one culture but completely failed in another?
 
   Policies just don't form out of thin air.. what motivated people to
   write that policy? When things have gone wrong, how did the
   policies work?
 
   What are some projects that forked? What caused the fork? How have
   the efforts continued? Have projects ever merged again? How did the
   team re-form itself around the new project?
 
   (I have about 80 other questions and can share notes from my own
   digging on the above. Feel free to drop me a note: keith at
   caseysoftware.com)
** Conan Reis asks about making money (video game project)
   Your first edition is a great resource. I’ve been reading through it.
 
   I have a project (a video game programming language) that I have
   been working on and using in the video game industry for almost 2
   decades – as in-house and closed/proprietary. I have been working to
   have it be more wide spread and open source is certainly one of the
   possibilities. I am in the somewhat unusual position of being the
   sole rights holder to it.
 
   I have only worked on proprietary projects my entire career and I am
   looking for additional information and experience so that I know
   what I am getting into and to ensure my intellectual baby is ready
   and properly cared for. [I am planning to have myself and my company
   use and contribute to the Ogre3D project http://www.ogre3d.org/ -
   partly as a means to get some open source contribution experience
   and it really looks cool and I want to use it to make video games.]
 
   I may go for a multi-step process by sticking to proprietary until
   the language has reached a sufficient consumer (not just in-house)
   maturity/polish. Then later (or start with) a dual-licensing scheme
   allowing for the proprietary and open development to co-exist. Then
   jump to full/sole open source.
 
   I really want not-for-profit groups to be able to have access to it
   including open source and academia. I am also thrilled at the
   prospect of getting contribution back to make it even better – for
   myself, my company and everyone that uses it. Though I’m torn with
   the prospect of also trying to raise funding both to work on the
   language itself and as a means of financing other projects – like
   video games. My company could simply charge for support and custom
   work related to the language though competing companies charge
   $50K-$250K for similar game optimized language so it *seems* foolish
   to not pursue this revenue stream.
 
   I’m looking forward to your update shedding additional light on my
   questions.
 
   Thanks already for the previous edition.
 
   Good luck on the writing and the research, etc.
 
   - Conan Reis, President of Agog Labs
** The Pull Request Hack
   http://felixge.de/2013/03/11/the-pull-request-hack.html  
   Note it uses the phrase "commit access" hah.
** Open Source for Government, by Ben Balter
   http://ben.balter.com/open-source-for-government/
   Also has a "Committer Status" section, again showing that
   "committer" means something broader than what the Git notion of the
   verb "commit" would imply.
** Bug growth analogy to national debt
** Does POSS cover time-based release vs feature-based release?
** Supporting drive-by contributors.
   E.g., the [Re: (0 <= i && i < N) is not "backwards"] thread on emacs-devel,
   started by Paul Eggert on 24 (?) March 2013.
**** Also relevant as a bikeshed example!
** Measuring how long it takes to respond to a PR
   http://quickpeople.wordpress.com/2013/04/14/a-plea-for-better-open-source-etiquette/
   See comment from Jorge of Ubuntu, for example, referring to:
   http://reqorts.qa.ubuntu.com/reports/sponsoring/index.html
** Inner-sourcing, "community source", and other half-source things
   Inner sourcing isn't really like open source: the actors are
   ultimately all part of the same hierarchical authority structure, so
   true permissionless initiative is hard to achieve, and it also fails
   the "portable résumé" test -- you can't take the code with you, so
   you can still be alienated from your work, so some of the motivation
   to invest personally is gone.
** Stephen Walli's excellent post (16 July 2013):
   "Patterns and Practices for Open Source Software Success"
   http://stephesblog.blogs.com/my_weblog/2013/07/patterns-and-practices-for-open-source-software-success.html
** SourceForge: "How far the mighty have fallen"
   http://www.gluster.org/2013/08/how-far-the-once-mighty-sourceforge-has-fallen/
** For "Open Source and the Organization" chapter
   Identity issues: corporate hats, GNOME practice of using personal
   addresses.
** David Wheeler on SourceForge/Allura and canned hosting
   From: "Wheeler, David A"
   Subject: RE: [mil-oss] Binary hosting alternatives with GitHub
   To: mil-oss
   Date: Mon, 29 Jul 2013 11:29:45 -0400
   
   SourceForge has nice suite of collaboration tools, and continues to
   host binaries.  I like their newer system, Allura, in part because it
   is *itself* open source software.
   
   Also, there are government agreements with SourceForge that might
   avoid help some of the challenges when using other sites.
** "How Do Open Source Communities Govern Themselves?"
   http://randyfay.com/node/120 <2012-03-05 Mon>
** Bryan Cantrill, "Corporate Open Source Anti-Patterns"
   http://joyeur.com/2012/08/01/lessons-from-an-open-source-veteran/
   http://www.slideshare.net/bcantrill/corporate-open-source-antipatterns
** How to handle the worry about offering infinite support
   Many orgs (esp non-profits and gov't customers and their
   contractors) worry about the degree to which they might be required
   to engage & meet expectations of third parties, e.g., in responding
   to questions in public forums, in meeting roadmap deadlines, feature
   goals, etc.  This is especially true when the project is open source
   from the start.  Answer is to clearly define & agree on what
   obligations are: paying customers come first, and then make a
   conscious choice about controlling the other costs.
 
   Explicitly follow up in public forums to say "We're heads-down
   working on features right now [or whatever], but there was this
   thread from so-and-so a few months ago that might have an answer.
   [link] So-and-so, do you have anything to add?"  over to community
   experts.
** Don't throw away history! (Ben Balter's CMSgov/healthcare.gov issue)
   https://github.com/CMSgov/healthcare.gov/issues/12 
** Overloaded maintainer pattern.  Solutions: delegate, monetize.
   Capistrano maintainer Lee Hambley gets frustrated with workload.
   https://groups.google.com/forum/#!topic/capistrano/nmMaqWR1z84
** Including third-party dependencies with your distribution.
   Discuss the options.
** Announce list subscription care
   Note the cultural point that auto-subscription is not okay in open
   source projects.  Everyone should explicitly sign up for every
   mailing list they become a member of.  It doesn't mean they have to
   do so through a list subscription interface, it just means that
   however they did it, it was opt-in not opt-out.  No subscribing
   people just because they happened to correspond with you.
** Do a general link check.
*** Check where http:// URLs can be https://, use the latter where possible.
*** CDT spam report dead link bug filed (for link in Chapter 3).
    Latest update: they're supposed to let me know whether the link can
    now be relied on (see thread in "cdt" mail folder).
   
    Filed this via https://www.cdt.org/contact on [2013-12-18]:
 
    Hi.  The page
    https://www.cdt.org/pr_statement/cdt-releases-new-report-origins-spam
    links to three pages under "Supporting Documents", all of which get
    "Page Not Found" errors:
   
      http://cdt.org/speech/spam/
      http://cdt.org/speech/spam/030319spamreport.shtml
      http://cdt.org/speech/spam/030319spamreport.pdf
   
    Can that spam report be restored to the CDT web site and the links fixed?
   
   Thank you,
   -Karl Fogel
** "Ask Slashdot: Where Do You Get (or Share) News About Open Source Projects?"
   http://developers.slashdot.org/story/14/07/26/2238223/ask-slashdot-where-do-you-get-or-share-news-about-open-source-projects?utm_source=rss1.0mainlinkanon&utm_medium=feed
** "Community editions" vs "commercial edition" terminology rant.
   Was a star note at the top of Chapter 10 (Legal).  But is that
   chapter the right place for that?
** The problem isn't money, it's monopoly.
   Add a section about the distinction between commercial use and
   proprietary use.  See email of [2014-10-06] with Subject line 
   "License question" and MID <87oatpdwbb.fsf@ktab.red-bean.com>.
** "Measure your open source community's age to keep it healthy"
   Your data is telling you what you need to know about turnover and age
   by Jesus M. Gonzalez-Barahona | @jgbarah | October 16, 2014 
   http://radar.oreilly.com/2014/10/measure-your-open-source-communitys-age-to-keep-it-healthy.html
 
* Web site and build infrastructure
** BUG: DocBook->PDF via FOP continually breaks, totally unmaintainable.
   Wow, I'm so tired of this.  In theory, DocBook is convertible to PDF.
   In practice, you need a team of NASA scientists to get it working.
   At least, the method used in 'lang-makefile' here, with Apache FOP,
   has never stayed working for more than a year at a time as far as I
   can remember.  http://www.dpawson.co.uk/docbook/tools.html has some
   alternatives; search for "Off the top of my head, I know of the
   following ways to transform DocBook XML into PDF, with open
   source/free/semi-free software".  See also
   http://www.scons.org/doc/HTML/scons-user.html#b-DocbookPdf,
   and http://lwn.net/Articles/661778/ re 'dblatex'.
** BUG: Why is the output="printed" conditional not working?
   For example, in Chapter 8 there is this conditional:
 
     (see <xref linkend="trademarks"/><phrase output="printed">
     in <xref linkend="legal"/></phrase>)
   
   and yet the HTML output produces (with links, of course) this...
 
     (see the section called “Trademarks” in Chapter 10, Licenses,
     Copyrights, and Patents),
 
   ...in en/forks.html.  What's up with that?

** BUG: Why are we getting this warning on every commit:
   "Warning: post-commit hook failed (exit code 1) with no output."
** Explanation of POSS web site to ORM et al
   The online version has some properties that I'd like to maintain -- the
   most important is probably the human-readable anchor names, for example:
   
     http://producingoss.com/en/forks.html#forks-handling
   
   It's not just that they're human-readable, it's that they stay stable no
   matter how content moves around.  I could move the material about forks
   to a completely different chapter, but the URL would stay the same (and
   when someone went to it directly online, they would automatically be in
   the right chapter when they got there, whatever chapter it is).
   
   Out on the Net, people refer to particular parts of the book using those
   section & anchor names.  So I can't afford to break those.
