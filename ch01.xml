<chapter id="pfs-ch-1">

<title>Introduction</title>

<simplesect>

<para> Free software has been called a programming methodology, a
political movement, and, most recently, a business strategy.  It is
all of these things, but it is also something more: it is a culture.
It has its particular norms and conventions; it rewards certain
behaviors and punishes others; it has distinct (and sometimes
counterintuitive) concepts of rudeness and politeness.  While it is by
no means monolithic &mdash; in fact it sometimes seems more prone to
internal dissent and factionalism than most geographically bound
cultures &mdash; it <emphasis>does</emphasis> have a recognizable,
dependable core.  A person who understands this core can travel far
and wide in the open source world, encountering many local variations
in custom and dialect, and yet be able to participate effectively
everywhere.  </para>

<para>
blah blah blah.  writing is hard, let's go shopping.  Direction from here:
</para>

<screen>
This is a culture by choice.

Therefore to operate successfully in it, you have to not only
understand the culture, you have to understand why people choose to
be in it.

You also have to be careful not to exoticize it or believe the myths,
like some paradisical vacation island depicted on brochures.  The NYT
and NPR and whatnot may be running breathless articles and ads
(mention that Novell ad), but that doesn't mean the myths are true.
Segue into the myth-dispelling portion of the outline.

[Then basically follow the outline.]
</screen>


<screen> In twelve years, I've seen a lot of free software projects
fail.  This is not because I have an especially sensitive nose for
finding failures.  It's because most projects fail.  Failure is the
norm.  If I had to summarize the most common reasons for failure,
they would be:

   - failures of cultural navigation
   - failures of psychology (failure to place oneself in contributor's head)

Technical reasons would come last.  [refer to Aramis here?]
</screen>


<screen>
point out how training people to be "skilled" in the culture is not a
zero sum game.  I've always hated those books that claim to teach you
how to "get ahead" of the competition (for example, how to win at
tennis, how to win at arguments, etc) (and wondered why anyone writes
them).  It's logically impossible for everyone to be ahead.

But with cooperative positive-sum systems like free software, it *is*
possible.  The more people are skilled at navigating this culture, the
better off the culture is.  Or, put another way, if *you* learn this
culture, *I* benefit -- and the more of it you do, the better off I
am / we all are.  </screen>

</simplesect>


<!-- ======================== SECTION 1 ============================== -->
<sect1 id="pfs-ch-1-sect-1">
<title>History</title>
<para> todo</para>
</sect1>


<!-- ======================== SECTION 2 ============================== -->
<sect1 id="pfs-ch-1-sect-2">
<title>Basics</title>
<para> todo </para>
</sect1>

</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
