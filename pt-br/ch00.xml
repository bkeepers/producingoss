<preface id="preface">
<title>Prefácio</title>
  
<!-- ======================== SECTION ============================== -->
<sect1 id="why">
<title>Por quê escrever este livro?</title>

<para>Nas festas que participo agora, as pessoas não mais fazem
uma cara de espanto quando eu digo que desenvolvo software livre.
"Ah sim, software livre&mdash;como o Linux?" elas dizem. Prontamente
respondo: "Sim, exatamente! É isto que eu faço."
É bom não me sentir mais completamente um estranho. No passado, a próxima
questão era altamente previsível: "Como você ganha dinheiro com
isto?". Para responder, eu resumia a economia do código aberto:
que existem organizações as quais os interesses são de que certos
software existam, mas eles não precisam vender cópias, eles somente
precisam ter certeza de que o software está disponível e sendo 
mantido, como uma ferramenta, não como uma mercadoria.</para>

<para>Ultimamente, entretanto, a pergunta seguinte não tem sempre sido sobre
dinheiro. O modelo de negócios para Software Livre e de Código
Aberto<footnote><para>Os termos "Código Aberto" e "Livre", neste contexto,
são essencialmente sinônimos. Eles são discutidos em mais detalhes em 
<xref linkend="free-vs-open-source"/><phrase output="printed"> na
<xref linkend="introdução"/></phrase>.</para></footnote> não é mais tão
misterioso e muitos não-programadores já entendem ou, pelo menos, não se
surpreendem em ver gente empregada em tempo integral com isto. Ao invés
disto, a pergunta que eu tenho ouvido com mais frequência é "<emphasis>Uau,
como isto dá certo?</emphasis>"</para>

<para>Eu não tinha uma resposta satisfatória pronta e cada vez que eu me
empenhava mais em produzir uma, mais eu percebia a complexidade deste
assunto. Tocar um projeto de Software Livre não é exatamente como
gerenciar um negócio (imagine ter que negociar constantemente sobre a
natureza do seu produto com um grupo de voluntários, a maioria dos quais
você nunca encontrou pessoalmente!). Também não é, por diversos motivos,
o mesmo que manter uma organização sem fins lucrativos, nem um governo. Há
similaridades com todas estas coisas mas eu cheguei lentamente à conclusão
de que Software Livre é <foreignphrase>sui generis</foreignphrase>. Há
várias coisas com as quais isto pode ser eficientemente comparado mas
nenhuma com a qual possa ser equiparado. De fato, o simples fato de se
assumir que projetos de Software Livre possam ser "tocados" é uma falácia.
Um projeto de Software Livre pode ser <emphasis>iniciado</emphasis> e ser
influenciado por interessados, frequentemente de forma bastante forte. Mas
seus resultados não podem ser transformados em propriedade de nenhum único
dono e, enquanto houver gente em algum lugar, &mdash;qualquer lugar&mdash;,
interessada em dar continuidade, ele não poderá ser encerrado
unilateralmente. Todos tem poder infinito, ninguém tem força. Isto gera uma
dinâmica interessante.</para>

<para>Este foi o motivo pelo qual eu quis escrever este livro. Projetos de
Software Livre evoluiram uma cultura distinta, uma moral na qual a liberdade
de fazer o software e realizar qualquer coisa que se deseje é o foco, e ainda
assim o resultado desta liberdade não é uma dispersão de indivíduos cada
um indo em direções separadas com o código, mas sim uma entusiasmada
colaboração. De fato, competencia na própria colaboração é uma das mais
valiosas habilidades em Software Livre. Gerenciar estes projetos é como se
engajar em uma espécie de cooperação hipertrofiada, onde a habilidade não só
de trabalhar com outros mas de produzir novas formas de colaboração, podem
resultar em benefícios tangíveis para o software. Este livro tenta descrever
as técnicas pelas quais isto pode ser feito. Ele não é de forma nenhuma
completo mas é pelo menos um início.</para>

<para>Software Livre de qualidade é uma meta valiosa por si só e eu espero
que leitores que procurem meios de se obter isto, se satisfaçam com o que
encontrarão aqui. Mas, além disto, eu espero também transmitir algo sobre o
puro prazer de se ter em trabalhar com uma equipe motivada de
desenvolvedores de Código Aberto e em interagir com usuários na forma
maravilhosamente direta que o Código Aberto promove. Participar de um
projeto de sucesso de Software Livre é <emphasis>divertido</emphasis> e, em
última instância, o que mantém o sistema todo funcionando.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="audience">
<title>Quem deve ler este livro?</title>

<para>
Este livro é dirigido a desenvolvedores de software e gestores que
estejam considerando iniciar um projeto de software livre ou que tenham
iniciado um e estejam cogitando o que fazer agora. Ele também deve ser útil
para quem queira apenas participar de um projeto de software livre mas nunca
tenha feito isto antes.
</para>

<para>
O leitor não precisa ser um programador mas deve conhecer os conceitos
básicos de engenharia de software, como código fonte, compiladores e
patches.
</para>

<para>
Não é necessária nenhuma experiência anterior com software livre, seja como
desenvolvedor ou como usuário. Quem já participou de projetos de software
livre antes provavelmente achará um pouco óbvias pelo menos algumas partes
do livro e poderão querer salta-las. Por causa da potencialmente grande e
variada experiência da audiência, eu fiz um esforço para nomear claramente
os capítulos, identificando o que pode ser saltado pelos que já tem
conhecimento do conteúdo.
</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="sources">
<title>Fontes</title>

<para>Grande parte da matéria-prima para este livro é fruto de cinco anos de
trabalho no projeto Subversion (<ulink url="http://subversion.tigris.org/"/>).
Subversion é um sistema de controle de versão, livre e de código aberto,
original e destinado a substituir o CVS como o <foreignphrase>de facto</foreignphrase> 
Sistema de Controle de Versão da comunidade de software livre e de código
aberto. O projeto foi iniciado por meu empregador, CollabNet 
(<ulink url="http://www.collab.net/"/>), no início do ano 2000 e,
felizmente, CollabNet entendeu de imediato que ele deveria ser tocado como
um esforço verdadeiramente colaborativo e distribuido. Tivemos muitos
desenvolvedores voluntários desde o início, hoje somos em torno de 50
desenvolvedores no projeto, dos quais apenas poucos são funcionários da
CollabNet.
</para>

<para>
Subversion é, em muitos aspectos, um exemplo clássico de um projeto de
software livre e de código aberto e eu acabei me baseando nele mais do que
eu esperava inicialmente. 
Isto foi parcialmente uma questão de conveniência: Sempre que eu precisava
de um exemplo de um aspecto específico, eu conseguia me lembrar de cabeça de
algo ocorrido com o Subversion. 
Mas foi também uma questão de verificação. Embora eu esteja envolvido em
outros projetos de software livre em diversos níveis e interagindo com
amigos e conhecidos em muitos outros, nos damos conta rapidamente que, quando
estamos escrevendo algo para ser impresso, as declarações precisam ser
confirmadas por fatos. Eu não quis fazer afirmações sobre eventos de outros
projetos baseado apenas no que eu podia encontrar nos arquivos públicos das
listas de discussão. Sei que se alguém tentasse fazer isto com o Subversion
estaria certo na metade dos casos e errado na outra metade. Assim, quando
precisei buscar inspiração ou exemplos de um projeto com o qual eu não tinha
nenhuma experiência direta, eu tentei primeiramente contactar alguém
envolvido, em quem eu pudesse confiar para explicar o que realmente estava
acontecendo.
</para>

<para>Subversion tem sido meu emprego pelos últimos 5 anos mas tenho me
envolvido com software livre nos últimos 12. Alguns outros projetos que
influenciaram este livro são:
</para>

<itemizedlist>
  <listitem><para>O editor de textos GNU Emacs, da Free Software Foundation,
  projeto no qual mantenho alguns poucos e pequenos pacotes.</para>
  </listitem>
  <listitem><para>Concurrent Version System (CVS), projeto no qual trabalhei
  intensamente em 1994&ndash;1995 com Jim Blandy mas tenho estado envolvido
  apenas ocasionalmente desde então.</para>
  </listitem>
  <listitem><para>A coleção de projetos de software livre e de código aberto
  conhecida como Apache Software Foundation, especialmente o Apache Portable
            Runtime (APR) e o Servidor HTTP Apache.</para> 
  </listitem>
  <listitem><para>OpenOffice.org, o programa de Banco de Dados de Berkeley
  Sleepycat e o programa de Banco de Dados MySql. Não tenho participado
  destes projetos pessoalmente mas tenho acompanhado e, ocasionalmente, me
  comunicado com gente por lá.</para> 
  </listitem>
  <listitem><para>O depurador GNU Debugger (GDB) (como acima).</para>
  </listitem>
  <listitem><para>O projeto da distribuição Debian Linux (como acima).</para>
  </listitem>
</itemizedlist>

<para>Esta, claro, não é uma lista completa. Como a maioria de programadores
Open Source, eu mantenho vínculos leves com diversos projetos diferentes,
apenas para ter uma visão geral sobre as coisas. Não vou relaciona-los todos
aqui mas eles são mencionados no texto quando for o caso.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="acknowledgments">
<title>Agradecimentos</title>

<para>Este livro demorou quatro vezes mais tempo para ser escrito do que eu
pensei que eu esperava e durante grande parte deste tempo eu senti como se
um piano de cauda estivesse suspenso sobre a minha cabeça onde quer que eu
fosse. Sem a ajuda de muitas pessoas, eu não teria sido capaz de termina-lo
sem perder a sanidade.</para>

<para>Andy Oram, meu edito na O'Reilly, foi um sonho de escritor. Além de
conhecer o assunto intimamente (ele sugeriu diversos tópicos), ele tem um
dom raro de saber o que alguém quis dizer e ajudá-lo a encontrar o jeito
certo de como dizer. Foi uma honra trabalhar com ele. Obrigado também a
Chuck Toporek por imediatamente encaminhar esta proposta ao Andy.</para>

<para>Brian Fitzpatrick revisou quase todo o material assim que eu o
escrevia, o que fez não apenas o livro melhor, mas me manteve escrevendo
enquanto eu queria estar em qualquer lugar do mundo ao invés de em frente
ao computador. Ben Collins-Sussman e Mike Pilato também por checar o 
progresso, e estarem sempre dispostos a dicutir&mdash;algumas vezes
longamente&mdash;em qualquer tópico que eu estivesse tentando cobrir
naquela semana. Eles também notaram quando eu diminuia o ritmo, e 
gentilmente me cutucavam quando necessário. Obrigado, rapazes.</para>

<para>Biella Coleman was writing her dissertation at the same time
I was writing this book.  She knows what it means to sit down and
write every day, and provided an inspiring example as well as a
sympathetic ear.  She also has a fascinating anthropologist's-eye view
of the free software movement, giving both ideas and references that I
was able use in the book.  Alex Golub&mdash;another anthropologist
with one foot in the free software world, and also finishing his
dissertation at the same time&mdash;was exceptionally supportive early
on, which helped a great deal.</para>

<para>Micah Anderson somehow never seemed too oppressed by his own
writing gig, which was inspiring in a sick, envy-generating sort of
way, but he was ever ready with friendship, conversation, and (on at
least one occasion) technical support.  Thanks, Micah!</para>

<para>Jon Trowbridge and Sander Striker gave both encouragement and
concrete help&mdash;their broad experience in free software provided
material I couldn't have gotten any other way.</para>

<para>Thanks to Greg Stein not only for friendship and well-timed
encouragement, but for showing the Subversion project how important
regular code review is in building a programming community.  Thanks
also to Brian Behlendorf, who tactfully drummed into our heads the
importance of having discussions publicly; I hope that principle is
reflected throughout this book.</para>

<para>Thanks to Benjamin "Mako" Hill and Seth Schoen, for various
conversations about free software and its politics; to Zack Urlocker
and Louis Suarez-Potts for taking time out of their busy schedules to
be interviewed; to Shane on the Slashcode list for allowing his post
to be quoted; and to Haggen So for his enormously helpful comparison
of canned hosting sites.</para>

<para>Thanks to Alla Dekhtyar, Polina, and Sonya for their unflagging
and patient encouragement.  I'm very glad that I will no longer have
to end (or rather, try unsuccessfully to end) our evenings early to go
home and work on "The Book."</para>

<para>Thanks to Jack Repenning for friendship, conversation, and a
stubborn refusal to ever accept an easy wrong analysis when a harder
right one is available.  I hope that some of his long experience with
both software development and the software industry rubbed off on this
book.</para>

<para>CollabNet was exceptionally generous in allowing me a flexible
schedule to write, and didn't complain when it went on far longer than
originally planned.  I don't know all the intricacies of how
management arrives at such decisions, but I suspect Sandhya Klute, and
later Mahesh Murthy, had something to do with it&mdash;my thanks to
them both.</para>

<para>The entire Subversion development team has been an inspiration
for the past five years, and much of what is in this book I learned
from working with them.  I won't thank them all by name here, because
there are too many, but I implore any reader who runs into a
Subversion committer to immediately buy that committer the drink of
his choice&mdash;I certainly plan to.</para>

<para>Many times I ranted to Rachel Scollon about the state of the
book; she was always willing to listen, and somehow managed to make
the problems seem smaller than before we talked.  That helped a
lot&mdash;thanks.</para>

<para>Thanks (again) to Noel Taylor, who must surely have wondered why
I wanted to write another book given how much I complained the last
time, but whose friendship and leadership of Golos&aacute; helped keep
music and good fellowship in my life even in the busiest times.
Thanks also to Matthew Dean and Dorothea Samtleben, friends and
long-suffering musical partners, who were very understanding as my
excuses for not practicing piled up.  Megan Jennings was constantly
supportive, and genuinely interested in the topic even though it was
unfamiliar to her&mdash;a great tonic for an insecure writer.  Thanks,
pal!</para>

<para>I had four knowledgeable and diligent reviewers for this book:
Yoav Shapira, Andrew Stellman, Davanum Srinivas, and Ben Hyde.  If I
had been able to incorporate all of their excellent suggestions, this
would be a better book.  As it was, time constraints forced me to pick
and choose, but the improvements were still significant.  Any errors
that remain are entirely my own.</para>

<para>My parents, Frances and Henry, were wonderfully supportive as
always, and as this book is less technical than the previous one, I
hope they'll find it somewhat more readable.</para>

<para>Finally, I would like to thank the dedicatees, Karen Underhill
and Jim Blandy.  Karen's friendship and understanding have meant
everything to me, not only during the writing of this book but for the
last seven years.  I simply would not have finished without her help.
Likewise for Jim, a true friend and a hacker's hacker, who first
taught me about free software, much as a bird might teach an airplane
about flying.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="disclaimer">
<title>Aviso</title>

<para>Os pensamentos e opiniões expressas neste livro são de minha
autoria. Eles não representam necessariamente as visões da CollabNet ou
do projeto Subversion.</para>

</sect1>

</preface>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
