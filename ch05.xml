<chapter id="pfs-ch-5">

<title>Communications <!-- [ 20-30 pp] --> </title>

<simplesect>

<para> todo chapter introduction </para>

</simplesect>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-ch-5-sect-1">
<title> Avoiding Common Pitfalls </title>

<para> Avoiding common pitfalls; distinguishing productive threads
from unproductive ones; guiding threads toward usefulness without
being pushy.  </para>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-ch-5-sect-2">
<title> Difficult People </title>

<para> Dealing with difficult/rude participants on mailing lists.
Also, dealing with people who misuse or abuse procedural forms (such
as vetos, voting, filibustering, etc, which sadly
<emphasis>has</emphasis> been known to happen from time to time).  Ask
J about his experiences with you-know-who in this regard.</para>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-ch-5-sect-3">
<title>Codifying Tradition</title>

<para><remark>See <ulink
url="http://subversion.tigris.org/mailing-list-guidelines.html"/> for
an example of mailing list guidelines, talk about which problems such
guidelines can solve and which they can't.  Also, log message
guidelines (if that gets its own section, remember to adjust the xrefs
in Version Control Vocabulary and elsewhere in Chapter 3).  Mention
the parseability concern; point out that it can overdone, too.
Formatting of bug tracker numbers in log messages is an excellent
example of where parseability is an appropriate
concern.  Log message templates.  Make sure that commit reviews apply
to log messages and other "meta" aspects of the commit as well as to
the code itself.</remark></para>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-ch-5-sect-4">
<title>Handling Growth</title>

<para><remark>Dividing into multiple forums.  Key is to make sure the
purpose of each forum is clear, consciously steer people (e.g.,
mailing list crossposts, irc channel redirects) to the right place,
make sure there is no psychological balkanization (lurkers are always
allowed, etc).  Link to guidelines; then, instead of shouting at
people, calmly point them to the guidelines.</remark></para>

<para><remark>The part below was originally in the IRC section in
Chapter 3, but really belongs here.  Open questions: should it be a
separate subsection?  Should it combine mailing lists and IRC, or just
focus on IRC?</remark></para>

<para>As a project gets more popular, it is inevitable that more and
more inexperienced people will show up in the IRC channels.  Although
this is desirable and a sign of success, it will naturally have
destabilizing effects at first.  Longtime channel users will begin to
feel overwhelmed, as the old strategy of individually training each
newcomer in channel conventions fails to scale to the new population
size.  There will be more of a tendency for conversations to drift off
topic and become "noise" as far as the channel's purpose is concerned.
Experienced users may react by venting their frustration, often at
people who had no idea they were doing anything wrong.</para>

<para><remark>Here's how a really busy channel handles it.  Compare
this with the earlier topic example given in Chapter 3:</remark></para>

<screen>
   You are now talking on #linuxhelp
   
   Topic for #linuxhelp is Please READ
   http://www.catb.org/~esr/faqs/smart-questions.html &amp;&amp;
   http://www.tldp.org/docs.html#howto BEFORE asking questions | Channel
   rules are at http://www.nerdfest.org/lh_rules.html | Please consult
   http://kerneltrap.org/node/view/799 before asking about upgrading to a
   2.6.x kernel | memory read possible: http://tinyurl.com/4s6mc ->
   update to 2.6.8.1 or 2.4.27 | hash algo disaster:
   http://tinyurl.com/6w8rf | reiser4 out
</screen>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-ch-5-sect-5">
<title>Conspicuous Use of Archives</title>

<para><remark>The importance of having all communications be logged
and be searchable, with stable references.  Describe the misery that
results when this is not available -- for example, the pain of the
contactor.se/~dast "route around" that resulted from the lossage of
the native tigris.org mail archiver.  Written guidelines vs precedence
is like the distinction between English statutory law and common law.
Good archiving is essential for the same reason.  It's like an oral
tradition with a video camera constantly running.</remark></para>

<para><remark>Perfect example: a named anchor for *every* FAQ
item.</remark></para>

<remark>(Also, get Brian B's story of the FreeBSD IRC archives
here.)</remark>

<para><remark>Redundancy example: ChangeLogs in CVS, 'cvs log', 'svn
log', CIA logs, etc.  Same information, different presentations.
Mention cvs2cl for CVS here?</remark></para>

<sect2 id="pfs-ch-5-sect-5.1">
<title>No Conversations in the Bug Tracker</title>

<para><remark>Note the danger of the bug tracker turning into a
discussion forum, when mailing lists should really be used.  Keep the
mathematical analogy in mind, though this may not be the best way to
describe it in words: the question is, is the discussion potentially
divergent or convergent?  If it's stuff like getting more technical
details from the original reporter, or pointing out a gotcha with a
proposed solution, then it's convergent.  If it's a philosophical
questioning of the bug's justification for being, or if the bug is one
specific case that reveals a much wider problem, then the discussion
might end up divergent, which means it should be on the development
mailing list, and the URL to the thread should be recorded in the bug
when the discussion dies down.  Note that those involved with the bug
may find this laborious, but this is a writer-responsible culture:
more important to make things easy for the tens or hundreds of people
who may read the bug than for the 3 or 5 people writing to
it.</remark></para>

<para><remark>How much to reproduce data in the tracker?  Link to the
mail thread, or cut-and-paste it, or summarize it with some pasting
but then link to thread for details?  The overriding concern should
be convenience of readers.  So, paste all you want, *and* link to the
thread.  Remember, the usual problem of data duplication does not
exist here, because archives are static data anyway.</remark></para>

</sect2>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-ch-5-sect-6">
<title> Open vs Private Interactions </title>

<para>When to operate overtly, when to operate behind the scenes.</para>

<para><remark>(Give the example of bouncing a review back to Mike (or
was it Ben?) to have them post it, so the exchange could be public,
even though we were sitting right next to each other.)</remark></para>

</sect1>


<!-- ======================== SECTION ============================== -->
<sect1 id="pfs-ch-5-sect-7">
<title> Internal vs External Communications </title>

<para> Internal vs external communications.  In free software
projects, there tends to be a smooth continuum between purely internal
discussions and public relations statements.  Discuss how to navigate
this continuum.  Describe how to hook into the standard real-time news
distribution forums (RSS, CIA, etc), and the meta-distribution sites
such as Freshmeat.  </para>

</sect1>


<!-- This used to be in Chapter 2.  It's not really about
     communications either, but where is a better place?  Should it
     be cut entirely? 

   Understanding potential volunteers' motivations will help you set
   things up to attract them.  You can't build the lamp until you know
   what frequencies of light the moths are attracted to.  Oh, wait,
   maybe that's not such a good metaphor...

   For example, talk about the sharp distinction between those who
   were interested in reaching 1.0 versus those who were interested in
   adding new features to Subversion.  (Philip, Ghudson, etc.)
-->

</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
