<chapter id="legal">
<!--
<title>Licenses, Copyrights, and Patents</title>
-->
<title>ライセンス、著作権、特許</title>

<simplesect>

<!--
<para>The license you select probably won't have a major impact on the
adoption of your project, as long as the license is open source.
Users generally choose software based on quality and features, not on
the details of the license.  Nevertheless, you still need a basic
understanding of free software licensing issues, both to ensure that
the project's license is compatible with its goals, and to be able to
discuss licensing decisions with other people.  Please note, however,
that I am not a lawyer, and that nothing in this chapter should be
construed as formal legal advice.  For that, you'll need to hire a
lawyer or be one.</para>
-->

<para>
    あなたが選ぶライセンスは、それがオープンソースである限り、
    プロジェクトで採用するにあたって大きな影響を与えないはずです。
    ユーザーは、ソフトウェアを機能や質を見て選ぶことが一般的で、
    ライセンスの詳細を見て選んだりはしません。それでも、
    プロジェクトが採用するライセンスが目的に確実に合ったものにすることと、
    ライセンスに関する決定を他の人と議論できるようにするために、
    フリーソフトウェアのライセンス問題に関する基本的なことがらはやはり理解する必要があります。
    しかしながら私は法律家ではないですし、この章の内容も、
    法的なアドバイスを正式に受けて書いているわけではないことに注意してください。
    そうするには、法律家を雇うか、あなた自身が法律家になる必要があるでしょう。 
</para> 

</simplesect>

<!-- ======================== SECTION ============================== -->
<sect1 id="licenses-terminology">
<!--
<title>Terminology</title>
-->
<title>使用する用語</title>

<!--
<para>In any discussion of open source licensing, the first thing that
becomes apparent is that there seem to be many different words for the
same thing: <firstterm>free&nbsp;software</firstterm>,
<firstterm>open&nbsp;source</firstterm>,
<firstterm>FOSS</firstterm>, <firstterm>F/OSS</firstterm>, and
<firstterm>FLOSS</firstterm>.  Let's start by sorting those
out, along with a few other terms.</para>
-->

<para>
    オープンソースライセンスについて議論するときにまず明らかになることは、
    同じ意味を持つ異なる単語がたくさんあるらしいということです。
    たとえば <firstterm>フリーソフトウェア</firstterm>、
    <firstterm>オープンソース</firstterm>、<firstterm>FOSS</firstterm>、
    <firstterm>F/OSS</firstterm>、そして <firstterm>FLOSS</firstterm> です。
    ここでは、そうした用語を他の言葉と一緒に整理することにしましょう。
</para>

<variablelist>
  <!--
  <varlistentry><term><firstterm>free software</firstterm></term>
  -->
  <varlistentry><term><firstterm>フリーソフトウェア</firstterm></term>

    <listitem>
              <!--
              <para>Software that can be freely shared and modified,
              including in source code form.  The term was first
              coined by Richard Stallman, who codified it in the GNU
              General Public License (GPL), and who founded the Free
              Software Foundation (<ulink url="http://www.fsf.org/"/>)
              to promote the concept.</para>
              -->

              <para>
                  ソースコードを自由に共有し、
                  かつ変更を加えることができるソフトウェアのことです。
                  この用語は リチャード・ストールマン がはじめに作り、
                  GNU General Public Licence (一般公衆利用許諾契約書、
                  以下 GPL) に盛り込みました。
                  そして Free Software Foundation (フリーソフトウェア財団、
                  以下 FSF、<ulink url="http://www.fsf.org/"/>)
                  を設立してこの概念を広めたのです。
              </para>

              <!--
              <para>Although "free software" covers almost exactly the
              same range of software as "open source", the FSF, among
              others, prefers the former term because it emphasizes
              the idea of freedom, and the concept of
              freely redistributable software as primarily a social
              movement rather than a technical one.  The FSF
              acknowledges that the term is ambiguous&mdash;it could
              mean "free" as in "zero-cost", instead of "free" as in
              "freedom"&mdash;but feels that it's still the best term,
              all things considered, and that the other possibilities
              in English have their own ambiguities.  (Throughout this
              book, "free" is used in the "freedom" sense, not the
              "zero-cost" sense.)</para>
              -->
              
              <para>
                  「フリーソフトウェア」という用語は、
                   ソフトウェア の範疇では「オープンソース」とほとんど同じ意味です。
                   しかし、とりわけ FSF は前者を好みます。なぜなら、
                  「フリーソフトウェア」の方が、自由という考え方や、
                   技術的な流行ではなくて何より社会運動としての、
                   自由に再配布可能なソフトウェア、
                   という考えを強調しているからです。
                   FSF は、「フリー」という単語が &mdash; 「自由」ではなく、
                  「コストがかからない」、と解釈され得るという意味で
                   &mdash; 曖昧なものだと認めています。
                   しかしながら色々考えてみて、
                   フリーという単語がやはり一番だと考えていますし、
                   他の英単語にも曖昧な部分があるとも考えています。
                   (本書では、「フリー」という単語を「コストがかからない」という意味ではなく、
                   「自由」という意味で使っています。)
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term><firstterm>open source software</firstterm></term>
  -->
  <varlistentry><term><firstterm>オープンソースソフトウェア</firstterm></term>

    <listitem>
              <!--
              <para>Free software under another name.  But the
              different name reflects an important philosophical
              difference: "open source" was coined by the Open Source
              Initiative (<ulink url="http://www.opensource.org/"/>)
              as a deliberate alternative to "free software," in order
              to make such software a more palatable choice for
              corporations, by presenting it as a development
              methodology rather than a political movement.  They may
              also have wanted to overcome another stigma: that
              anything "free" must be low quality.</para>
              -->

              <para>
                  フリーソフトウェア の別名です。しかしながら、
                  この名前の違いは重要な哲学の違いを反映しています。
                  「オープンソース」という単語は、Open Source Initiative
                  (オープンソース・イニシアティブ、以下 OSI。 <ulink url="http://www.opensource.org/"/>) が
                  社会運動よりはむしろ開発の方法論としての意味を強調することで、
                  フリーソフトウェアをより企業が受け入れやすくするために作りました。
                  OSI は「フリー」という言葉を使うことで、
                  低品質に違いないと思われてしまう点も克服したかったのかもしれません。
              </para>

              <!-- 
              <para>While any license that is free is also open
              source, and vice versa (with a few minor exceptions),
              people tend to pick one term and stick with it.  In
              general, those who prefer "free software" are more
              likely to have a philosophical or moral stance on the
              issue, while those who prefer "open source" either don't
              view it as a matter of freedom, or are not interested in
              advertising the fact that they do.  See
              <xref linkend="free-vs-open-source"/><phrase
              output="printed"> in
              <xref linkend="introduction"/></phrase> for a more
              detailed history of this schism.</para>
              -->

              <para>
                  フリーなライセンスはオープンソースでもあり、
                  (2,3 の小さな例外を除き) 逆も同じことが言えますが、
                  人々はひとつの用語を取り上げてそれに固執しがちです。
                  一般的に、「フリーソフトウェア」を好む人たちは「フリー」が持つ意味について、
                  哲学的、または道徳的な立場を好むのに対して、
                 「オープンソース」を好む人たちはそれが「自由」に関する問題だとは考えませんし、
                 「フリーソフトウェア」を好む人の考え方を広めることにも興味がありません。
                  この二つの用語に関する分裂の歴史については、
                  <phrase output="printed"><xref linkend="introduction"/> の </phrase>
                  <xref linkend="free-vs-open-source"/> を参照してください。
              </para>

              <!--
              <para>The Free Software Foundation has an
              excellent&mdash;utterly unobjective, but nuanced and
              quite fair&mdash;exegesis of the two terms, at <ulink
   url="http://www.fsf.org/licensing/essays/free-software-for-freedom.html"/>.
              The Open Source Initiative's take on it is spread across
              two pages: <ulink
   url="http://www.opensource.org/advocacy/case_for_hackers.php#marketing"/>
              and <ulink
   url="http://www.opensource.org/advocacy/free-notfree.php"/>.</para>
              -->

              <para>
                  FSF は &mdash; 私の完全な主観ですが、微妙ながら極めて公平という意味で &mdash;
                  これらの二つの用語について優れた解釈を
                  <ulink url="http://www.fsf.org/licensing/essays/free-software-for-freedom.html"/>
                  で示しています。OSI は、自らの解釈を2ページに分けて紹介しています。:
                  <ulink url="http://www.opensource.org/advocacy/case_for_hackers.php#marketing"/> と
                  <ulink url="http://www.opensource.org/advocacy/free-notfree.php"/> です。
              </para>
    </listitem>
  </varlistentry>

  <varlistentry><term><firstterm>FOSS</firstterm>,
                      <firstterm>F/OSS</firstterm>,
                      <firstterm>FLOSS</firstterm></term>

    <listitem>
              <!--
              <para>Where there are two of anything, there will soon
              be three, and that is exactly what is happening with
              terms for free software.  The academic world, perhaps
              wanting precision and inclusiveness over elegance, seems
              to have settled on FOSS, or sometimes F/OSS, standing
              for "Free / Open Source Software".  Another variant
              gaining momentum is FLOSS, which
              stands for "Free / Libre Open Source Software"
              (<foreignphrase>libre</foreignphrase> is familiar in
              many languages and does not suffer from the ambiguities
              of "free"; see
              <ulink url="http://en.wikipedia.org/wiki/FLOSS"/> for
              more).</para>
              -->

              <para>
                  二つあるものが三つになる。
                  これは「フリーソフトウェア」という用語で起こっていることと全く同じです。
                  学問の世界では、
                  言葉の上っ面の美しさよりも正確さと包括性を求めて、
                  "Free / Open Source Software" を表す FOSS
                  や F/OSS に移っているようです。
                  勢いがある別の表現として、
                  "Free / Libre Open Source Software" があります。
                  (<foreignphrase>libre</foreignphrase>
                  (訳注: フランス語で「自由」) という単語は、
                  多くの言葉に存在していながら、「フリー」が持つ曖昧な意味がありません。
                  詳しくは <ulink url="http://en.wikipedia.org/wiki/FLOSS"/>
 を参照してください。)
              </para>

              <!--
              <para>All these terms mean essentially the same thing:
              software that can be modified and redistributed by
              everyone, sometimes&mdash;but not always&mdash;with the
              requirement that derivative works be freely
              redistributable under the same terms.</para>
              -->

              <para>
                  これらの用語は全て、本質的には同じ意味です。
                  改造し、万人が配布できますが、時に
                  &mdash; 必ずしも常にそうであるわけではないですが
                  &mdash; 派生したものについては、
                  オリジナルの配布条件と同条件で自由に配布することを求めることがあるソフトウェアのことなのです。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term><firstterm>DFSG-compliant</firstterm></term>
  -->
  <varlistentry><term><firstterm>DFSG 互換の ...</firstterm></term>
    <listitem>
              <!--
              <para>Compliant with the Debian Free Software Guidelines
              (<ulink
              url="http://www.debian.org/social_contract#guidelines"/>).
              This is a widely-used test for whether a given license
              is truly open source
              (free, <foreignphrase>libre</foreignphrase>, etc.).  The
              Debian Project's mission is to maintain an entirely free
              operating system, such that someone installing it need
              never doubt that she has the right to modify and
              redistribute any or all of the system.  The Debian Free
              Software Guidelines are the requirements that a software
              package's license must meet in order to be included in
              Debian.  Because the Debian Project spent a good deal of
              time thinking about how to construct such a test, the
              guidelines they came up with have proven very robust
              (see <ulink url="http://en.wikipedia.org/wiki/DFSG"/>),
              and as far as I'm aware, no serious objection to them has
              been raised either by the Free Software Foundation or
              the Open Source Initiative.  If you know that a given
              license is DFSG-compliant, you know that it guarantees
              all the important freedoms (such as forkability even
              against the original author's wishes) required to
              sustain the dynamics of an open source project.  All of
              the licenses discussed in this chapter are
              DFSG-compliant.</para>
              -->

              <para>
                  Debian フリーソフトウェアガイドライン (以下 DFSG、<ulink url="http://www.debian.org/social_contract#guidelines"/>) と互換性があるライセンスのことです。
                  DFSG 互換かどうかは、
                  特定のライセンスが本当の意味でのオープンソース
                  (フリー、自由) かどうかを確認する基準として広く使われています。
                  Debian プロジェクトの任務は、
                  システムの一部または全部を改変、
                  再配布する権利があるかどうかを疑わずにインストールできる、
                  全体がフリーなオペレーティングシステムを維持することです。
                  DFSG は、Debian にソフトウェアを含める際に、
                  そのライセンスが満たさなければならない基準となります。
                  Debian プロジェクトは、
                  DFSG の基準を満たしているかを確認するやり方を考えるのに多くの時間を割いてきました。
                  よって、彼らが考えたガイドラインは非常に堅固で、
                  私が知る限りでは、
                  FSF からも OSI からも強く異議を唱えられたことはありません。
                  特定のライセンスが DFSG 互換であることがわかれば、
                  (オリジナルの作者の意に反してでもコードを派生させられること、のような)
                  オープンソースプロジェクトの力学を維持するのに必要なすべての「自由」を、
                  そのライセンスが保証していることになります。
                  この章で議論しているすべてのライセンスは DFSG互換です。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term><firstterm>OSI-approved</firstterm></term>
  -->
  <varlistentry><term><firstterm>OSIの承認を得た ...</firstterm></term>

    <listitem>
              <!--
              <para>Approved by the Open Source Initiative.  This is
              another widely-used test of whether a license permits
              all the necessary freedoms.  The OSI's definition of
              open source software is based on the Debian Free
              Software Guidelines, and any license that meets one
              definition almost always meets the other.  There have
              been a few exceptions over the years, but only involving
              niche licenses and none of any relevance here.  Unlike
              the Debian Project, the OSI maintains a list of all
              licenses it has ever approved, at
              <ulink url="http://www.opensource.org/licenses/"/>, so
              that being "OSI-approved" is an unambiguous state: a
              license either is or isn't on the list.</para>
              -->

              <para>
                  OSI が認めたライセンスということです。
                  これは特定のライセンスが、
                  必要とされている自由をすべて満たしているかどうかを確かめるのに広く使われているもう一つの基準です。
                  OSI が定義しているオープンソースソフトウェアの定義は、
                  DFSG を基にしており、
                  この定義を満たしているライセンスは、DFSG も満たしています。
                  このことは、長い歴史の中で 2、3の例外はあるものの、
                  その例外はニッチなライセンスや、
                  全く関連のないものだけです。
                  Debian Project とは異なり、
                  OSI はこれまで承認してきたすべてのライセンスを <ulink url="http://www.opensource.org/licenses/"/> で一覧にしています。
                  よって、「OSIが承認する」ことには曖昧さがありません。
                  なぜなら、ライセンスがその一覧にあるかどうかで、
                  OSIが承認したかどうかが決まるからです。
              </para>

              <!--
              <para>The Free Software Foundation also maintains a list
              of licenses at <ulink
              url="http://www.fsf.org/licensing/licenses/license-list.html"/>.
              The FSF categorizes licenses not only by whether they
              are free, but whether they are compatible with the GNU
              General Public License.  GPL compatibility is an
              important topic, covered in
              <xref
              linkend="license-compatibility"/><phrase
              output="printed"> later in this chapter</phrase>.</para>
              -->

              <para>
                  FSF も、自らが認めたライセンスの一覧を <ulink
              url="http://www.fsf.org/licensing/licenses/license-list.html"/> で管理しています。
                  FSF はフリーであるかどうかだけでなく、
                  GPL と互換性があるかどうかでもライセンスを分類しています。
                  GPL と互換性があるかどうかは重要な話題なので、
                  <phrase output="printed"> 後にある </phrase><xref linkend="license-compatibility"/> で扱っています。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term><firstterm>proprietary</firstterm>,
                      <firstterm>closed-source</firstterm></term>
  -->
  <varlistentry><term><firstterm>独占的(プロプライエタリ）な</firstterm>、
                      <firstterm>クローズドソース</firstterm></term>

    <listitem>
              <!--
              <para>The opposite of "free" or "open source."  It means
              software distributed under traditional, royalty-based
              licensing terms, where users pay per copy, or under any
              other terms sufficiently restrictive to prevent open
              source dynamics from operating.  Even software
              distributed at no charge can still be proprietary, if
              its license does not permit free redistribution and
              modification.</para>
              -->

              <para>
                  「フリー」や「オープンソース」とは反対の意味です。
                  コピーひとつ毎にお金を支払うか、
                  オープンソースの力学を妨げるのに充分制限的な条件を適用した、
                  伝統的なロイヤリティベースのライセンスで配布されるソフトウェアのことです。
                  無料で配布されるソフトウェアでも、
                  ライセンスが自由な改変や再配布を認めていない場合には、
                  独占的なソフトウェアになり得ます。
              </para>

              <!--
              <para>Generally "proprietary" and "closed-source" are
              synonyms.  However, "closed-source" additionally implies
              that the source code cannot even be seen.  Since the
              source code cannot be seen with most proprietary
              software, this is normally a distinction without a
              difference.  However, occasionally someone releases
              proprietary software under a license that allows others
              to view the source code.  Confusingly, they sometimes
              call this "open source" or "nearly open source," etc.,
              but that's misleading. The
              <emphasis>visibility</emphasis> of the source code is
              not the issue; the important question is what you're
              allowed to do with it.  Thus, the difference between
              proprietary and closed-source is mostly irrelevant, and
              the two can be treated as synonyms.</para>
              -->

              <para>
                  「独占的なソフトウェア」や「クローズドソース」は一般的に同じ意味です。
                  しかし、「クローズドソース」は、
                  さらにソースコードを見ることさえできないことも意味しています。
                  ソースコードはほとんどの独占的なソフトウェアで見ることはできませんので、これらを区別することは普通ありません。
                  しかしながら、ソースコードを見るのを許可するライセンスで独占的なソフトウェアをリリースする人もいます。
                  彼らはそれを、「オープンソース」や「オープンソースに近い」などと紛らわしい呼び方をするのですが、
                  これは誤解を招く言い方です。
                  ソースコードが <emphasis>手に入る</emphasis> かどうかの問題ではないのです。重要なのは、それを使って何ができるのか、ということなのです。
                  よって、「独占的なソフトウェア」と「クローズドソース」の違いはほとんど無意味ですから、これらは同じ意味として扱われるのです。
              </para>

              <!--
              <para>Sometimes <firstterm>commercial</firstterm> is
              used as a synonym for "proprietary," but properly
              speaking, the two are not the same thing.  Free software
              can be commercial software.  After all, free software
              can be sold, as long as the buyers are not restricted
              from giving away copies themselves.  It can be
              commercialized in other ways as well, for example by
              selling support, services, and certification.  There are
              multimillion dollar companies built on free software
              today, so it is clearly neither inherently
              anti-commercial nor anti-corporate.  On the other hand,
              it <emphasis>is</emphasis> anti-proprietary by its
              nature, and this is the key way in which it differs from
              traditional per-copy license models.</para>
              -->

              <para>
                  「<firstterm>商用の</firstterm>」 という言葉が、
                 「独占的なソフトウェア」の別名として使われることがあります。
                 しかし、正確に言うと、これらは同じではありません。
                 フリーソフトウェアも商用にすることができます。
                 結局、買う人がコピーする権利を制限しない限り、
                 フリーソフトウェアは売ることもできるのです。
                 フリーソフトウェアは他のやり方、
                 たとえばソフトウェアのサポートや、
                 ソフトウェアを使ったサービスや、
                 資格を売ったりすることで、商用にすることができるのです。
                 フリーソフトウェアを使って巨万の富を築いた企業も存在します。
                 よって、フリーソフトウェアは商用にできないわけではありませんし、
                 企業が使えないわけでもありません。
                 一方で、フリーソフトウェアは本質的に独占的なソフトウェアとは <emphasis>相容れないものです</emphasis>。
                 それこそが、コピーする毎にお金が必要な、
                 伝統的なライセンスモデルと異なる重要な点なのです。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term><firstterm>public domain</firstterm></term>
  -->
  <varlistentry><term><firstterm>パブリックドメイン</firstterm></term>

    <listitem>
              <!--
              <para>Having no copyright holder, meaning that there is
              no one who has the right to restrict copying of the
              work.  Being in the public domain is not the same as
              having no author.  Everything has an author, and even if a
              work's author or authors choose to put it in the public
              domain, that doesn't change the fact that they wrote
              it.</para>
              -->

              <para>
                  著作権を持っている人がいないことです。つまり、
                  ソフトウェアのコピーを制限する人がいないということです。
                  パブリックドメインであることは、作者がいないことと同じです。
                  どんなソフトウェアにも作者がいますが、
                  その作者が書いたものをパブリックドメインにすることを選んだとしても、
                  特定の人が書いたという事実を動かすことはできません。
              </para>

              <!--
              <para>When a work is in the public domain, material from
              it can be incorporated into a copyrighted work, and
              thereafter <emphasis>that copy</emphasis> of the
              material is covered under the same copyright as the
              whole work.  But this does not affect the availability
              of the original work, which remains in the public
              domain.  Thus, releasing something into the public
              domain is technically one way to make it "free,"
              according to the guidelines of most free software
              certifying organizations.  However, there are usually
              good reasons to use a license instead of just releasing
              into the public domain: even with free software, certain
              restrictions can be useful, not only to the copyright
              holder but even to recipients as well, as the next
              section makes clear.</para>
              -->

              <para>
                  ソフトウェアがパブリックドメインに置かれた場合、
                  その構成要素は著作権があるソフトウェアに組み込むことができ、
                  組み込まれた部分の <emphasis>コピー</emphasis> にも、
                  組み込んだソフトウェアの著作権が適用されます。
                  しかし、それによって元のソフトウェアが利用できなくなるわけではなく、パブリックドメインのままです。
                  よって、リリースしたものをパブリックドメインに置くことは、
                  ほとんどのフリーソフトウェアを認定している組織のガイドラインに照らして、
                  技術的に「フリー」にする方法の一つです。
                  しかしながら、たとえフリーソフトウェアであっても、
                  パブリックドメインに置くよりは何らかのライセンスを採用した方がよい理由があります。
                  ソフトウェアの著作権を持つ人だけでなく、
                  それを受け取る人たちに対しても、制限を課せば役に立つ場合があるからです。
                  こうした側面については、次の節で明らかにしていきます。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term><firstterm>copyleft</firstterm></term>
  -->
  <varlistentry><term><firstterm>コピーレフト</firstterm></term>

    <listitem>
              <!--
              <para>A license that uses copyright law to achieve a
              result opposite to traditional copyright.  Depending on
              whom you ask, this means either licenses that permit
              the freedoms under discussion here, or, more narrowly,
              licenses that not only permit those freedoms but
              <emphasis>enforce</emphasis> them, by stipulating that
              the freedoms must travel with the work.  The Free
              Software Foundation uses the second definition
              exclusively; elsewhere, it's a toss-up: a lot of people
              use the term the same way the FSF does, but
              others&mdash;including some who write for mainstream
              media&mdash;tend to use the first definition.  It's not
              clear that everyone using the term is aware that there's
              a distinction to be made.</para>
              -->

              <para>
                  伝統的な著作権と反対の結果を得るために、
                  著作権に関する法律を利用しているライセンスのことです。
                  この意味は、
                  この章で議論している自由を認めたライセンスのこともあれば、
                  もっと狭義では、
                  その自由が伝播していくことを義務付けることで、
                  自由を認めるだけでなく <emphasis>強制</emphasis> もしているライセンスのことです。
                  FSF は後者の定義だけを使っていますが、
                  それ以外の場合は5分5分です。
                  つまり、多くの人々は FSF と同じ使い方をしていますが、
                  それ以外は
                  &mdash; 主流となっているメディアの記事を書く人たちは
                  &mdash; 前者の定義を使う傾向があります。
                  この用語を使っている人たちが、
                  区別すべき使い方があるのを知っているのかはわかりません。
              </para>

              <!--
              <para>The canonical example of the narrower, stricter
              definition is the GNU General Public License, which
              stipulates that any derivative works must also be
              licensed under the GPL; see
              <xref
              linkend="license-compatibility"/><phrase
              output="printed"> later in this chapter</phrase> for
              more.</para>
              -->

              <para>
                  後者の意味での標準的な使い方の例や、厳密な定義としては、
                  派生物のライセンスを同じライセンスにすることを義務付けている GPL があります。
                  詳しくは、<phrase output="printed"> 後にある </phrase><xref linkend="license-compatibility"/> を参照してください。
              </para>
    </listitem>
  </varlistentry>

</variablelist>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="license-aspects">
<!--
<title>Aspects of Licenses</title>
-->
<title>ライセンスの特徴</title>

<!--
<para>Although there are many different free software licenses
available, in the important respects they all say the same things:
that anyone can modify the code, that anyone can redistribute it both
in original and modified form, and that the copyright holders and
authors provide no warranties whatsoever (avoiding liability is
especially important given that people might run modified versions
without even knowing it).  The differences between licences boil down
to a few oft-recurring issues:</para>
-->

<para>
    多くのフリーソフトウェアライセンスが利用できますが、
    それらが述べている重要な点はすべて同じです。
    つまり、誰もがコードを改造でき、
    オリジナルのままでも、改造を加えた形でも再配布できること、
    そして著作権を持つ人、そしてソフトウェアの作者はいかなる保証もしない
    (無保証であること、責任を回避することは、
     特にソフトウェアが改変されたことを知らないで実行する人がいる可能性を考えると特に重要です)
    ことです。
    それぞれのライセンスの違いは、以下のよく起こる問題に集約できます。
</para>

<variablelist>
  <!--
  <varlistentry><term>compatibility with proprietary licenses</term>
  -->
  <varlistentry><term>独占的なライセンスとの互換性</term>

    <listitem>
              <!--
              <para>Some free licenses allow the covered code to be
              used in proprietary programs.  This does not affect the
              licensing terms of the proprietary program: it is still
              as proprietary as ever, it just happens to contain some
              code from a non-proprietary source.  The Apache License,
              X Consortium License, BSD-style license, and the
              MIT-style license are all examples of
              proprietary-compatible licenses.</para> 
              -->

              <para>
                  フリーなライセンスの中には、
                  それが適用されるコードを独占的なプログラムで使うことを認めるものがあります。
                  これは独占的なプログラムのライセンス条件に影響を与えません。
                  独占的なプログラムはそのままで、
                  独占的でないソースコードがいくらか混入するだけです。
                  Apacheライセンス、Xコンソーシアムライセンス、
                  BSDスタイルのライセンス、そして MITスタイルのライセンスは、
                  すべて独占的なライセンスと互換性があるライセンスの例です。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term>compatibility with other free licenses</term>
  -->
  <varlistentry><term>他のフリーなライセンスとの互換性</term>

    <listitem>
              <!--
              <para>Most free licenses are compatible with each other,
              meaning that code under one license can be combined with
              code under another, and the result distributed under
              either license without violating the terms of the
              other.  The major exception to this is the GNU General
              Public License, which requires that any work using GPLed
              code be itself distributed under the GPL, and without
              adding any further restrictions beyond what the GPL
              requires.  The GPL is compatible with some free
              licenses, but not with others.  This is discussed in more
              detail in
              <xref linkend="license-compatibility"/><phrase
              output="printed"> later in this chapter</phrase>.</para> 
              -->

              <para>
                  ほとんどのフリーなライセンスはお互いに互換性があります。
                  つまり、あるライセンスが適用されたコードは、
                  別のライセンスが適用されたコードと組み合わせることができます。
                  組み合わせた結果できたものは、
                  それぞれのライセンス条件を破ることなく再配布することができます。
                  このことの重要な例外は、GPL
                  (GNU General Public License) です。
                  GPL は、 GPL で配布されたコードを使ったいかなる派生物も、
                  GPL として配布しなければならず、
                  かつ GPL が必要とすること以上の制限をつけてはならない、
                  ことを要求しています。
                  GPL と互換性があるライセンスもあれば、ないものもあります。
                  詳しくは、<phrase output="printed"> 後の方にある </phrase>
                  <xref linkend="license-compatibility"/> で議論しています。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term>enforcement of crediting</term>
  -->
  <varlistentry><term>クレジットの強制</term>

    <listitem>
              <!--
              <para>Some free licenses stipulate that any use of the
              covered code be accompanied by a notice, whose placement
              and display is usually specified, giving credit to the
              authors or copyright holders of the code.  These
              licenses are often still proprietary-compatible: they do
              not necessarily demand that the derivative work be free,
              merely that credit be given to the free code.</para>
              -->

              <para>
                  フリーなライセンスの中には、
                  それが適用されたソースコードを使ういかなるコードにも、
                  注意書きを記すことを強制するものがあります。
                  注意書きの位置や内容も決まっているのが普通です。
                  内容はコードの作者や著作権を持つ人へのクレジットです。
                  こうしたライセンスでも、
                  独占的なライセンスと互換性があるものがあります。
                  なぜなら、派生物がフリーであることを要求するのではなく、
                  フリーなコードに対してクレジットを与えることだけを要求しているからです。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term>protection of trademark</term>
  -->
  <varlistentry><term>商標の保護</term>

    <listitem>
              <!--
              <para>A variant of credit enforcement.
              Trademark-protecting licenses specify that the name of
              the original software (or its copyright holders, or
              their institution, etc.) may <emphasis>not</emphasis> be
              used by derivative works without prior written
              permission.  Although credit enforcement insists that a
              certain name be used, and trademark protection insists
              that it not be used, they are both expressions of the
              same desire: that the original code's reputation be
              preserved and transmitted, but not tarnished by
              association.</para>
              -->

              <para>
                  クレジットを強制するやり方の変形として、
                  商標で保護されたライセンスは、
                  オリジナルのソフトウェア
                  (またはその著作権を持つ人や組織など)
                  の名前を、事前の書面での許可なく派生物で使っては <emphasis>いけない</emphasis> と定めています。
                  クレジットを強制するやり方は、
                  ある名前をどこかで使うことを求めますし、
                  商標で保護するやり方は、使わないことを求めますが、
                  どちらも同じ要求を表しています。
                  つまり、オリジナルのソースコードへの敬意を払い、
                  それを伝播させたいけれども、
                  どこからもそうした敬意を傷つけられたくないのです。
              </para>
    </listitem>
  </varlistentry>

  <!--
  <varlistentry><term>protection of "artistic integrity"</term>
  -->
  <varlistentry><term>「ソースコードの完全性」を保護する</term>

    <listitem>
              <!--
              <para>Some licenses (the Artistic License, used
              for the most popular implementation of the Perl
              programming language, and Donald Knuth's TeX license,
              for example) require that modification and
              redistribution be done in a manner that distinguishes
              clearly between the pristine original version of the
              code and any modifications.  They permit essentially the
              same freedoms as other free license, but impose certain
              requirements that make the integrity of the original
              code easy to verify.  These licenses have not caught on
              much beyond the specific programs they were made for,
              and will not be discussed in this chapter; they are
              mentioned here only for the sake of completeness.</para> 
              -->

              <para>
                  ライセンス
                  (たとえば、プログラミング言語 Perl
                   で実装されたソフトウェアで最も人気がある
                   Artistic License や、Donald Knuth の TeX License)
                  によっては、
                  オリジナルのコードと改変した部分を区別できるやり方で、
                  改変と再配布を行うように要求するものがあります。
                  こうしたライセンスは、
                  本質的に他のフリーなライセンスと同じ自由を認めていますが、
                  オリジナルなコードの完全性を容易に確認できるようにするために、
                  ある制限を課しています。
                  これらのライセンスは特定のプログラム以外では受け入れられていません。
                  よってこの章でも議論しません。
                  ただ、完全を期すためにここで触れています。
              </para>
    </listitem>
  </varlistentry>
</variablelist>

<!--
<para>Most of these stipulations are not mutually exclusive, and some
licenses include several.  The common thread among them is that they
place demands on the recipient in exchange for the recipient's right
to use and/or redistribute the code.  For example, some projects want
their name and reputation to be transmitted along with the code, and
this is worth imposing the extra burden of a credit or trademark
clause; depending on its onerousness, that burden may result in some
users choosing a package with a less demanding license.</para>
-->

<para>

</para>
    これらの条件は、相互に排他的なものではありませんし、
    ライセンスによっては複数の条件を含むものがあります。
    共通しているのは、ソフトウェアを受け取る人が、
    それを使ったり再配布するのを認めるのと引き換えに、
    ライセンスが義務を課すというものです。
    たとえば、自分たちの名前とコードへの敬意を、
    コードで伝播させたいと願って、
    クレジットや商標について条件を課すプロジェクトが存在します。
    条件から出てくる負担によっては、
    面倒だと考えて制限が緩いライセンスを採用したパッケージを選ぶユーザーが出てくるかもしれません。
</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="license-compatibility">
<!--
<title>The GPL and License Compatibility</title>
-->
<title>GPL とライセンスの互換性</title>

<!--
<para>By far the sharpest dividing line in licensing is that between
proprietary-incompatible and proprietary-compatible licenses, that is,
between the GNU General Public License and everything else.  Because
the primary goal of the GPL's authors is the promotion of free
software, they deliberately crafted the license to make it impossible
to mix GPLed code into proprietary programs.  Specifically, among the
GPL's requirements (see
<ulink url="http://www.fsf.org/licensing/licenses/gpl.html"/> for its
full text) are these two:</para>
-->

<para>
    ライセンスをくっきりと分ける境界線は、
    独占的なライセンスと互換性があるか、ないかです。
    つまり、GPL (GNU General Public License) とそれ以外全てです。
    GPL の第一の目的はフリーソフトウェアを広めることなので、
    GPL を書いた人は、意図的に独占的なコードと GPL のコードを混ぜることができないようにしました。
    特に GPL が要求していること
    (全文は <ulink url="http://www.fsf.org/licensing/licenses/gpl.html"/> を参照してください) は以下の二つです。
</para>

<orderedlist>
  <!--
  <listitem><para>Any derivative work&mdash;that is, any work
            containing a nontrivial amount of GPLed code&mdash;must
            itself be distributed under the GPL.</para> 
  </listitem>
  -->

  <listitem>
            <para>
                すべての派生物 &mdash;
                つまり、GPL が適用されたコードを含んだあらゆるプログラム
                &mdash; は、それ自体も GPL で配布しなければならない。
            </para>
  </listitem>

  <listitem>
            <!--
            <para>No additional restrictions may be placed on the
            redistribution of either the original work or a derivative
            work.  (The exact language is: "You may not impose any
            further restrictions on the recipients' exercise of the
            rights granted herein.")</para>
            -->

            <para>
                オリジナルでも、派生物であっても、
                それを再配布する場合には制限を追加してはいけない。
                (原文の該当箇所を以下に引用します: 「あなたは、
                 ソフトウェアを受け取る人がここで認められた権利を行使することに関して、
                 これ以上他のいかなる制限も課してはならない。」)
            </para>
  </listitem>
</orderedlist>

<!--
<para>With these conditions, the GPL succeeds in making freedom
contagious.  Once a program is copyrighted under the GPL, its terms of
redistribution are <firstterm>viral</firstterm>&mdash;they are passed
on to anything else the code gets incorporated into, making it
effectively impossible to use GPLed code in closed-source programs.
However, these same clauses also make the GPL incompatible with
certain other free licenses.  The usual way this happens is that the
other license imposes a requirement&mdash;for example, a credit clause
requiring the original authors to be mentioned in some way&mdash;that
is incompatible with the GPL's "You may not impose any further
restrictions..." language.  From the point of view of the Free
Software Foundation, these second-order consequences are desirable, or
at least not regrettable.  The GPL not only keeps your software free,
but effectively makes your software an agent in pushing
<emphasis>other</emphasis> software to enforce freedom as well.</para>
-->

<para>
    これらの条件によって、GPL は自由を伝播させることに成功しています。
    いったんプログラムが GPL で保護されると、
    再配布の条件が <firstterm>伝染する</firstterm> のです
    &mdash; つまり、取り込んだコード以外のあらゆる部分にその条件を適用させ、
    かつ GPL を採用したコードをクローズドソースなプログラムで使うのを不可能にしているのです。
    しかしながら、
    これらの条項は他のフリーなライセンスと GPL を非互換にするものでもあります。
    通常は、他のライセンスが追加の条件を課したときに非互換が起きます
    &mdash; たとえば、何らかの方法でオリジナルの作者へのクレジットを要求する場合です
    &mdash; これは、GPL の 「あなたは、これ以上他のいかなる制限も課してはならない ...」 という文言に反しています。こうした二次的な結果は、望ましいものか、少なくとも悪いことではない、というのが FSF の見解です。
    GPL は あなたのソフトウェアをフリーな状態に保つだけでなく、
    <emphasis>他の</emphasis> ソフトウェアにも自由を強制する媒体にもするのです。
</para>

<!--
<para>The question of whether or not this is a good way to
promote free software is one of the most persistent holy wars on the
Internet (see <xref linkend="holy-wars"/><phrase output="printed">
in <xref linkend="communications"/></phrase>), and we won't
investigate it here.  What's important for our purposes is that
GPL compatibility is an important issue when choosing a license.  The
GPL is by far the most popular open source license; at <ulink
url="http://freshmeat.net/stats/#license"/>, it is at 68%, and the
next highest license is at 6%.  If you want your code to be able to be
mixed freely with GPLed code&mdash;and there's a lot of GPLed code out
there&mdash;then you should pick a GPL-compatible license.  Most of
the GPL-compatible open source licenses are also
proprietary-compatible: that is, code under such a license can be used
in a GPLed program, and it can be used in a proprietary program.  Of
course, the <emphasis>results</emphasis> of these mixings would not be
compatible with each other, since one would be under the GPL and the
other would be under a closed-source license.  But that concern
applies only to the derivative works, not to the code you distribute
in the first place.</para>
-->
<para>
    この手法がフリーソフトウェアを広める優れた手段なのかどうかは、
    インターネット上でずっと続いている宗教論争
    (<phrase output="printed"><xref linkend="communications"/> の </phrase>
     <xref linkend="holy-wars"/> を参照してください) のひとつであり、
    ここでは深く触れません。重要なのは、
    GPL と互換性があるかどうかがライセンスを選ぶ際に重大な問題になるということです。GPL は非常に重要なオープンソースライセンスです。
    <ulink url="http://freshmeat.net/stats/#license"/> では、
    GPL が 68% を占めており、次に高いのは 6% です。
    GPL で保護されたコードと自分のコードを混ぜた上でフリーにしたいのなら
    &mdash; GPL なコードがたくさんあるのだから
    &mdash; GPLと互換性があるライセンスを選ぶべきです。
    GPL と互換性があるオープンソースライセンスのほとんどは、
    独占的なライセンスとも互換性があります。
    よって、そうしたライセンスを採用したコードは、
    GPL なコードでも使うことができますし、
    独占的なプログラムでも使うことができるのです。
    もちろん、そうやってコードを混ぜた
    <emphasis>結果生じたもの</emphasis> は相互に互換性がありません。
    なぜなら、一方は GPL となり、
    一方はクローズドソースなライセンスが適用されるからです。
    問題が及ぶのは派生物に対してのみであり、
    はじめに配布したオリジナルなコードは影響を受けません。
</para>

<!--
<para>Fortunately, the Free Software Foundation maintains a list
showing which licenses are compatible with the GPL and which are not,
at <ulink url="http://www.gnu.org/licenses/license-list.html"/>.  All
of the licenses discussed in this chapter are present on that list, on
one side or the other.</para>
-->

<para>
    ありがたいことに、FSF は GPL と互換性があるライセンスと、
    互換性がないライセンスの一覧を <ulink url="http://www.gnu.org/licenses/license-list.html"/> で示してくれています。この章で議論しているすべてのライセンスがこのリストにありますが、GPL と互換性があるものもあれば、ないものもあります。
</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="license-choosing">
<!--
<title>Choosing a License</title>
-->
<title>ライセンスを選ぶ</title>

<!--
<para>When choosing a license to apply to your project, if at all
possible use an existing license instead of making up a new one.
There are two reasons why existing licenses are better:</para>
-->

<para>
    プロジェクトに適用するライセンスを選ぶときは、
    できる限り新しいものを作らずに既にあるものを使うようにしましょう。
    有り物を使う理由はふたつあります。
</para>

<itemizedlist>
  <!--
  <listitem><para>Familiarity.  If you use one of the three or four
            most popular licenses, people won't feel they have to read
            the legalese in order to use your code, because they'll
            have already done so for that license a long time ago.</para>
  </listitem>
  -->

  <listitem><para>ライセンスが既に知られているからです。
            あなたが人気のあるライセンスのうちのひとつを使えば、
            コードを使う人が法律用語をわざわざ読む必要はないと思うでしょう。
            ずっと以前に読んだことがあるからです。</para>
  </listitem>

  <!--
  <listitem><para>Quality.  Unless you have a team of lawyers at your
            disposal, you are unlikely to come up with a legally solid
            license.  The licenses mentioned here are the products of
            much thought and experience; unless your project has truly
            unusual needs, it is unlikely you would do better.</para> 
  </listitem>
  -->

  <listitem><para>ライセンスの質が保たれているからです。
            自分の思い通りになる弁護士のチームがいなければ、
            法的に隙がないライセンスを生み出すことはできないでしょう。
            この章で触れているライセンスには、多くの人々の経験や思考が詰まっています。
            つまり、あなたのプロジェクトに本当に変わった要求がない限り、
            さらに行動する必要はないということです。</para> 
  </listitem>

</itemizedlist>

<!-- 
<para>To apply one of these licenses to your project, see
<xref linkend="license-quickstart-applying"/><phrase output="printed">
in <xref linkend="getting-started"/></phrase>.</para>
-->

<para>プロジェクトにライセンスを適用するには、
<phrase output="printed"><xref linkend="getting-started"/> の </phrase> <xref linkend="license-quickstart-applying"/> を参照してください。</para>

<sect2 id="license-choosing-mit-x">
<title>MIT/X Window System ライセンス</title>

<!--
<para>If your goal is that your code be accessible by the greatest
possible number of developers and derivative works, and you do not
mind the code being used in proprietary programs, choose the MIT / X
Window System license (so named because it is the license under which
the Massachusetts Institute of Technology released the original X
Window System code).  This license's basic message is "You are free to
use this code however you want."  It is compatible with the GNU GPL,
and it is short, simple, and easy to understand:</para>
-->

<para>
    自分のコードをできる限り多くの開発者と派生物で使ってもらい、
    かつ独占的なコードで使われるのを気にしないのならば、
    MIT/X Window System ライセンス(訳注:以下 MIT/X ライセンス) (マサチューセッツ工科大学
    がオリジナルの X Window System のコードをこのライセンスでリリースしたので、
    そう呼ばれています) を選びましょう。このライセンスが言っているのは基本的に
    「あなたはこのコードを自由に、
    無料で使うことができますよ」ということです。
    このライセンスは GNU GPL と互換性があり、短く、簡単で、理解しやすいものです。
</para>

<!--
<screen>Copyright (c) &lt;year&gt; &lt;copyright holders&gt;

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</screen>
-->

<screen>Copyright (c) &lt;year&gt; &lt;copyright holders&gt;

以下に定める条件に従い、本ソフトウェアおよび関連文書のファイル（以下「ソフトウェア」）の複製を取得するすべての人に対し、ソフトウェアを無制限に扱うこと
を無償で許可します。これには、ソフトウェアの複製を使用、複写、変更、結合、掲載、頒布、サブライセンス、および/または販売する権利、およびソフトウェアを提
供する相手に同じことを許可する権利も無制限に含まれます。

上記の著作権表示および本許諾表示を、ソフトウェアのすべての複製または重要な部分に記載するものとします。

ソフトウェアは「現状のまま」で、明示であるか暗黙であるかを問わず、何らの保証もなく提供されます。ここでいう保証とは、商品性、特定の目的への適合性、およ
び権利非侵害についての保証も含みますが、それに限定されるものではありません。作者または著作権者は、契約行為、不法行為、またはそれ以外であろうと、ソフト
ウェアに起因または関連し、あるいはソフトウェアの使用またはその他の扱いによって生じる一切の請求、損害、その他の義務について何らの責任も負わないものとし
ます。</screen> 

<para>(原文は <ulink
url="http://www.opensource.org/licenses/mit-license.php"/> にあります。日本語訳については <ulink url="http://sourceforge.jp/projects/opensource/wiki/licenses%2FMIT_license"/> から引用させて頂きました。)</para>

</sect2>

<sect2 id="license-choosing-gpl">
<!--
<title>The GNU General Public License</title>
-->
<title>GPL</title>

<!--
<para>If you prefer that your project's code not be used in
proprietary programs, or if you at least don't care whether or not it
can be used in proprietary programs, choose the GNU General Public
License
(<ulink url="http://www.fsf.org/licensing/licenses/gpl.html"/>).  The
GPL is probably the most widely-used free software license in the
world today; this instant recognizability is itself one of the GPL's
major advantages.</para>
-->

<para>
    あなたのプロジェクトが、自分達が作ったものが独占的なプログラムで使われるのを望まなかったり、
    少なくともそうしたことを気にしないのであれば、GPL (GNU General Public License) (<ulink url="http://www.fsf.org/licensing/licenses/gpl.html"/>) を選ぶとよいでしょう。
    GPL はおそらく、現在世界でもっとも広く使われているフリーソフトウェアライセンスです。
    認知度が高いことが、それ自体 GPL の主な利点のひとつです。
</para>

<!--
<para>When writing a code library that is meant mainly to be used as
part of other programs, consider carefully whether the restrictions
imposed by the GPL are in line with your project's goals.  In some
cases&mdash;for example, when you're trying to unseat a competing,
proprietary library that does the same thing&mdash;it may make more
strategic sense to license your code in such a way that it can be
mixed into proprietary programs, even though you would otherwise not
wish this.  The Free Software Foundation even fashioned an alternative
to the GPL for such circumstances: the <firstterm>GNU Library
GPL</firstterm>, later renamed to the <firstterm>GNU Lesser
GPL</firstterm> (most people just use the acronym
<firstterm>LGPL</firstterm>, in any case).  The LGPL has looser
restrictions than the GPL, and can be mixed more easily with non-free
code.  However, it's also a bit complex and takes some time to
understand, so if you're not going to use the GPL, I recommend just
using the MIT/X-style license.</para>
-->

<para>
    他のプログラムの一部として使われるライブラリを書いている場合は、
    あなたのプロジェクトの目標に照らして、GPL の制限を注意深く考える必要があります。
    場合によっては &mdash; たとえば、自分達のライブラリと同じことをしている独占的なプログラムのシェアを奪おうとしている場合 &mdash;
    あなたがたとえ望まなくても、独占的なプログラムで使えるようにするやり方で、
    プログラムをライセンスするのが戦略として優れているかもしれません。
    FSF は、こうした場合のために GPL とは別の選択肢を用意しました。
    それが <firstterm>GNU Library GPL</firstterm>であり、
    後に<firstterm>GNU Lesser GPL</firstterm> と改称されたものです。
    (ほとんどの人はその頭文字をとって、<firstterm>LGPL</firstterm> という用語を使います)
    LGPL は GPL よりも制限が緩く、フリーでないコードと容易に混ぜることができます。
    しかしながら、LGPL はちょっと複雑で理解するのに少し時間がかかります。
    よって、GPL を使うつもりがないなら、MIT/X スタイルのライセンスを使うことを私は勧めます。
</para>

<sect3 id="is-the-gpl-free">
<!--
<title>Is the GPL free or not free?</title>
-->
<title>GPL はフリーなライセンスなのか?</title>

<!--
<para>One consequence of choosing the GPL is the
possibility&mdash;small, but not infinitely small&mdash;of finding
yourself or your project embroiled in a dispute about whether or not
the GPL is truly "free", given that it places some restrictions on
what you can do with the code&mdash;namely, the restriction that the
code cannot be distributed under any other license.  For some people,
the existence of this restriction means the GPL is "less free" than
more permissive licenses such as the MIT/X license.  Where this
argument usually goes, of course, is that since "more free" must be
better than "less free" (after all, who's not in favor of freedom?),
it follows that those licenses are better than the GPL.</para>
-->

<para>
    GPL を選んだ結果、プロジェクトがコードに対してできることを制限された場合 &mdash;
    すなわち他のライセンスでコードを配布できなかった場合 &mdash; GPL が本当の意味で「フリー(自由)」
    なのかどうかに関する論争がプロジェクトで起こるかもしれません &mdash;
    これが起こる可能性は小さいですが、ゼロとはいえません。
    人によっては、他のライセンスでコードを配布できないという制限が、
    MIT/X ライセンスのような制限の緩いライセンスよりも
    GPL が「自由度が低い」ように映るのです。
    もちろん、こうした主張が行き着くところは、「自由度は低いより高い方がいいに決まっている」
    というものですが (自由であることに賛成しない人がいるでしょうか?)、
    これに従うと、制限の緩いライセンスが GPL よりも優れているということになります。 
</para>

<!--
<para>This debate is another popular holy war (see
<xref linkend="holy-wars"/><phrase output="printed"> in
<xref linkend="communications"/></phrase>).  Avoid participating
in it, at least in project forums.  Don't attempt to prove that the
GPL is less free, as free, or more free than other licenses.  Instead,
emphasize the specific reasons your project chose the GPL.  If the
recognizability of license was a reason, say that.  If the enforcement
of a free license on derivative works was also a reason, say that too,
but refuse to be drawn into discussion about whether this makes the
code more or less "free".  Freedom is a complex topic, and there is
little point talking about it if terminology is going to be used as a
stalking horse for substance.</para>
-->

<para>
    この手の議論は、宗教論争 (<phrase output="printed"><xref linkend="communications"/>
    の</phrase><xref linkend="holy-wars"/> を参照してください) になるお題のひとつです。
    少なくも公開されているフォーラムでは、これに参加しないようにしましょう。
    GPL が 他のライセンスより自由度が高いとか、低いとか、同じだとか、
    そういうことを証明しようとしてはいけません。
    そうではなくて、あなたのプロジェクトがなぜ GPL を選んだのかを強調するようにしましょう。
    ライセンスの認知度が高いことが理由なら、そう言えばいいのです。
    派生物に同じ条件を強制するのが理由なら、それも伝えましょう。
    しかし、GPL のやり方がコードの「自由度を高くするのか、
    低くするのかどうか」という議論には絶対にしないでください。
    「自由とは何か」というお題は複雑なものですし、
    「自由」という言葉が本質を隠すために使われる限り、語るに値しないものです。
</para>

<!--
<para>Since this is a book and not a mailing list thread, however, I
will admit that I've never understood the "GPL is not free" argument.
The only restriction the GPL imposes is that it prevents people from
imposing <emphasis>further</emphasis> restrictions.  To say that this
results in less freedom has always seemed to me like saying that
outlawing slavery reduces freedom, because it prevents some people
from owning slaves.</para>
-->

<para>
    この本はメーリングリストではありませんが、それでも敢えて言えば、
    私は「GPLはフリーなライセンスではない」という主張は全く理解できません。
    GPL が課している制限は、<emphasis>GPL が課す以上の</emphasis>
    制限をしてはいけない、ということだけです。
    この制限こそがライセンスの自由度を下げているという主張は、
    奴隷制度を違法化することが自由度を下げていると言っているように聞こえます。
    なぜなら、GPL は特定の人が奴隷を所有することを防ぐものだからです。
</para>

<!--
<para>(Oh, and if you do get drawn into a debate about it, don't raise
the stakes by making inflammatory analogies.)</para>
-->

<para>
   (おっと、あなたがこの手の議論に巻き込まれたのなら、
    人を怒らせるような例え話をして危険な目にあわないようにしてくださいね。)
</para>

</sect3>

</sect2>

<sect2 id="license-bsd">
<!--
<title>What About The BSD License?</title>
-->
<title>BSDライセンス はどうなの?</title>

<!--
<para>A fair amount of open source software is distributed under
a <firstterm>BSD license</firstterm> (or sometimes
a <firstterm>BSD-style license</firstterm>).  The original BSD license
was used for the Berkeley Software Distribution, in which the
University of California released important portions of a Unix
implementation.  This license (the exact text may be seen in section
2.2.2 of
<ulink url="http://www.xfree86.org/3.3.6/COPYRIGHT2.html#6"/>) was
similar in spirit to the MIT/X license, except for one
clause:</para>
-->

<para>
    かなりの数のオープンソースソフトウェアが、<firstterm>BSD ライセンス</firstterm>
    (または <firstterm>BSD スタイルのライセンス</firstterm> と呼ばれることもあります)
    で配布されています。オリジナルのBSDライセンスは、
    カリフォルニア大学バークレー校がUnixの実装としてリリースした Berkeley Software
    Distribution (BSD) のライセンスとして使われていました。
    このライセンス (原文は <ulink url="http://www.xfree86.org/3.3.6/COPYRIGHT2.html#6"/>
    の 2.2.2 にあります) の考え方は MIT/X ライセンスと似ていますが、
    以下の一節だけは異なっています。
</para>

<!--
<blockquote>
<para><emphasis>All advertising materials mentioning features or use
of this software must display the following acknowledgement: This
product includes software developed by the University of California,
Lawrence Berkeley Laboratory.</emphasis></para>
</blockquote>
-->

<blockquote>
<para><emphasis>このソフトウェアの機能や、このソフトウェア自体を使っていることを言及する広告媒体には、必ず以下の謝辞を記載しなければならない。「この製品にはカリフォルニア大学バークレー校と、ローレンスバークレー研究所が開発したソフトウェアが含まれています。」</emphasis></para>
</blockquote>

<!--
<para>The presence of that clause not only made the original BSD
license GPL-incompatible, it also set a dangerous precedent: as other
organizations put similar advertising clauses into
<emphasis>their</emphasis> free software&mdash;substituting their own
organization's name in place of "the University of California,
Lawrence Berkeley Laboratory"&mdash;software redistributors faced an
ever-increasing burden in what they were required to display.
Fortunately, many of the projects that used this license became aware
of the problem, and simply dropped the advertising clause.  In 1999,
even the University of California did so.</para>
-->

<para>
    この一節こそが、オリジナルのBSDライセンスを GPL と非互換にしてしまっているばかりか、
    危険な先例を作ってしまっています。つまり、他の組織も似たような宣伝条項を &mdash;
   「カリフォルニア大学バークレー校と、ローレンスバークレー研究所」の部分を自分の組織の名前に置き換えることで &mdash;
   <emphasis>自分達の</emphasis> フリーソフトウェアに付け加えてしまいます。
    ソフトウェアを再配付する人達にとっては、
    記載しなければならない謝辞が増え続けることが負担になってしまいます。
    幸運なことに、このライセンスを使っていた多くのプロジェクトがこの問題に気付き、
    この宣伝条項を削除していました。そして1999年には、カリフォルニア大学もこの条項を削除したのです。
</para>

<!--
<para>The result is the revised BSD license, which is simply the
original BSD license with the advertising clause removed.  However,
this history makes the phrase "BSD license" a bit ambiguous: does it
refer to the original, or the revised version?  This is why I prefer
the MIT/X license, which is essentially equivalent, and which does not
suffer from any ambiguity.  However, there is perhaps one reason to
prefer the revised BSD license to the MIT/X license, which is that the
BSD includes this clause:</para>
-->

<para>
    この結果生まれたのが、修正BSDライセンスと呼ばれるものです。
    これはオリジナルのBSDライセンスから宣伝条項を削除したものです。
    しかしながら、こうした歴史的な経緯が「BSDライセンス」
    という言葉をちょっと曖昧にしています。「BSDライセンス」と言ったとき、
    オリジナルのBSDライセンスを指すのでしょうか？
    それとも修正BSDライセンスを指すのでしょうか？
    この曖昧さから、私は MIT/X ライセンスの方が好みです。
    MIT/X ライセンスとBSDライセンスは本質的には同じものですし、
    MIT/X ライセンスには、こうした言葉の上での曖昧さがないからです。
    しかし、MIT/X ライセンスより修正BSDライセンスが好ましい理由がひとつだけあります。
    それは、BSDライセンスには以下の一節が含まれているからです。
</para>

<!--
<blockquote>
<para><emphasis>Neither the name of the &lt;ORGANIZATION&gt; nor the
names of its contributors may be used to endorse or promote products
derived from this software without specific prior written
permission.</emphasis></para>
</blockquote>
-->

<blockquote>
<para><emphasis>書面による特別な許可なく、本ソフトウェアから派生した製品を宣伝するために &lt;組織&gt; の名前、または本ソフトウェアに貢献した人の名前を使用してはならない。</emphasis></para>
</blockquote>

<!--
<para>It's not clear that without such a clause, a recipient of the
software would have had the right to use the licensor's name anyway,
but the clause removes any possible doubt.  For organizations worried
about trademark control, therefore, the revised BSD license may be
slightly preferable to MIT/X.  In general, however, a liberal
copyright license does not imply that recipients have any right to use
or dilute your trademarks &mdash; copyright law and trademark law are
two different beasts.</para>
-->

<para>
    この条項がなければ、ソフトウェアを受け取った人が、
    ライセンスを与えた人(組織) の名前を使う権利があるかどうかがはっきりしませんが、
    そうした疑いをこの条項が払拭しています。よって、
    商標の管理に関心がある組織にとっては、
    修正BSDライセンスが MIT/X ライセンスよりも好ましいものとなります。
    しかし一般的には、
    自由主義的なライセンスだからといって、それが商標を自由に使ったり、
    商標の価値を弱める権利を与えることにはなりません。
    &mdash; 著作権に関する法律と商標に関する法律は全く異なるものだからです。
</para>

<!--
<para>If you wish to use the revised BSD license, a template is
available at <ulink
url="http://www.opensource.org/licenses/bsd-license.php"/>.</para>
-->

<para>
    もし修正BSDライセンスを使いたいと思ったら、
    雛型は <ulink url="http://www.opensource.org/licenses/bsd-license.php"/> に置いてあります。
</para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="copyright-assignment">
<!--
<title>Copyright Assignment and Ownership</title>
-->
<title>著作権の保有と譲渡</title>

<!--
<para>There are three ways to handle copyright ownership for free code
and documentation that were contributed to by many people.  The first
is to ignore the issue of copyright entirely (I don't recommend this).
The second is to collect a <firstterm>contributor license
agreement</firstterm> (<firstterm>CLA</firstterm>) from each person
who works on the project, explicitly granting the project the right to
use that person's contributions.  This is usually enough for most
projects, and the nice thing is that in some jurisdictions, CLAs can
be sent in by email.  The third way is to get actual copyright
assignments from contributors, so that the project (i.e., some legal
entity, usually a nonprofit) is the copyright owner for everything.
This is the most legally airtight way, but it's also the most
burdensome for contributors; only a few projects insist on it.</para>
-->

<para>
    多くの人の貢献によって成り立っている、
    フリーなコードやドキュメントの著作権をうまく扱う方法は3つあります。
    ひとつめは、(私はお勧めしませんが) 著作権にまつわる問題をすべて無視してしまうことです。
    ふたつめは、<firstterm>contributor license agreement</firstterm>
    (貢献者ライセンス同意書、以下 <firstterm>CLA</firstterm>)
    をプロジェクトで働く人達から集め、
    個人が行った貢献をプロジェクトが使う権利を明示的に与えてもらうことです。
    ほとんどのプロジェクトは通常これで十分です。また、裁判の管轄区域によっては、
    CLA は電子メールで送ることができるのも優れています。
    三つめは、プロジェクト (通常は非営利な法的主体)
    が全ての著作権を保持するために、貢献する人から著作権を実際に譲ってもらうことです。
    これがもっとも法的には隙のない方法ですが、貢献する人にとってはもっとも厄介です。
    よって、この方法を求めてくるプロジェクトはわずかです。
</para>

<!--
<para>Note that even under centralized copyright ownership, the
code<footnote><para>I'll use "code" to refer to both code and
documentation, from now on.</para></footnote> remains free, because
open source licenses do not give the copyright holder the right to
retroactively proprietize all copies of the code.  So even if the
project, as a legal entity, were to suddenly turn around and started
distributing all the code under a restrictive license, that wouldn't
cause a problem for the public community.  The other developers would
simply start a fork based on the latest free copy of the code, and
continue as if nothing had happened.  Because they know they can do
this, most contributors cooperate when asked to sign a CLA or an
assignment of copyright.</para>
-->

<para>
    著作権を一ヶ所に集めたとしても、
    コード<footnote><para>ここから私は、「コード」という言葉を「プログラムとドキュメント両方」
    という意味で使います。</para></footnote>
    はフリーのままであることに注意してください。
    なぜなら、オープンソースライセンスは、
    著作権を持つ人にコードのコピーを過去に遡って独占的なコードにする権利を認めていないからです。
    よって、たとえ法的な主体としてのプロジェクトが突然方針を転換し、
    すべてのコードを制限が強いライセンスで配布し始めたとしても、
    そんなことはコミュニティーにとって決して問題になりません。
    他の開発者は単に最新のフリーなコードをコピーして新しいプロジェクトを始め、
    何事もなかったかのように開発は続くでしょう。そうできることを知っているからこそ、
    貢献する人達のほとんどは CLA へのサインや、著作権の譲渡を求められたときに協力するのです。
</para>

<sect2 id="copyright-assignment-none">
<!--
<title>Doing Nothing</title>
-->
<title>何も対処しない</title>

<!--
<para>Most projects never collect CLAs or copyright assignments from
their contributors.  Instead, they accept code whenever it seems
reasonably clear that the contributor intended it to be incorporated
into the project.</para>
-->

<para>
    ほとんどのプロジェクトは、貢献する人から CLA を集めたり、
    著作権を譲ってもらったりはしません。そのかわり、
    貢献する人のプロジェクトに取り入れてもらいたいという意志が、
    適度に明確である場合にはいつでもコードを受け入れています。
</para>

<!--
<para>Under normal circumstances, this is okay.  But every now and
then, someone may decide to sue for copyright infringement, alleging
that they are the true owner of the code in question and that they
never agreed to its being distributed by the project under an open
source license.  For example, the SCO Group did something like this to
the Linux project, see
<ulink url="http://en.wikipedia.org/wiki/SCO-Linux_controversies"/>
for details.  When this happens, the project will have no
documentation showing that the contributor formally granted the right
to use the code, which could make some legal defenses more
difficult.</para>
-->

<para>
    通常の状態ではこれで構いませんが、誰かが自分こそが問題となるコードの真の持ち主であり、
    自分たちはそのコードをオープンソースライセンスの下で配布することを認めないと主張して、
    著作権法違反で裁判を起こすかもしれません。
    たとえば、SCO グループはこれと似たようなことを
    Linuxカーネル開発プロジェクト に対して行いました。
    詳しくは、<ulink url="http://en.wikipedia.org/wiki/SCO-Linux_controversies"/>
    を参照してください。
    こんなことが起きてしまうと、
    プロジェクトは貢献した人から正式にコードを使う権利を得ていることを証明する文書がありません。
    こうなると、法的な防御が難しくなるかもしれません。
</para>

</sect2>

<sect2 id="copyright-assignment-cla">
<!--
<title>Contributor License Agreements</title>
-->
<title>貢献者ライセンス同意書(CLA)</title>

<!--
<para>CLAs probably offer the best tradeoff between safety and
convenience.  A CLA is typically an electronic form that a developer
fills out and sends in to the project.  In many jurisdictions, email
submission is enough.  A secure digital signature may or may not be
required; consult a lawyer to find out what method would be best for
your project.</para>
-->

<para>
    CLA はおそらく、法的な安全性と利便性のトレードオフを解決する最良のものでしょう。
    CLA は開発者が内容を記入し、プロジェクトに送付する電子的な書式が典型的なものです。
    多くの裁判の管轄地域では、電子メールで送付すれば十分です。
    安全な電子署名が必要な場合もあります。
    どの方法があなたのプロジェクトに合っているかを知るには、弁護士に相談してください。
</para>

<!--
<para>Most projects use two slightly different CLAs, one for
individuals, and one for corporate contributors.  But in both types,
the core language is the same: the contributor grants the
project <emphasis>"...perpetual, worldwide, non-exclusive, no-charge,
royalty-free, irrevocable copyright license to reproduce, prepare
derivative works of, publicly display, publicly perform, sublicense,
and distribute [the] Contributions and such derivative
works."</emphasis> Again, you should have a lawyer approve any CLA,
but if you get all those adjectives into it, you're probably
fine.</para>
-->

<para>
    多くのプロジェクトではふたつのちょっと異なる CLA を使います。
    ひとつは個人用、そしてもうひとつは企業用のものです。
    しかしどちらであっても、中心となる文言は同じです:
    貢献する人(組織) はプロジェクトに <emphasis>"... 
    あなたの貢献を複製したり、派生物を準備したり、公に表示したり、公に実行したり、
    サブライセンスするために、「半永久的で、全世界規模で、非独占的で、
    無償で、ロイヤリティーがなく、取り消すことができないライセンス」"</emphasis>
    を与える。というものです。
    繰り返しますが、どんな CLA を受け入れる場合でも弁護士に相談すべきです。
    しかし、あなたがこれらの文言に慣れていれば、おそらく問題はないでしょう。
</para>

<!--
<para>When you request CLAs from contributors, make sure to emphasize
that you are <emphasis>not</emphasis> asking for actual copyright
assignment.  In fact, many CLAs start out by reminding the reader of
this:</para>
-->

<para>
    CLA へのサインを、貢献する人に頼むときは、
    実際に著作権を譲渡するよう求めているわけでは
    <emphasis>ない</emphasis> ことを必ず強調するようにしましょう。
    実際、多くの CLA はサインする人にこのことを念押しする文言で始まります。
</para>

<!--
<blockquote>
<para><emphasis>This is a license agreement only; it does not transfer
copyright ownership and does not change your rights to use your own
Contributions for any other purpose.</emphasis></para>
</blockquote>
-->

<blockquote>
<para>
<emphasis>
    これはライセンスに同意するだけの文書です。つまり、
    著作権を譲渡したり、あなたの貢献を他の目的に使うためにあなたの権利を変更したりしません。
</emphasis>
</para>
</blockquote>

<para>以下にいくつか例を示します:</para>

<itemizedlist>
  <listitem><para>個人向けの CLA:</para>
    <itemizedlist>
      <listitem><para><ulink
        url="http://apache.org/licenses/icla.txt"/>
      </para></listitem>
      <listitem><para><ulink
        url="http://code.google.com/legal/individual-cla-v1.0.html"/>
      </para></listitem>
<!--  <listitem><para><ulink
 url="http://svn.collab.net/repos/svn-org/trunk/documents/individual-cla.txt"/>
      </para></listitem>  -->
    </itemizedlist>
  </listitem>
  <listitem><para>企業向けの CLA:</para>
    <itemizedlist>
      <listitem><para><ulink
        url="http://apache.org/licenses/cla-corporate.txt"/>
      </para></listitem>
      <listitem><para><ulink
        url="http://code.google.com/legal/corporate-cla-v1.0.html"/>
      </para></listitem>
<!--  <listitem><para><ulink
 url="http://svn.collab.net/repos/svn-org/trunk/documents/corporate-cla.txt"/>
      </para></listitem>  -->
    </itemizedlist>
  </listitem>
</itemizedlist>

</sect2>

<sect2 id="copyright-assignment-transfer">
<!--
<title>Transfer of Copyright</title>
-->
<title>著作権の譲渡</title>

<!--
<para>Copyright transfer means that the contributor assigns to the
project copyright ownership on her contributions.  Ideally, this is
done on paper and either faxed or snail-mailed to the project.</para>
-->

<para>
    著作権の譲渡とは、貢献する人が、自分が行った貢献の著作権をプロジェクトに譲り渡すことです。これは書面を郵送するか、ファックスすることで行うのが望ましいです。
</para>

<!--
<para>Some projects insist on full assignment because having a single
legal entity own the copyright on the entire code base can be useful
if the terms of the open source license ever need to be enforced in
court.  If no single entity has the right to do it, all the
contributors might have to cooperate, but some might not have time or
even be reachable when the issue arises.</para>
-->

<para>
    プロジェクトによっては、
    著作権を完全に譲渡するよう求めるところがあります。
    これは、すべてのコードの著作権をひとつの法的主体が持っていた方が、
    オープンソースライセンスの条件に違反した人を訴える場合に役立つからです。
    ひとつの主体がすべてのコードの著作権を持っていなかった場合、
    裁判で貢献した人全員の協力を得る必要が出るかもしれませんが、
    人によっては時間がなかったり、
    問題が起きた地域に足を運べないことすらあるかもしれません。
</para>

<!--
<para>Different organizations apply different amounts of rigor to the
task of collecting assignments.  Some simply get an informal statement
from a contributor on a public list mailing list&mdash;something to
the effect of "I hereby assign copyright in this code to the project,
to be licensed under the same terms as the rest of the code."  At
least one lawyer I've talked to says that's really enough, presumably
because it happens in a context where copyright assignment is normal
and expected anyway, and because it represents a <foreignphrase>bona
fide</foreignphrase> effort on the project's part to ascertain the
developer's true intentions.  On the other hand, the Free Software
Foundation goes to the opposite extreme: they require contributors to
physically sign and mail in a piece of paper containing a formal
statement of copyright assignment, sometimes for just one
contribution, sometimes for current and future contributions.  If the
developer is employed, the FSF asks that the employer sign it
too.</para>
-->

<para>
    著作権を譲ってもらうときにどの程度の厳密さを求めるのかは、
    組織によって異なります。
    公開されているメーリングリストで
    「私はここで、このコードの著作権をプロジェクトに譲り、
    このコード以外のものと同じライセンスを適用させます。」
    と言うことと同じ効果がある、非公式な声明を集めるだけのところもあります。
    私が話をした弁護士のうち少なくともひとりは、
    これで十分だと述べています。おそらくこれは、
    著作権の譲渡が通常期待される状況下で行われていること、
    そしてプロジェクトが開発者の本当の意志を確定させようとする努力が
    <foreignphrase>本物である</foreignphrase>
    ことを表しているからだと思われます。一方で、
    フリーソフトウェア財団 (FSF)は、全く逆の立場をとっています。
    彼らは著作権を譲渡する正式な声明文が書かれた一枚の紙切れに直接サインし、
    郵送することを求めてきます。
    たった一度貢献しただけでもFSFはこれを要求することがあります。
    また、現在、そして将来するであろう貢献に対して要求することもあります。
    対象となる開発者が雇われていた場合、雇用主もサインを求められます。
</para>

<!--
<para>The FSF's paranoia is understandable.  If someone violates the
terms of the GPL by incorporating some of their software into a
proprietary program, the FSF will need to fight that in court, and
they want their copyrights to be as airtight as possible when that
happens.  Since the FSF is copyright holder for a lot of popular
software, they view this as a real possibility.  Whether your
organization needs to be similarly scrupulous is something only you
can decide, in consultation with lawyers.  In general, unless there's
some specific reason why your project needs full copyright assignment,
just go with CLAs; they're easier for everyone.</para>
-->

<para>
    FSF が潔癖なのは理解できます。
    仮に誰かが FSF のソフトウェアを独占的なプログラムに組み込んで
    GPL の条件に違反した場合、FSF は裁判で争う必要が出てきます。
    そうした事態になったときに、
    FSFは自らが持つ著作権を全く隙がない状態にしたいからです。
    FSF は多くの人気があるソフトウェアの著作権を持っているので、
    彼らはこうした可能性が実際にあり得ることだと考えています。
    あなたの組織が同じように細心の注意を払うべきかは、
    弁護士に相談してから決めるようにしましょう。
    一般的には、著作権を完全に譲ってもらう理由がなければ、
    CLA を使うようにします。なぜなら、皆が扱いやすいからです。
</para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="dual-licensing">
<!--
<title>Dual Licensing Schemes</title>
-->
<title>デュアルライセンスの仕組み</title>

<!--
<para>Some projects try to fund themselves by using a dual licensing
scheme, in which proprietary derivative works may pay the copyright
holder for the right to use the code, but the code still remains free
for use by open source projects.  This tends to work better with code
libraries than with standalone applications, naturally.  The exact
terms differ from case to case.  Often the license for the free side
is the GNU GPL, since it already bars others from incorporating the
covered code into their proprietary product without permission from
the copyright holder, but sometimes it is a custom license that has
the same effect.  An example of the former is the MySQL license,
described at
<ulink url="http://www.mysql.com/company/legal/licensing/"/>; an
example of the latter is Sleepycat Software's licensing strategy,
described at <ulink 
url="http://www.oracle.com/technology/software/products/berkeley-db/htdocs/licensing.html"/>.</para>
-->

<para>
    プロジェクトによっては、お金を稼ぐためにデュアルライセンスの仕組みを使うところがあります。
    これは独占的な派生物については、
    コードを使う権利を得るために著作権者にお金を払ってもらう一方で、
    オープンソースプロジェクトで使う目的ならコードをフリーのままにしておく、
    というものです。
    これは当然、単独のアプリケーションよりはライブラリのコードと相性がよい仕組みです。
    正確な条件は場合によって異なります。
    オープンソースプロジェクトで使う場合のフリーなライセンスは
    GNU GPL がよく使われます。なぜなら、
    GPL は著作権者の許可なく独占的な製品にコードを取り込むことを既に禁止しているからですが、
    これと同じ効果を持つ独自のライセンスが使われることもあります。
    前者の例は MySQLのライセンス であり、<ulink url="http://www.mysql.com/company/legal/licensing/"/> に説明があります。
    後者の例は Sleepycat Software が採用しているライセンス戦略で、
    <ulink
url="http://www.oracle.com/technology/software/products/berkeley-db/htdocs/licen
sing.html"/> に説明があります。
</para>

<!--
<para>You might be wondering: how can the copyright holder offer
proprietary licensing for a mandatory fee if the terms of the GNU GPL
stipulate that the code must be available under less restrictive
terms?  The answer is that the GPL's terms are something the copyright
holder imposes on everyone else; the owner is therefore free to
decide <emphasis>not</emphasis> to apply those terms to itself.  A
good way to think of it is to imagine that the copyright owner has an
infinite number of copies of the software stored in a bucket.  Each
time it takes one out of the bucket to send into the world, it can
decide what license to put on it: GPL, proprietary, or something else.
Its right to do this is not tied to the GPL or any other open source
license; it is simply a power granted by copyright law.</para>
-->

<para>
    こんな疑問があるかもしれません 「GNU GPL が、
    制限が緩い方法でコードを利用させるように要求していたとしたら、
    著作権者はどうやってお金と引換えにライセンスを与えればいいの？」
    これに対しては 「GPL の条件は、著作権者が他人に課すものです。
    よって、著作権者には GPL の条件を <emphasis>課さずに</emphasis>
    独占的な条件のみを課す自由もあるのです。」
    というのが答えになります。
    これについては、
    著作権者がソフトウェアのコピーを無限に在庫として持っていると考えるとよいでしょう。
    彼らはソフトウェアのコピーを一つ取り出して世に送り出すたびに、
    どのライセンスを付けるか、つまり GPL なのか、
    独占的なライセンスか、それ以外かを決めることができるのです。
    ライセンスを選んで決める権利は、
    GPL や他のオープンソースライセンスが課しているものではありません。
    単に著作権に関する法律が与えたものなのです。
</para>

<!--
<para>The attractiveness of dual licensing is that, at its best, it
provides a way for a free software project to get a reliable income
stream.  Unfortunately, it can also interfere with the normal dynamics
of open source projects.  The problem is that any volunteer who makes
a code contribution is now contributing to two distinct entities: the
free version of the code and the proprietary version.  While the
contributor will be comfortable contributing to the free version,
since that's the norm in open source projects, she may feel funny
about contributing to someone else's semi-proprietary revenue stream.
The awkwardness is exacerbated by the fact that in dual licensing, the
copyright owner really needs to gather formal, signed copyright
assignments from all contributors, in order to protect itself from a
disgruntled contributor later claiming a percentage of royalties from
the proprietary stream.  The process of collecting these assignment
papers means that contributors are starkly confronted with the fact
that they are doing work that makes money for someone else.</para>
-->

<para>
    デュアルライセンスの魅力は、
    フリーソフトウェアプロジェクトに安定した収入の道を開くことです。
    不幸なことに、
    これがオープンソースプロジェクトの通常の力学を妨げてしまう可能性があります。
    問題なのは、コードを提供するボランティアたちが、
    フリーなバージョンのものと、独占的なものの、
    全く別なふたつのバージョンに貢献するようになることです。
    貢献するボランティアたちは、
    フリーなバージョンには喜んでコードを提供するでしょう。
    なぜなら、提供したコードをフリーにするのがオープンソースプロジェクトでは普通だからです。
    しかし、他の人が半ば独占的なやり方で利益を得るのに加担するのはおかしいと感じるかもしれません。
    このジレンマは、デュアルライセンスを採用した場合に、
    独占的なやり方で得た利益からボランティアがロイヤリティを請求することを防ぐために、
    著作権者が彼らのコードの著作権を自らに譲渡する契約にサインするよう求めてきたときにさらに大きくなります。
    こういう契約書にサインさせるプロセスは、
    ボランティア達に、自分が誰かを儲けさせるために動いているという事実をいやがおうでも突きつけることになります。
</para>


<!--
<para>Not all volunteers will be bothered by this; after all, their
contributions go into the open source edition as well, and that may be
where their main interest lies.  Nevertheless, dual licensing is an
instance of the copyright holder assigning itself a special right that
others in the project do not have, and is thus bound to raise
tensions at some point, at least with some volunteers.</para>
-->

<para>
    ボランティア全員がこの問題で悩むとは限りません。
    結局、提供したコードはオープンソースなバージョンにも取り込まれるわけで、
    それこそが彼らの関心事かもしれないからです。
    それにも関わらずデュアルライセンスは、
    著作権者がプロジェクトの他のメンバが持っていない特別な権利を、
    自らに与えるものです。
    それゆえに、ボランティアの中にはある時点で著作権者と対立してしまう人が必ずいます。
</para>

<!--
<para>What seems to happen in practice is that companies based on
dual licensed software do not have truly egalitarian development
communities.  They get small-scale bug fixes and cleanup patches from
external sources, but end up doing most of the hard work with internal
resources.  For example, Zack Urlocker, vice president of marketing at
MySQL, told me that the company generally ends up hiring the most
active volunteers anyway.  Thus, although the product itself is open
source, licensed under the GPL, its development is more or less
controlled by the company, albeit with the (extremely unlikely)
possibility that someone truly dissatisfied with the company's
handling of the software could fork the project.  To what degree this
threat pre&euml;mptively shapes the company's policies I don't know,
but at any rate, MySQL does not seem to be having acceptance problems
either in the open source world or beyond.</para>
-->

<para>
    デュアルライセンスを採用したソフトウェアを基盤にしている企業では、
    ボランティアの開発コミュニティと本当の意味で平等な関係を築いているわけではないようです。
    彼らは小規模なバグ修正やコードを整理する修正プログラムは外部に依存するものの、
    難しい仕事はほとんど内部でこなしてしまうのです。
    たとえば、MySQL のマーケティング部門副社長の Zack Urlocker は、
    活発なボランティアは結局企業が雇ってしまうのが一般的だと述べています。
    それゆえに、MySQL そのものは GPL でライセンスされたオープンソースソフトウェアですが、
    開発そのものは多かれ少なかれ企業がコントロールしています。
    (可能性は極めて小さいものの)
    誰かが企業のソフトウェアの扱いに不満を持ってしまうと、
    プロジェクトが分裂してしまう可能性も孕んでいます。
    こうした懸念がどの程度企業の方針に影響しているのかはわかりませんが、
    いずれにせよ、MySQLという企業は、
    オープンソースの世界に留まるか、
    そうでないかは問題視していないようです。
</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="patents">
<!--
<title>Patents</title>
-->
<title>特許</title>

<!--
<para>Software patents are the lightning rod issue of the moment in
free software, because they pose the only real threat against which
the free software community cannot defend itself.  Copyright and
trademark problems can always be gotten around.  If part of your code
looks like it may infringe on someone else's copyright, you can just
rewrite that part.  If it turns out someone has a trademark on your
project's name, at the very worst you can just rename the project.
Although changing names would be a temporary inconvenience, it
wouldn't matter in the long run, since the code itself would still do
what it always did.</para>
-->

<para>
    ソフトウェア特許は、フリーソフトウェアの世界で現在注目されている問題です。なぜなら、
    フリーソフトウェアのコミュニティが防ぐことができない、
    現実的な唯一の脅威となっているからです。
    著作権と商標の問題はいつでも回避することができます。
    仮にあなたのコードが他の人のコードと似ていて、誰かの著作権を侵害していたとしても、
    あなたはその部分を書き直せばよいのです。
    また、誰かがあなたのプロジェクトの名前に対して商標権を持っていたとしても、
    最悪プロジェクトの名前を変えれば済みます。
    プロジェクト名の変更は一時的には不便かもしれませんが、
    長い目で見れば問題にならないでしょう。なぜなら、コードそれ自体はいつも通り動くからです。
</para>

<!--
<para>But a patent is a blanket injunction against implementing a
certain idea.  It doesn't matter who writes the code, nor even what
programming language is used.  Once someone has accused a free
software project of infringing a patent, the project must either stop
implementing that particular feature, or face an expensive and
time-consuming lawsuit.  Since the instigators of such lawsuits are
usually corporations with deep pockets&mdash;that's who has the
resources and inclination to acquire patents in the first
place&mdash;most free software projects cannot afford the latter
possibility, and must capitulate immediately even if they think it
highly likely that the patent would be unenforceable in court. 
To avoid getting into such a situation in the first place, free software
projects are starting to code defensively, avoiding patented
algorithms in advance even when they are the best or only available
solution to a programming problem.<footnote><para>Sun Microsystems and
IBM have also made at least a gesture at the problem from the other
direction, by freeing large numbers of software patents&mdash;1600 and
500 respectively&mdash;for use by the open source community.  I am not
a lawyer and thus can't evaluate the real utility of these grants, but
even if they are all important patents, and the terms of the grants
make them truly free for use by any open source project, it would
still be only a drop in the bucket.</para></footnote></para>
-->

<para>
    しかし、特許はあるアイディアを実装することに対して一律に適用されるものです。
    誰がコードを書くかは関係ありませんし、
    どのプログラミング言語を使うかさえ関係ないのです。
    誰かが特許を侵害していると主張してフリーソフトウェアプロジェクトを訴えた途端、
    プロジェクトは特定の機能の実装をやめるか、カネと時間がかかる裁判をしなければなりません。
    このような裁判を起こすのは、十分な資力がある企業なのが普通です &mdash;
    つまり、はじめから特許を買収する資金があり、そうする傾向がある組織です &mdash;
    ほとんどのフリーソフトウェアプロジェクト特許を買い取る余裕はありませんし、
    対象となる特許が法廷で拘束力がないと強く思っていたとしても、
    すぐに降伏しなければならないのです。
    こういう状況をはじめから防ぐには、
    フリーソフトウェアプロジェクトがコードを用心深く書いて、
    たとえ最良かつ唯一の解決策であったとしても、
    特許になっているアルゴリズムをあらかじめ使わないようにすることです
    <footnote>
      <para>
          サン・マイクロシステムズ と IBM は、
          この問題に対して少なくとも別の方向性を打ち出しています。
          彼らは大量のソフトウェア特許 &mdash; それぞれ 1600 と 500 個 &mdash;
          をオープンソースコミュニティーが使えるようにフリーにしました。
          私は法律家ではないので、
          これらの特許が付与されたことがどれくらい有用なのかを評価できません。
          しかしたとえこれらがすべて重要な特許であり、
          特許を付与する条件をオープンソースプロジェクトが使うために本当にフリーなものにしたとしても、
          それは氷山の一角に過ぎないでしょう。
      </para>
    </footnote>。
</para>

<!--
<para>Surveys and anecdotal evidence show that not only the vast
majority of open source programmers, but a majority
of <emphasis>all</emphasis> programmers, think that software patents
should be abolished entirely.<footnote><para>See
<ulink url="http://lpf.ai.mit.edu/Whatsnew/survey.html"/> for one such
survey.</para></footnote> Open source programmers tend to feel
particularly strongly about it, and may refuse to work on projects
that are too closely associated with the collection or enforcement of
software patents.  If your organization collects software patents,
then make it clear, in a public and irrevocable way, that the patents
would never be enforced on open source projects, and that they are
only to be used as a defense in case some other party initiates an
infringement suit against your organization. This is not only the
right thing to do, it's also good open source public relations.<footnote>
<para>For example, RedHat has pledged that open source projects are
safe from its patents, see
<ulink url="http://www.redhat.com/legal/patent_policy.html"/>.</para>
</footnote></para>

-->

<para>
    調査や事例が示す通り、これは大多数のオープンソースプログラマーだけでなく、
    <emphasis>すべての</emphasis> プログラマーの多くが、
    ソフトウェア特許を全面的に廃止すべきだと考えています
    <footnote>
      <para>
        調査の一例として、以下を参照してください。
        <ulink url="http://lpf.ai.mit.edu/Whatsnew/survey.html"/>
      </para>
    </footnote>。
    オープンソースプログラマーは、特に強くそう感じており、
    ソフトウェア特許を集めたり、
    強制することに強く関係しすぎているプロジェクトで働くのを拒否するかもしれません。
    あなたの組織がソフトウェア特許を集めているのなら、
    オープンソースプロジェクトに特許を適用しないこと、
    そして別の組織が特許違反の裁判を起こした場合の、
    防御の手段としてのみ特許を使っていることを取り消せないやり方で明確にしておきましょう。
    これが唯一の正しい手段ではありません。
    オープンソースプロジェクト同士が連携することもよいことです。
    <footnote>
      <para>
        たとえば RedHat は、
        オープンソースプロジェクトは特許に違反しないことを約束しています。
        <ulink url="http://www.redhat.com/legal/patent_policy.html"/> を参照してください。
      </para>
    </footnote>
</para>

<!--
<para>Unfortunately, collecting patents for defensive purposes is a
rational action.  The current patent system, at least in the United
States, is by its nature an arms race: if your competitors have
acquired a lot of patents, then your best defense is to acquire a lot
of patents yourself, so that if you're ever hit with a patent
infringement suit you can respond with a similar threat&mdash;then the
two parties usually sit down and work out a cross-licensing deal so
that neither of them has to pay anything, except to their intellectual
property lawyers of course.</para>
-->

<para>
    不幸なことですが、法的な防御を目的として特許を集めるのは合理的な行動です。
    現在の特許の仕組みはその本質上、少なくともアメリカでは軍拡競争です。
    つまり、競争相手がたくさんの特許を取得した場合、
    最良の防御方法は、特許違反で訴えられたときに逆に訴え返せるように、
    多くの特許を取得することです &mdash; こうしておけば、
    お互いがお金を払わないで済むよう、
    双方が机についてクロスライセンスの取引をするのが普通です。
    もちろん知的財産権専門の法律家には払わないといけませんが。
</para>

<!--
<para>The harm done to free software by software patents is more
insidious than just direct threats to code development, however.
Software patents encourage an atmosphere of secrecy among firmware
designers, who justifiably worry that by publishing details of their
interfaces they will be giving technical help to competitors seeking
to slap them with patent infringement suits.  This is not just a
theoretical danger; it has apparently been happening for a long time
in the video card industry, for example.  Many video card
manufacturers are reluctant to release the detailed programming
specifications needed to produce high-performance open source drivers
for their cards, thus making it impossible for free operating systems
to support those cards to their full potential. Why would the
manufacturers do this?  It doesn't make sense for them to
work <emphasis>against</emphasis> software support; after all,
compatibility with more operating systems can only mean more card
sales.  But it turns out that, behind the design room door, these
shops are all violating one another's patents, sometimes knowingly and
sometimes accidentally.  The patents are so unpredictable and so
potentially broad that no card manufacturer can ever be certain it's
safe, even after doing a patent search.  Thus, manufacturers dare not
publish their full interface specifications, since that would make it
much easier for competitors to figure out whether any patents are
being infringed.  (Of course, the nature of this situation is such
that you will not find a written admission from a primary source that
it is going on; I learned it through a personal communication.)</para>
-->

<para>
    しかし、ソフトウェア特許がフリーソフトウェアに及ぼす害は、
    コードの開発に及ぼすものよりも陰湿なものです。
    ソフトウェア特許はファームウェアの設計者達に秘密主義の雰囲気を助長しています。
    彼らは自分たちが設計したインターフェイスの詳細を公にすると、
    特許違反で訴えるためにあら探しをしている競争相手を技術的に助けてしまうのではないかと心配しているのです。
    これは単なる机上の空論ではありません。
    たとえばビデオカード業界で明らかに起きてきたことなのです。
    多くのビデオカードメーカーは、
    高速に動くオープンソースなデバイスドライバを作るのに必要なプログラミング仕様を公にしてきませんでした。
    よって、そうしたカードの機能を完全にサポートするフリーなオペレーティングシステムを作るのが不可能になっているのです。
    なぜメーカーはそんなことをするのでしょうか？
    ソフトウェアをサポートすることに
    <emphasis>反対すること</emphasis> は理にかなっていません。
    なぜなら、多くのオペレーティングシステムで動くことが、
    ビデオカードの売り上げにつながるからです。しかし、
    あるときは故意に、あるときは偶然、
    こうしたメーカーすべてがデザインルームの裏でお互いに特許を侵害していることが明らかになってきています。よって、メーカーは敢えて完全なインターフェイス仕様を公開しないのです。
    公開することで、特許を侵害していることが競争相手にわかりやすくなってしまうからです。
    (もちろん、こういった性質のことは一次情報源から許可を得て書けることではありません。
     私はこのことを個人的なやりとりで知りました。)
</para>

<!--
<para>Some free software licenses have special clauses to combat, or at
least discourage, software patents.  The GNU GPL, for example, contains
this language:</para>
-->

<para>
    フリーソフトウェアライセンスの中には、ソフトウェア特許と戦ったり、
    もしくは拒絶するための特別な文言を入れているものがあります。
    たとえば、GNU GPL は次のような文言を含めています。
</para>

<!--
<screen>
  7. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

[...]

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.
</screen>
-->

<screen>
    7. 特許侵害あるいはその他の理由(特許関係に限らない)から、裁判所の判決あるいは
       申し立ての結果としてあなたに(裁判所命令や契約などにより)このライセンスの条
       件と矛盾する制約が課された場合でも、あなたがこの契約書の条件を免除されるわ
       けではない。もしこの契約書の下であなたに課せられた責任と他の関連する責任を
       同時に満たすような形で頒布できないならば、結果としてあなたは『プログラム』
       を頒布することが全くできないということである。例えば特許ライセンスが、あな
       たから直接間接を問わずコピーを受け取った人が誰でも『プログラム』を使用料無
       料で再頒布することを認めていない場合、あなたがその制約とこの契約書を両方と
       も満たすには『プログラム』の頒布を完全に中止するしかないだろう。 

       [...]

       特許やその他の財産権を侵害したり、そのような権利の主張の効力に異議を唱えた
       りするようあなたを誘惑することがこの節の目的ではない。この節には、人々によ
       ってライセンス慣行として実現されてきた、フリーソフトウェア頒布のシステムの
       完全性を護るという目的しかない。多くの人々が、フリーソフトウェアの頒布シス
       テムが首尾一貫して適用されているという信頼に基づき、このシステムを通じて頒
       布される多様なソフトウェアに寛大な貢献をしてきたのは事実であるが、人がどの
       ようなシステムを通じてソフトウェアを頒布したいと思うかはあくまでも作者/寄与
       者次第であり、あなたが選択を押しつけることはできない。
       <footnote>
          <para>
              GNU General Public License バージョン 2 のもの。
              <ulink url="http://www.opensource.jp/gpl/gpl.ja.html.euc-jp"/> より引用。
          </para>
       </footnote>
</screen>

<!--
<para>The Apache License, Version 2.0
(<ulink url="http://www.apache.org/licenses/LICENSE-2.0"/>) also
contains anti-patent requirements.  First, it stipulates that anyone
distributing code under the license must implicitly include a
royalty-free patent license for any patents they might hold that could
apply to the code.  Second, and most ingeniously, it punishes anyone
who initiates a patent infringement claim on the covered work, by
automatically terminating their implicit patent license the moment
such a claim is made:</para>
-->

<para>
    Apache License バージョン 2.0 (<ulink url="http://www.apache.org/licenses/LICENSE-2.0"/>)
    も特許に反対する条件を含めています。
    まず第一に、このライセンスでコードを配布する人は、
    自分が保持している特許で配布するコードに適用できるものについては、
    ロイヤリティーがかからない特許ライセンスを与えなければなりません。
    二つめに、
    配布したコードを根拠に特許侵害の訴えを起こした時点でその特許ライセンスを自動的に終了させることで、
    そうした人を巧みに排除しています。
</para>

<!--
<screen>
3. Grant of Patent License. Subject to the terms and conditions of
this License, each Contributor hereby grants to You a perpetual,
worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except
as stated in this section) patent license to make, have made, use,
offer to sell, sell, import, and otherwise transfer the Work, where
such license applies only to those patent claims licensable by such
Contributor that are necessarily infringed by their Contribution(s)
alone or by combination of their Contribution(s) with the Work to
which such Contribution(s) was submitted. If You institute patent
litigation against any entity (including a cross-claim or counterclaim
in a lawsuit) alleging that the Work or a Contribution incorporated
within the Work constitutes direct or contributory patent
infringement, then any patent licenses granted to You under this
License for that Work shall terminate as of the date such litigation
is filed.
</screen>
-->

<screen>
    3. 特許ライセンスの付与

       本ライセンスの条項に従って、各コントリビューターはあなたに対し、成果物
       を作成したり、使用したり、販売したり、販売用に提供したり、インポートし
       たり、その他の方法で移転したりする、無期限で世界規模で非独占的で使用料
       無料で取り消し不能な（この項で明記したものは除く）特許ライセンスを付与
       します。ただし、このようなライセンスは、コントリビューターによってライ
       センス可能な特許申請のうち、当該コントリビューターのコントリビューショ
       ンを単独または該当する成果物と組み合わせて用いることで必然的に侵害され
       るものにのみ適用されます。あなたが誰かに対し、交差請求や反訴を含めて、
       成果物あるいは成果物に組み込まれたコントリビューションが直接または間接
       的な特許侵害に当たるとして特許訴訟を起こした場合、本ライセンスに基づい
       てあなたに付与された特許ライセンスは、そうした訴訟が正式に起こされた時
       点で終了するものとします。
       <footnote>
          <para>
              オープンソースグループ・ジャパン wiki より引用。
              <ulink url="http://sourceforge.jp/projects/opensource/wiki/licenses%2FApache_License_2.0"/>
          </para>
       </footnote>
</screen>

<!--
<para>Although it is useful, both legally and politically, to build
patent defenses into free software licenses this way, in the end these
steps will not be enough to dispel the chilling effect that the threat
of patent lawsuits has on free software.  Only changes in the
substance or interpretation of international patent law will do that.
To learn more about the problem, and how it's being fought, go to
<ulink url="http://www.nosoftwarepatents.com/"/>.  The Wikipedia
article <ulink url="http://en.wikipedia.org/wiki/Software_patent"/>
also has a lot of useful information on software patents.  I've also
written a blog post summarizing the arguments against software
patents, at
<ulink url="http://www.rants.org/2007/05/01/how-to-tell-that-software-patents-are-a-bad-idea/"/>.</para>
-->

<para>
    このように、フリーソフトウェアライセンスに特許から防御するための仕掛けをしておくのは、
    法的にも政治的にも役に立つものです。しかし最終的には、
    フリーソフトウェアに対する特許違反裁判の脅威がもたらす、
    萎縮的効果を払拭するには不十分です。
    それができるの唯一の手段は、国際的な特許法の本質や解釈を変更することだけです。
    この問題について、そしてこの問題と人々がどう戦ってきたのかをさらに知るには、
    <ulink url="http://www.nosoftwarepatents.com/"/> を訪れるとよいでしょう。
    Wikipedia の記事 (<ulink url="http://en.wikipedia.org/wiki/Software_patent"/>)
    にも、ソフトウェア特許に関する有益な情報が多くあります。
    私自身も、ソフトウェア特許に対する議論をまとめたエントリをブログに載せています。
    <ulink url="http://www.rants.org/2007/05/01/how-to-tell-that-software-patents-are-a-bad-idea/"/>
</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="licensing-further-resources">
<!--
<title>Further Resources</title>
-->
<title>さらなる情報源</title>

<!--
<para>This chapter has only been an introduction to free software
licensing issues.  Although I hope it contains enough information to
get you started on your own open source project, any serious
investigation of licensing issues will quickly exhaust what this book
can provide.  Here is a list of further resources on open source
licensing:</para>
-->

<para>
    この章は、フリーソフトウェアに関するライセンス問題をさわりだけ紹介
    したに過ぎません。
    この章の説明が、オープンソースプロジェクトをはじめるための十分な情報源になることを願っていますが、
    真面目にライセンス問題を調べようとすると、すぐに紙面が尽きてしまうでしょう。
    以下には、オープンソースライセンスに関するさらなる情報源を一覧で示します。
</para>

<itemizedlist>
  <listitem>
            <!--
            <para><citetitle>Understanding Open Source and Free
            Software Licensing</citetitle> by Andrew M. St. Laurent.
            Published by O'Reilly Media, first edition August 2004,
            ISBN:&nbsp;0-596-00581-4.</para>
            -->

            <para>
              <citetitle>Understanding Open Source and Free
              Software Licensing</citetitle> Andrew M. St. Laurent著。
              出版: O'Reilly Media、2004年8月初版。ISBN:&nbsp;0-596-00581-4.
            </para>

            <!--
            <para>This is a full-length book on open source licensing
            in all its complexity, including many topics omitted from
            this chapter.  See
            <ulink url="http://www.oreilly.com/catalog/osfreesoft/"/>
            for details.</para>
            -->

            <para>
            この本は、オープンソースライセンスに関する複雑な問題全般を余すところなく記した本です。
            詳細は <ulink url="http://www.oreilly.com/catalog/osfreesoft/"/> を参照してください。
            </para>

  </listitem>

  <listitem>
            <!--
            <para><citetitle>Make Your Open Source Software
            GPL-Compatible.  Or Else.</citetitle> by David
            A. Wheeler, at
            <ulink
            url="http://www.dwheeler.com/essays/gpl-compatible.html"/>.</para>
            -->

            <para><citetitle>Make Your Open Source Software
            GPL-Compatible.  Or Else.</citetitle> David
            A. Wheeler作。
            <ulink url="http://www.dwheeler.com/essays/gpl-compatible.html"/>.</para>

            <!--
            <para>This is a detailed and well-written article on why
            it is important to use a GPL-compatible license even if
            you don't use the GPL itself.  The article also touches on
            many other licensing questions, and has a high density of
            excellent links.</para>
            -->

            <para>これは、たとえあなたがGPLを採用しない場合でも、
            なぜGPLと互換性があるライセンスを使うことが重要なのかについて、
            詳細にうまく書かれた記事です。この記事は、他のライセンスに関する
            疑問についても触れており、密度の濃い優れたリンク集も提供しています。
            </para>

  </listitem>

  <listitem><para><ulink url="http://creativecommons.org/"/></para>

            <!--
            <para>Creative Commons is an organization that promotes a
            range of more flexible and liberal copyrights than
            traditional copyright practice encourages.  They offer
            licenses not just for software, but for text, art, and
            music as well, all accessible via a user-friendly license
            selector; some of the licenses are copylefts, some are
            non-copyleft but still free, others are simply traditional
            copyrights but with some restrictions relaxed.  The
            Creative Commons web site gives extremely clear
            explanations of what it's about.  If I had to pick one
            site to demonstrate the broader philosophical implications
            of the free software movement, this would be it.</para>
            -->

            <para>
            クリエイティブコモンズは、
            これまでの伝統的な著作権が推し進めてきたものよりも、多様、
            かつ柔軟で、リベラルな著作権を広めている組織です。
            彼らはソフトウェア向けのライセンスだけでなく、
            文章、芸術、音楽向けのライセンスも提供しています。
            これらのライセンスは、使いやすいライセンス選択システムによって
            全てが使えるようになっています。
            これらのライセンスの中には、コピーレフトのものもありますし、
            コピーレフトではありませんが、フリーなものもあります。
            また、伝統的な著作権の仕組みを持つライセンスでありながら、
            その制限をいくらか緩めただけのものもあります。
            クリエイティブコモンズのウェブサイトは、
            ライセンスがどんなものなのかを極めて明快に説明しています。
            フリーソフトウェア運動が持つ、
            哲学的で幅広い意味合いを示しているサイトを私がひとつあげるとすれば、
            このサイトを選ぶでしょう。
            </para>

  </listitem>

</itemizedlist>

</sect1>

</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->

