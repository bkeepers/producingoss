<preface id="preface">
<title>Forord</title>
  
<!-- ======================== SECTION ============================== -->
<sect1 id="why">
<title>Hvorfor skrive denne bog?</title>


<para>Til fester, er reaktionen når jeg fortæller at jeg udvikler fri
software ikke længere bare et stift blik ud i rummet.  "Åh, ja, open
source&mdash;ligesom Linux?" siger de.  Jeg nikker ivrigt.  "Ja, præcis!
Det er det jeg beskæftiger mig med."  Det er rart ikke at være komplet
på kanten(!) mere. Før i tiden var det næste spørgsmål normalt rimeligt
forudsigeligt: "Hvordan tjener du penge på det?". Som svar, ville jeg så
kort ridse økonomien omkring open source op: at der er visse
organisationer hvis interesse det er at noget bestemt software eksisterer,
men at de ikke nødvendigvis behøver at sælge kopier af det, men bare vil
være sikker på at softwaren er tilgængelig og bliver vedligeholdt, mere
som værktøj end som en handelsvare.</para>

<para>På det sidste, har det næste spørgsmål dog ikke altid været om
penge. Forretningsmetoden(!) for open source software<footnote><para>
Betegnelserne "open source" og "fri" er i denne sammenhæng i det
væsentligste synonymer; de behandles yderligere i <xref
linkend="free-vs-open-source"/><phrase output="printed"> i <xref
linkend="introduction"/></phrase>.</para></footnote> er ikke længere så
mystisk, og mange ikke-programmører forstår, &mdash;eller er i det
mindste ikke overaskede over&mdash;at der er folk der arbejder med det
på fuld tid.  Istedet er spørgsmålet jeg hører mere og mere
"<emphasis>Okay, hvordan virker det så?</emphasis>"</para>

<para>Jeg havde ikke et tilfredsstillende svar klar, og jo mere jeg
forsøgte at finde et, jo mere måtte jeg indse hvor komplekst emnet
virkelig er. At drive et frit software projekt er ikke det
samme som at drive en forretning (forestil dig konstant at skulle
forhandle om dit produkts indhold med en gruppe frivillige, hvoraf de
fleste er nogen du aldrig har mødt!). Af forskellige årsager er det
heller ikke præcis som at drive en traditionel ikke-for-profit(!)
forening, eller en statsadministration(!). Det har lighedspunkter med
alle disse, men jeg er lige så langsomt kommet til den konklusion at
fri software er <foreignphrase>sui generis</foreignphrase>. Der er
mange ting det kan sammenlignes med, men ingen det kan ikke sidestilles
helt med. Selv antagelsen at et fri software projekt kan "drives" er
lidt af en tilsnigelse. Et frit software projekt kan <emphasis>startes
</emphasis>, og det kan påvirkes af interesserede parter, ofte temmelig
stærkt. Men projektets værdier kan ikke skifte ejerskab til en enkelt
ejer, og så længe der er folk et eller andet sted &mdash;et hvilket som
helst sted&mdash;som er interesserede i at fortsætte det, kan det ikke
lukkes af en enkelt part. Enhver har uendelig magt; enhver har ingen
magt. Det giver en interessant dynamik.</para>

<para>Det er defor jeg ønskede at skrive denne bog. Fri software
projekter har udviklet en (distinct culture) unik klutur(!), et ethos(!)
hvori friheden til at få software til at gøre præcis hvad man vil en
en central tese(!), og dog er resultatet af denne frihed  ikke en
spredning af individer der arbejder i hver deres retning med koden,
men entusiastisk samarbejde. Ja, blot kompetencen i samarbejde i sig
selv, er en af de mest værdsatte evner indenfor fri software. At styre
disse projekter er at kaste sig ud i en slags hypertrofi<footnote><para>
ebnorm forstørrelse af kropsdel eller organ</para></footnote>-ramt
samarbejde, hvor ens evne til, ikke blot at arbejde med andre, men også
at finde på nye måder at arbejde sammen, kan resultere i betydelige
fordele for softwaren. Denne bog forsøger at beskrive teknikker hvormed
dette kan gøres. Den er på ingen måder komplet, men den er i det mindste
en begyndelse.</para>

<para>God fri software er et værdigt mål i sig selv, og jeg håber at
læsere som søger efter måder at opnå det på, vil blive tilfreds med hvad
de finder her. Men udover det håber jeg også at kunne viderebringe noget
af den rene glæde det bringer at arbejde med et motiveret hold af open
source udviklere, og af at interagere med brugere på den herligt direkte
måde som open source tilskynder. At deltage i et successfuldt fri software
projekt er <emphasis>sjovt</emphasis>, og det er i sidste ende præcis det
der holder hele systemet kørende.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="audience">
<title>Who Should Read This Book?</title>

<para>This book is meant for software developers and managers who are
considering starting an open source project, or who have started one
and are wondering what to do now.  It should also be helpful for
people who just want to participate in an open source project but have
never done so before.</para>

<para>The reader need not be a programmer, but should know basic
software engineering concepts such as source code, compilers, and
patches.</para>

<para>Prior experience with open source software, as either a user or
a developer, is not necessary.  Those who have worked in free software
projects before will probably find at least some parts of the book a
bit obvious, and may want to skip those sections.  Because there's
such a potentially wide range of audience experience, I've made an
effort to label sections clearly, and to say when something can be
skipped by those already familiar with the material.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="sources">
<title>Sources</title>

<para>Much of the raw material for this book came from five years of
working with the Subversion project
(<ulink url="http://subversion.tigris.org/"/>).  Subversion is an open
source version control system, written from scratch, and intended to
replace CVS as the <foreignphrase>de facto</foreignphrase> version
control system of choice in the open source community.  The project
was started by my employer, CollabNet
(<ulink url="http://www.collab.net/"/>), in early 2000, and thank
goodness CollabNet understood right from the start how to run it as a
truly collaborative, distributed effort.  We got a lot of volunteer
developer buy-in early on; today there are 50-some developers on
the project, of whom only a few are CollabNet employees.</para>

<para>Subversion is in many ways a classic example of an open source
project, and I ended up drawing on it more heavily than I originally
expected.  This was partly a matter of convenience: whenever I needed
an example of a particular phenomenon, I could usually call one up
from Subversion right off the top of my head.  But it was also a
matter of verification.  Although I am involved in other free software
projects to varying degrees, and talk to friends and acquaintances
involved in many more, one quickly realizes when writing for print
that all assertions need to be fact-checked.  I didn't want to make
statements about events in other projects based only on what I could
read in their public mailing list archives.  If someone were to try
that with Subversion, I knew, she'd be right about half the time and
wrong the other half.  So when drawing inspiration or examples from a
project with which I didn't have direct experience, I tried to first
talk to an informant there, someone I could trust to explain what was
really going on.</para>

<para>Subversion has been my job for the last 5 years, but I've been
involved in free software for 12.  Other projects that influenced this
book include:</para>

<itemizedlist>
  <listitem><para>The GNU Emacs text editor project at the Free
            Software Foundation, in which I maintain a few small
            packages.</para>
  </listitem>
  <listitem><para>Concurrent Versions System (CVS), which I worked on
            intensely in 1994&ndash;1995 with Jim Blandy, but have been
            involved with only intermittently since.</para>
  </listitem>
  <listitem><para>The collection of open source projects known as the
            Apache Software Foundation, especially the Apache Portable
            Runtime (APR) and Apache HTTP Server.</para> 
  </listitem>
  <listitem><para>OpenOffice.org, the Berkeley Database from
            Sleepycat, and MySQL Database; I have not been
            involved with these projects personally, but have observed
            them and, in some cases, talked to people there.</para> 
  </listitem>
  <listitem><para>GNU Debugger (GDB) (likewise).</para>
  </listitem>
  <listitem><para>The Debian Project (likewise).</para>
  </listitem>
</itemizedlist>

<para>This is not a complete list, of course.  Like most open source
programmers, I keep loose tabs on many different projects, just to
have a sense of the general state of things.  I won't name all of them
here, but they are mentioned in the text where appropriate.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="acknowledgments">
<title>Acknowledgments</title>

<para>This book took four times longer to write than I thought it
would, and for much of that time felt rather like a grand piano
suspended above my head wherever I went.  Without help from many
people, I would not have been able to complete it while staying
sane.</para>

<para>Andy Oram, my editor at O'Reilly, was a writer's dream.  Aside
from knowing the field intimately (he suggested many of the topics),
he has the rare gift of knowing what one meant to say and helping one
find the right way to say it.  It has been an honor to work with him.
Thanks also to Chuck Toporek for steering this proposal to Andy right
away.</para>

<para>Brian Fitzpatrick reviewed almost all of the material as I wrote
it, which not only made the book better, but kept me writing when I
wanted to be anywhere in the world but in front of the computer.  Ben
Collins-Sussman and Mike Pilato also checked up on progress, and were
always happy to discuss&mdash;sometimes at length&mdash;whatever topic
I was trying to cover that week.  They also noticed when I slowed
down, and gently nagged when necessary.  Thanks, guys.</para>

<para>Biella Coleman was writing her dissertation at the same time
I was writing this book.  She knows what it means to sit down and
write every day, and provided an inspiring example as well as a
sympathetic ear.  She also has a fascinating anthropologist's-eye view
of the free software movement, giving both ideas and references that I
was able use in the book.  Alex Golub&mdash;another anthropologist
with one foot in the free software world, and also finishing his
dissertation at the same time&mdash;was exceptionally supportive early
on, which helped a great deal.</para>

<para>Micah Anderson somehow never seemed too oppressed by his own
writing gig, which was inspiring in a sick, envy-generating sort of
way, but he was ever ready with friendship, conversation, and (on at
least one occasion) technical support.  Thanks, Micah!</para>

<para>Jon Trowbridge and Sander Striker gave both encouragement and
concrete help&mdash;their broad experience in free software provided
material I couldn't have gotten any other way.</para>

<para>Thanks to Greg Stein not only for friendship and well-timed
encouragement, but for showing the Subversion project how important
regular code review is in building a programming community.  Thanks
also to Brian Behlendorf, who tactfully drummed into our heads the
importance of having discussions publicly; I hope that principle is
reflected throughout this book.</para>

<para>Thanks to Benjamin "Mako" Hill and Seth Schoen, for various
conversations about free software and its politics; to Zack Urlocker
and Louis Suarez-Potts for taking time out of their busy schedules to
be interviewed; to Shane on the Slashcode list for allowing his post
to be quoted; and to Haggen So for his enormously helpful comparison
of canned hosting sites.</para>

<para>Thanks to Alla Dekhtyar, Polina, and Sonya for their unflagging
and patient encouragement.  I'm very glad that I will no longer have
to end (or rather, try unsuccessfully to end) our evenings early to go
home and work on "The Book."</para>

<para>Thanks to Jack Repenning for friendship, conversation, and a
stubborn refusal to ever accept an easy wrong analysis when a harder
right one is available.  I hope that some of his long experience with
both software development and the software industry rubbed off on this
book.</para>

<para>CollabNet was exceptionally generous in allowing me a flexible
schedule to write, and didn't complain when it went on far longer than
originally planned.  I don't know all the intricacies of how
management arrives at such decisions, but I suspect Sandhya Klute, and
later Mahesh Murthy, had something to do with it&mdash;my thanks to
them both.</para>

<para>The entire Subversion development team has been an inspiration
for the past five years, and much of what is in this book I learned
from working with them.  I won't thank them all by name here, because
there are too many, but I implore any reader who runs into a
Subversion committer to immediately buy that committer the drink of
his choice&mdash;I certainly plan to.</para>

<para>Many times I ranted to Rachel Scollon about the state of the
book; she was always willing to listen, and somehow managed to make
the problems seem smaller than before we talked.  That helped a
lot&mdash;thanks.</para>

<para>Thanks (again) to Noel Taylor, who must surely have wondered why
I wanted to write another book given how much I complained the last
time, but whose friendship and leadership of Golos&aacute; helped keep
music and good fellowship in my life even in the busiest times.
Thanks also to Matthew Dean and Dorothea Samtleben, friends and
long-suffering musical partners, who were very understanding as my
excuses for not practicing piled up.  Megan Jennings was constantly
supportive, and genuinely interested in the topic even though it was
unfamiliar to her&mdash;a great tonic for an insecure writer.  Thanks,
pal!</para>

<para>I had four knowledgeable and diligent reviewers for this book:
Yoav Shapira, Andrew Stellman, Davanum Srinivas, and Ben Hyde.  If I
had been able to incorporate all of their excellent suggestions, this
would be a better book.  As it was, time constraints forced me to pick
and choose, but the improvements were still significant.  Any errors
that remain are entirely my own.</para>

<para>My parents, Frances and Henry, were wonderfully supportive as
always, and as this book is less technical than the previous one, I
hope they'll find it somewhat more readable.</para>

<para>Finally, I would like to thank the dedicatees, Karen Underhill
and Jim Blandy.  Karen's friendship and understanding have meant
everything to me, not only during the writing of this book but for the
last seven years.  I simply would not have finished without her help.
Likewise for Jim, a true friend and a hacker's hacker, who first
taught me about free software, much as a bird might teach an airplane
about flying.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="disclaimer">
<title>Disclaimer</title>

<para>The thoughts and opinions expressed in this book are my own.
They do not necessarily represent the views of CollabNet or of the
Subversion project.</para>

</sect1>

</preface>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
