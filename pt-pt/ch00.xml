<preface id="preface">
<title>Prefácio</title>
  
<!-- ======================== SECTION ============================== -->
<sect1 id="why">
<title>Porquê escrever este livro?</title>

<para>Em festas, as pessoas já não me dirigem olhares vazios quando lhes digo que escrevo software livre. "Ah, sim, software livre&mdash;como Linux?" dizem-me. Aceno concordantemente a cabeça. "Sim, exactamente! É isso que faço." Como é bom não me sentir mais à margem. Antigamente, a pergunta seguinte era bastante previsível: "Como é que fazes dinheiro dessa forma?" Para responder, teria de resumir as bases económicas do software livre: existem organizações cujo interesse está na disponibilidade de certo software, mas que não precisam de vender cópias. Tão somente, precisam de garantir a sua disponibilidade e manutenção, como ferramenta em vez de comodidade.</para>

<para>Ultimamente, porém, a pergunta seguinte não tem sido sempre sobre dinheiro. As oportunidades de negócio para software livre<footnote><para>Os termos "open source" e "livre" são essencialmente sinónimos neste contexto; são discutidos mais a fundo em <xref linkend="free-vs-open-source"/><phrase output="printed"> em
<xref linkend="introduction"/></phrase>.</para></footnote> já não são tão misteriosas e muitos não-programadores já compreendem&mdash;ou, pelo menos, não se surpreendem&mdash;que há pessoas empregadas neste contexto a tempo inteiro. Pelo contrário, a questão que tenho ouvido cada vez mais é "<emphasis>Oh, como é que isso funciona?</emphasis>"</para>

<para>Eu não tinha uma resposta satisfatória pronta e, quanto mais tentava produzir uma, mais eu concluía quão complexo é este tópico. Gerir um projecto de software livre não é exactamente o mesmo que gerir um negócio (imagine ter de negociar constantemente a natureza do seu produto com um grupo de voluntários, muitos dos quais nunca viu!). Nem, por várias razões, é o mesmo que gerir uma organização sem fins lucrativos tradicional, ou um governo. Tem semelhanças com todas estas situações, mas tenho chegado progressivamente à conclusão de que o software livre é <foreignphrase>sui generis</foreignphrase>. Há muitas coisas com as quais pode ser comparado proveitosamente, mas nenhuma com a qual possa ser igualado. De facto, até mesmo assumir que projectos de software livre podem ser "geridos" é já forçar um pouco o conceito. Um projecto de software livre pode ser <emphasis>iniciado</emphasis>, e pode ser influenciado por partes interessadas, muitas vezes de forma intensa. Os seus bens, todavia, não podem ser tornados propriedade de nenhum proprietário individual e, enquanto houver pessoas algures&mdash;seja em que lugar for&mdash;interessadas em continuar o projecto, não pode ser encerrado unilateralmente. Todos têm poder infinito; todos têm poder nulo. Surge assim uma dinâmica interessante.</para>

<para>Foi por isso que quis escrever este livro. Os projectos de software livre desenvolveram uma cultura distinta, um <emphasis>ethos</emphasis> onde a liberdade de tornar o software capaz de fazer o que quisermos é um aspecto fundamental e, no entanto, o resultado desta liberdade não é a desagregação de indivíduos seguindo cada um o seu próprio rumo com o código, mas antes uma entusiástica colaboração.
De facto, competência na própria colaboração é uma das capacidades mais valorizadas no software livre. Gerir estes projectos é entrar numa forma hipertrófica de cooperação, onde a habilidade de cada um para não apenas trabalhar com outros mas também criar novas formas de colaboração conjunta pode resultar em benefícios tangíveis para o software. Este livro tenta descrever as técnicas pelas quais isto é conseguido. Não é certamente completo, mas é pelo menos um início.</para>

<para>Software livre de qualidade é um objectivo valioso em si mesmo, e eu espero que os leitores que buscam aqui formas de o alcançar fiquem satisfeitos com o que encontram aqui. Mas, para além disso, espero também transmitir um pouco da satisfação em trabalhar com uma equipa motivada de programadores de software livre e em interagir com utilizadores na forma maravilhosamente directa encorajada pelo open source. Participar num projecto de software livre bem sucedido é <emphasis>divertido</emphasis>, e em última análise é isto que faz todo o sistema avançar.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="audience">
<title>Quem deve ler este livro?</title>

<para>Este livro é destinado a programadores de software e gestores que estão pensando iniciar um projecto de software livre, ou que já iniciaram e pensam no que fazer em seguida. Deverá também ser útil àqueles que querem apenas participar num projecto de software livre, sem experiência prévia.</para>

<para>O leitor não precisa de ser programador, mas deve conhecer conceitos básicos de engenharia de software como código-fonte, compiladores e patches.</para>

<para>Experiência prévia com software livre, como utilizador ou programador, não é necessária. Os que já trabalharam antes em projectos de software livre irão provavelmente achar um pouco óbvias algumas partes do livro, e poderão querer saltar essas secções. Dado que a experiência da audiência é potencialmente alargada, fiz um esforço para identificar claramente as secções, indicando que material pode ser saltado para aqueles já familiarizados com este.</para>


</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="sources">
<title>Fontes</title>

<para>Muita da matéria-prima para este livro resultou de cinco anos de trabalho com o projecto Subversion (<ulink url="http://subversion.tigris.org/"/>).  Subversion é um sistema livre de controlo de versões, escrito de raíz com o propósito de substituir CVS como o sistema de controlo de versões <foreignphrase>de facto</foreignphrase> predilecto da comunidade open source. O projecto foi iniciado pelo meu empregador, CollabNet
(<ulink url="http://www.collab.net/"/>), no início de 2000 e, felizmente, CollabNet compreendeu de imediato como geri-lo como um esforço distribuído verdadeiramente colaborativo. Tivemos desde muito cedo um grande envolvimento de programadores voluntários; hoje existem cerca de 50 programadores no projecto, dos quais apenas alguns são empregados pela CollabNet.</para>

<para>Subversion é em muitos aspectos um exemplo clássico de um
projecto de software livre e eu acabei por me basear nele mais do que
esperava inicialmente. Isto acontece em parte por conveniência: sempre
que precisei de um exemplo de algum fenómeno particular, podia
normalmente lembrar-me de cabeça de algo ocorrido no Subversion. Foi,
todavia, também por necessitar de verificação. Embora esteja envolvido
noutros projectos de software livre a vários níveis e falado com
amigos e conhecidos envolvidos em muitos outros, rapidamente
apercebemo-nos de que as ideias precisam de ser confirmadas com
factos. Eu não quis fazer afirmações sobre eventos noutros projectos
baseado apenas no que podia ler nos arquivos públicos das listas de
email. Se alguém tentasse fazer o mesmo com o Subversion, eu sabia que
estaria correcto em metade das vezes e errado nas restantes. Assim,
quando quis buscar inspiração ou exemplos de um projecto com o qual
não tinha experiência directa, tentei primeiro falar com alguém
envolvido em quem eu pudesse confiar para me explicar o que realmente
estava sucedendo.</para>

<para>Subversion é o meu emprego desde há 5 anos, mas tenho estado envolvido no software livre há 12. Outros projectos que influenciaram este livro incluem:</para>

<itemizedlist>
  <listitem><para>O projecto do editor de texto GNU Emacs na Free 
Software Foundation, onde mantenho alguns pequenos pacotes.</para>
  </listitem>
  <listitem><para>Concurrent Versions System (CVS), no qual trabalhei intensamente em 1994&ndash;1995 com Jim Blandy, estando apenas ocasionalmente envolvido desde então.</para>
  </listitem>
  <listitem><para>A colecção de projectos open source conhecida como Apache Software Foundation, especialmente o Apache Portable Runtime (APR) e o Servidor HTTP Apache.</para> 
  </listitem>
  <listitem><para>OpenOffice.org, a Base de Dados Berkeley de
            Sleepycat e a Base de Dados MySQL; não tenho estado pessoalmente envolvido nestes projectos, mas tenho-os observado e, em alguns casos, falado com pessoas participantes neles.</para> 
  </listitem>
  <listitem><para>GNU Debugger (GDB) (semelhantemente).</para>
  </listitem>
  <listitem><para>O Projecto Debian (semelhantemente).</para>
  </listitem>
</itemizedlist>

<para>Esta não é uma lista completa, evidentemente. Tal como a maioria dos programadores open source, vou observando muitos projectos diferentes, só para ter noção do estado geral. Não vou nomeá-los todos aqui, mas serão mencionados no texto sempre que for apropriado.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="acknowledgments">
<title>Agradecimentos</title>

<para>Este livro demorou a escrever o quádruplo do tempo que eu tinha julgado inicialmente necessário e, durante grande parte desse tempo, senti como que um piano estivesse suspenso sobre mim onde quer que fosse. Sem a ajuda de muitas pessoas, não teria sido capaz de completá-lo mantendo-me são.</para>

<para>Andy Oram, o meu editor na O'Reilly, foi o sonho de qualquer escritor. Para além de conhecer a fundo o assunto (sugeriu muitos dos tópicos), ele tem a virtude rara de saber o que queremos dizer e de nos ajudar a encontrar a forma correcta de o fazer. Tem sido uma honra trabalhar com ele. Agradeço também a Chuck Toporek por encaminhar esta proposta ao Andy.</para>

<para>Brian Fitzpatrick reviu praticamente todo o material à medida que o fui escrevendo, o que não apenas tornou o livro melhor, mas também incitou-me a continuar escrever mesmo quando era a última coisa que desejava no momento. Ben Collins-Sussman e Mike Pilato foram também olhando o progresso e estavam sempre dispostos a discutir&mdash;às vezes em profundidade&mdash;qualquer que fosse o tópico que estava tentando cobrir nessa semana. Eles também notaram sempre que eu abrandava e gentilmente animaram-me a continuar quando necessário. Obrigado, rapazes.</para>

<para>Biella Coleman estava escrevendo a sua dissertação ao mesmo tempo que eu escrevia este livro. Ele sabe o que é sentar e escrever todos os dias e foi um exemplo inspirador, bem como um alguém que soube ouvir. Ela também tem um ponto de vista fascinante de antropóloga, dando ideias e referências que pude utilizar no livro. Alex Golub&mdash;outro antropólogo com um pé no mundo do software livre, também concluíndo a sua dissertação ao mesmo tempo&mdash; foi um apoio excepcional desde cedo, o que ajudou imenso.</para>

<para>Micah Anderson somehow never seemed too oppressed by his own
writing gig, which was inspiring in a sick, envy-generating sort of
way, but he was ever ready with friendship, conversation, and (on at
least one occasion) technical support.  Thanks, Micah!</para>

<para>Jon Trowbridge and Sander Striker gave both encouragement and
concrete help&mdash;their broad experience in free software provided
material I couldn't have gotten any other way.</para>

<para>Thanks to Greg Stein not only for friendship and well-timed
encouragement, but for showing the Subversion project how important
regular code review is in building a programming community.  Thanks
also to Brian Behlendorf, who tactfully drummed into our heads the
importance of having discussions publicly; I hope that principle is
reflected throughout this book.</para>

<para>Thanks to Benjamin "Mako" Hill and Seth Schoen, for various
conversations about free software and its politics; to Zack Urlocker
and Louis Suarez-Potts for taking time out of their busy schedules to
be interviewed; to Shane on the Slashcode list for allowing his post
to be quoted; and to Haggen So for his enormously helpful comparison
of canned hosting sites.</para>

<para>Thanks to Alla Dekhtyar, Polina, and Sonya for their unflagging
and patient encouragement.  I'm very glad that I will no longer have
to end (or rather, try unsuccessfully to end) our evenings early to go
home and work on "The Book."</para>

<para>Thanks to Jack Repenning for friendship, conversation, and a
stubborn refusal to ever accept an easy wrong analysis when a harder
right one is available.  I hope that some of his long experience with
both software development and the software industry rubbed off on this
book.</para>

<para>CollabNet was exceptionally generous in allowing me a flexible
schedule to write, and didn't complain when it went on far longer than
originally planned.  I don't know all the intricacies of how
management arrives at such decisions, but I suspect Sandhya Klute, and
later Mahesh Murthy, had something to do with it&mdash;my thanks to
them both.</para>

<para>The entire Subversion development team has been an inspiration
for the past five years, and much of what is in this book I learned
from working with them.  I won't thank them all by name here, because
there are too many, but I implore any reader who runs into a
Subversion committer to immediately buy that committer the drink of
his choice&mdash;I certainly plan to.</para>

<para>Many times I ranted to Rachel Scollon about the state of the
book; she was always willing to listen, and somehow managed to make
the problems seem smaller than before we talked.  That helped a
lot&mdash;thanks.</para>

<para>Thanks (again) to Noel Taylor, who must surely have wondered why
I wanted to write another book given how much I complained the last
time, but whose friendship and leadership of Golos&aacute; helped keep
music and good fellowship in my life even in the busiest times.
Thanks also to Matthew Dean and Dorothea Samtleben, friends and
long-suffering musical partners, who were very understanding as my
excuses for not practicing piled up.  Megan Jennings was constantly
supportive, and genuinely interested in the topic even though it was
unfamiliar to her&mdash;a great tonic for an insecure writer.  Thanks,
pal!</para>

<para>I had four knowledgeable and diligent reviewers for this book:
Yoav Shapira, Andrew Stellman, Davanum Srinivas, and Ben Hyde.  If I
had been able to incorporate all of their excellent suggestions, this
would be a better book.  As it was, time constraints forced me to pick
and choose, but the improvements were still significant.  Any errors
that remain are entirely my own.</para>

<para>My parents, Frances and Henry, were wonderfully supportive as
always, and as this book is less technical than the previous one, I
hope they'll find it somewhat more readable.</para>

<para>Finally, I would like to thank the dedicatees, Karen Underhill
and Jim Blandy.  Karen's friendship and understanding have meant
everything to me, not only during the writing of this book but for the
last seven years.  I simply would not have finished without her help.
Likewise for Jim, a true friend and a hacker's hacker, who first
taught me about free software, much as a bird might teach an airplane
about flying.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="disclaimer">
<title>Aviso</title>

<para>Os pensamentos e opiniões expressados neste livro são da minha autoria.
Não representam necessariamente os pontos de vista de CollabNet ou do projecto Subversion.</para>

</sect1>

</preface>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
