     Oh Most Wise and Majestic Emacs, please be in -*- text -*- mode!

* The Apache glossary http://www.apache.org/foundation/glossary.html
  might be nice to refer to as an external glossary.  It's a good
  browse.

* Henry's thoughts on delegation.

* discussion about always asking someone to do something, but tell
    them to ping you if they can't, and remember independently anyway.
* CIA / RSS  ... really, *all* standard tools (freenode!)
* Freshmeat / SourceForge "vitality" measures and what they really mean

* include the bikeshed post in full (got permission from Poul-Henning
  Kamp, see received.mbox)

* the STATUS file for releases: remember the issue tracker vs file
  debate?  File turned out to be better.  Say why.

* EXAMPLE: How it's possible to train volunteers to adhere to very
  complex development guidelines, if you do it amiably and always
  being understanding of slips.  Tell the ?? story: remember being
  amazed at how they claimed they could never get their paid
  employees to adhere to the log message guidelines that we've gotten
  virtually all Subversion developers (50+!) to adhere to
  *voluntarily*.

* user account mgmt on the project web site?
  Maybe, but emphasize that login should *never* be required for read
  access.  Everything -- code, issue tracker, etc -- should be
  accessible anonymously.  login to file issues is barely acceptable :-).
* tell the Jefferson story, in the "productive threads" &
  "non-drive-by proposals" department.
* the tension between shared culture and hostile exclusivity
* politics: why horse-trading is inevitable, whether acknowledged or not
* do a grep for "issue", replace with "bug", just in case

* The svn release manager debacle and how it was caused it by not
  being sensitive enough to someone's feelings & motivations. (Chapter 8?)

* for Chapter 2: don't make your home page be something like
  http://www.cc.utah.edu/~nb3367/.  People will assume it's not going
  to be around after the end of the school year.  (That particular
  home page is about the worst project front page in history, btw.)

* jim's point about how your writing *is* you on the 'Net.

* talk about the wide varieties of psychological preparedness for open
  development among different people (Mikes vs Noels).

* "Software Development and Cosmic Rays" essay, ~/mail/sp-outwent
  (where else?  oh, duh, in www/writings)

* Ben's notes on People Behaving Badly (see ben.txt)

* examples.mbox

* another example: inclusion of internal issue numbers in scarab commits

* What is rude / not rude in the free software world?
    - technical criticism is a form of flattery
    - unadorned questions are less often rhetorical or mocking
    - accusing someone of a certain "tone" without concrete examples
    - not taking time to *provide* concrete examples, and not
      acknowledging that one has not taken the time.  None of this
      means that you must do these things every time; rather, it
      means you must recognize when you don't that you have fallen on
      one side of a cultural norm, and this must be acknowledged
      and/or accounted for in some way.

* Shane's response to my slashcode-general post is a *perfect* example
  of what sounds like coldness, but is actually an unadorned offer to
  help.  It's in examples.mbox.

* Bruno Latour: "Aramis"!

* "Here is what I was *going* to write: that a good maintainer must
  often play the role of 'honest broker', and conspicuously avoid
  taking a stand on a technical or process issue at first, attempting
  instead to elicit the best arguments from all parties so the
  tradeoffs are laid out before everyone.  But in practice, have I
  done this?  No, instead I almost always take an initial stand, and
  then flip-flop several times during the course of the discussion."
  Is this as productive, and if so why?  If not, what effects *does*
  it have?

* the "lone genuis" exception: you can get a lot done if you're just
  *that* good.  But then, you probably don't need this book.

  I have several friends who know [omitted] to some degree.  One of them
  said "he often walks the fine line between genius and lunatic."  The
  problem is, genius is such a commodity these days, that it's not
  acceptable to be an eccentric any more.

                -Greg Hudson

* The Debian New Maintainer process as a fantastic example of
  conscious training / indoctrination.

* Conversation with Sander, re: ASF guidelines, territoriality,
  <author> tags, etc.

* Express the turns-out-to-be wrong thought that a free-beer
  application can kill off any possibility of an open source app
  taking its place (thought this was happening with Netscape).  It's
  not true; it just slows the open source app development down a bit.
  Acknowledge the Mozilla mistake.

* Jim's point about co-ops that weren't content just to solve a
  limited problem, but had to solve *everything*.  "Okay, I can see
  how this ensures we have access to whole grains through the winter,
  but how does it solve the problems of world hunger, and is it doing
  anything to bring relief to oppressed peoples?"

* The emacs-devel bug-tracking discussion (whew).

* Greg's "no power plants" rule; the Mozilla "super review" system.

* What is openfoundry.org?  They host the bugtracker for svk, apparently.

* Erik's comments on the IRC section in Chapter 3:

  <dionisos> been reading from your link a bit. interesting reading.
  <dionisos> you may want to state that longer texts in the info bot
  are usually easier to understand from the recipients POV. Also,
  those can be sent privately to take some 'burden' off the channel at
  busy times. 
  <dionisos> a nice bot example is 'minion' in #lisp: a bot with an attitude :-)
  <kfogel> thanks for the tips!

* Another paste site: http://nopaste.php-q.net.

* Fitz says:
  When discussing a decision on a mailing list, it's easy for a
  minority to give the impression that there is a great deal of
  dissent by flooding the list with numerous lengthy emails.  It's
  almost the electronic equivalent of the filibuster.
